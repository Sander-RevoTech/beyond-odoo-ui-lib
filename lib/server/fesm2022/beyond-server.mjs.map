{"version":3,"file":"beyond-server.mjs","sources":["../../../projects/server/src/lib/services/graphql/models/graphSchema.ts","../../../projects/server/src/lib/services/dto/keyvalue.ts","../../../projects/server/src/lib/helpers/handle-request.ts","../../../projects/server/src/lib/services/logger.ts","../../../projects/server/src/lib/services/server/api/requestMap.ts","../../../projects/server/src/lib/services/server/response.ts","../../../projects/server/src/lib/services/server/api/server.service.ts","../../../projects/server/src/lib/services/graphql/models/graphConfig.ts","../../../projects/server/src/lib/services/graphql/helpers/queries.ts","../../../projects/server/src/lib/services/graphql/helpers/mutations.ts","../../../projects/server/src/lib/services/graphql/graph.service.ts","../../../projects/server/src/lib/services/server/baseService.ts","../../../projects/server/src/lib/services/server/cacheInterceptor.ts","../../../projects/server/src/lib/types/cache.ts","../../../projects/server/src/lib/services/server/request.ts","../../../projects/server/src/lib/services/server/token.ts","../../../projects/server/src/lib/services/user/permissions.services..ts","../../../projects/server/src/lib/interceptor/bearerInterceptor.ts","../../../projects/server/src/lib/provider.ts","../../../projects/server/src/public-api.ts","../../../projects/server/src/beyond-server.ts"],"sourcesContent":["export class GraphSchema<T> {\r\n  constructor(private _fields: Array<keyof T>) {}\r\n\r\n  get(field: keyof T) {\r\n    return this._fields.find(x => x === field);\r\n  }\r\n}\r\n","import { GraphSchema } from '../graphql/models/graphSchema';\r\n\r\nexport interface KeyValue {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\nexport const keyValueProps = new GraphSchema<KeyValue>(['key', 'value']);\r\n","import { isNonNullable } from '@beyond/utils';\r\nimport { BehaviorSubject, Observable, filter, map, tap } from 'rxjs';\r\n\r\nexport class HandleComplexRequest<T> {\r\n  public data$ = new BehaviorSubject<{ [index: string | number]: T }>({});\r\n\r\n  constructor() {}\r\n\r\n  public fetch(id: string | number, subscriber: Observable<T>) {\r\n    return subscriber.pipe(\r\n      filter(data => !!data),\r\n      tap(entity => {\r\n        const entities = this.data$.getValue();\r\n        entities[id] = entity;\r\n        this.data$.next(entities);\r\n      })\r\n    );\r\n  }\r\n\r\n  public update(id: string | number, item: T, merge: boolean = true) {\r\n    const entities = this.data$.getValue();\r\n\r\n    if (!entities[id]) {\r\n      return;\r\n    }\r\n    entities[id] = merge ? { ...entities[id], ...item } : item;\r\n    this.data$.next(entities);\r\n  }\r\n  public get(key: string | number) {\r\n    return this.data$.getValue()[key] ?? null;\r\n  }\r\n\r\n  public get$(key: string | number) {\r\n    return this.data$.pipe(\r\n      map(data => data[key]),\r\n      filter(data => !!data)\r\n    );\r\n  }\r\n}\r\n\r\nexport class HandleSimpleRequest<T> {\r\n  public data$ = new BehaviorSubject<T | null>(null);\r\n\r\n  constructor() {}\r\n\r\n  public fetch(subscriber: Observable<T | undefined | null>) {\r\n    return subscriber.pipe(\r\n      filter(isNonNullable),\r\n      tap(entity => {\r\n        this.data$.next(entity);\r\n      })\r\n    );\r\n  }\r\n  public get() {\r\n    return this.data$.getValue() ?? null;\r\n  }\r\n\r\n  public get$() {\r\n    return this.data$.pipe(filter(data => !!data));\r\n  }\r\n}\r\n","export class Logger {\r\n  public static DEBUG: Number = 0;\r\n  public static INFO: Number = 1;\r\n  public static WARNING: Number = 2;\r\n  public static ERROR: Number = 3;\r\n\r\n  public static config = { DEBUG: true, DEBUG_LEVEL: Logger.DEBUG };\r\n\r\n  public static LogDebug(message: string, data?: string | Object | any): void {\r\n    if (data === undefined) {\r\n      data = '';\r\n    }\r\n\r\n    if (Logger.config.DEBUG && Logger.DEBUG >= Logger.config.DEBUG_LEVEL) {\r\n      // tslint:disable-next-line:no-console\r\n      console.debug(message, data);\r\n    }\r\n    this._fsLog('log', message, data);\r\n  }\r\n\r\n  public static LogInfo(message: string, ...data: any[]): void {\r\n    if (Logger.config.DEBUG && Logger.INFO >= Logger.config.DEBUG_LEVEL) {\r\n      // tslint:disable-next-line:no-console\r\n      console.info(message, data);\r\n    }\r\n    this._fsLog('info', message, data);\r\n  }\r\n\r\n  public static LogWarning(message: string, data?: string | Object | any): void {\r\n    if (data === undefined) {\r\n      data = '';\r\n    }\r\n\r\n    if (Logger.config.DEBUG && Logger.WARNING >= Logger.config.DEBUG_LEVEL) {\r\n      console.warn('/!\\\\ ' + message + ' /!\\\\', data);\r\n    }\r\n    this._fsLog('warn', message, data);\r\n  }\r\n\r\n  public static LogError(message: string, data?: any): void {\r\n    if (data === undefined) {\r\n      data = '';\r\n    }\r\n\r\n    if (Logger.config.DEBUG && Logger.ERROR >= Logger.config.DEBUG_LEVEL) {\r\n      console.error('/!\\\\ ' + message + ' /!\\\\', data);\r\n    }\r\n    this._fsLog('error', message, data);\r\n  }\r\n\r\n  private static _fsLog(logLevel: string, message: string, data?: any) {\r\n    if ((<any>window).FS) {\r\n      (<any>window).FS.log(logLevel, `${message} | data: ${JSON.stringify(data)}`);\r\n    }\r\n  }\r\n}\r\n","import { Logger } from '../../logger';\r\nimport { Request } from '../request';\r\n\r\nexport interface IRequestMap {\r\n  type: 'POST' | 'GET' | 'DELETE' | 'PUT' | 'PATCH' | 'FILES' | 'UPDATEFILES';\r\n  url: string;\r\n}\r\n\r\nexport type MappingApiType = { [index: string]: IRequestMap };\r\nclass RequestMapCore {\r\n  public mappingApi: MappingApiType = {};\r\n\r\n  public register(routes: MappingApiType) {\r\n    for (const key in routes) {\r\n      this.mappingApi[key] = routes[key];\r\n    }\r\n  }\r\n  public getConfigById(id: string): IRequestMap | null {\r\n    return this._getConfigById(id);\r\n  }\r\n  public parseUrl(data: { serverUrl: string; url: string; request: Request; apiExt?: string }): string {\r\n    return this._formatUrl(data.serverUrl, data.url, data.request) + '' + (data.apiExt ?? '');\r\n  }\r\n\r\n  private _getConfigById(id: string): IRequestMap | null {\r\n    if (this.mappingApi.hasOwnProperty(id)) {\r\n      return this.mappingApi[id];\r\n    }\r\n    Logger.LogError('No Api Configuration found for: ', id);\r\n    return null;\r\n  }\r\n\r\n  private _formatUrl(serverUrl: string, url: string, request: Request): string {\r\n    return url.replace(/{(\\w+)}/g, function (match, string) {\r\n      if (request.urlData !== null && request.urlData.hasOwnProperty(string)) {\r\n        return request.urlData[string];\r\n      }\r\n      if (request.BrutContent !== null && request.BrutContent.hasOwnProperty(string)) {\r\n        return request.BrutContent[string];\r\n      }\r\n      if (string === 'ApiUrl') {\r\n        return serverUrl;\r\n      }\r\n      return match;\r\n    });\r\n  }\r\n}\r\n\r\nexport const RequestMap = new RequestMapCore();\r\n","interface IHeaders {\r\n  destination: string;\r\n}\r\n\r\nexport interface IBackResponse {\r\n  data: object;\r\n}\r\nexport interface IResponse {\r\n  body: string | IBaseResponse;\r\n  headers?: IHeaders;\r\n}\r\nexport enum StatusReponse {\r\n  Unknown = 0,\r\n  Successful = 200,\r\n  NoContent = 204,\r\n  Unauthorized = 401,\r\n  Forbidden = 403,\r\n  Error = 500,\r\n}\r\nexport interface IBaseResponse {\r\n  Status: StatusReponse;\r\n  Content: Object;\r\n}\r\nexport interface IGetTokenResponse extends IBaseResponse {\r\n  token: string;\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, InjectionToken, Optional, inject } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { Logger } from '../../logger';\r\nimport { BydPermissionsServices } from '../../user/permissions.services.';\r\nimport { Correlation, TempRequest } from '../interface';\r\nimport { Request } from '../request';\r\nimport { IBackResponse, IBaseResponse, IResponse, StatusReponse } from '../response';\r\nimport { MappingApiType, RequestMap } from './requestMap';\r\n\r\nexport const SERVER_CONFIG_KEY = new InjectionToken<IServerConfig>('config_server');\r\nexport interface IServerConfig {\r\n  pendindRequestId: number;\r\n  serverUrl: string;\r\n  apiExt?: string;\r\n}\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydServerSevice {\r\n  private readonly _config = inject(SERVER_CONFIG_KEY);\r\n\r\n  readonly $http = inject(HttpClient);\r\n\r\n  get requestInProgressNumber(): number {\r\n    return this._correlations.length;\r\n  }\r\n\r\n  private _tempLoginRequiredRequest: TempRequest[] = [];\r\n  private _tempPendingRequest: TempRequest[] = [];\r\n\r\n  private _correlations: Correlation[] = [];\r\n\r\n  private _isAuthenticated = false;\r\n  get isAuthenticated() {\r\n    return this._isAuthenticated;\r\n  }\r\n  set isAuthenticated(value: boolean) {\r\n    this._isAuthenticated = value;\r\n    if (this._isAuthenticated) {\r\n      this._retryLoginRequired();\r\n    }\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  public registerRoutes(routes: MappingApiType) {\r\n    RequestMap.register(routes);\r\n  }\r\n\r\n  public request<T>(request: Request): Subject<T> {\r\n    const subject = new Subject<Object>();\r\n    this._send(subject, request);\r\n    return subject as unknown as Subject<T>;\r\n  }\r\n  public retryRequest(list: TempRequest[] = []) {\r\n    for (const request of list) {\r\n      this._send(request.subject, request.request);\r\n    }\r\n  }\r\n  private _send(subject: Subject<Object>, request: Request) {\r\n    if (!this._config) {\r\n      return;\r\n    }\r\n    // le user doit etre connect√©\r\n    if (request.loginRequired === true && this.isAuthenticated === false) {\r\n      this._tempLoginRequiredRequest.push({\r\n        request: request,\r\n        subject: subject,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.requestInProgressNumber >= this._config.pendindRequestId) {\r\n      this._tempPendingRequest.push({ request: request, subject: subject });\r\n      return;\r\n    }\r\n\r\n    this._addCorrelation(request.id, request, subject);\r\n\r\n    this._sendRequest(request);\r\n  }\r\n  private _sendRequest(request: Request) {\r\n    if (!this._config) {\r\n      return;\r\n    }\r\n    const requestConfig = RequestMap.getConfigById(request.type);\r\n    if (!requestConfig) {\r\n      return;\r\n    }\r\n    const url = RequestMap.parseUrl({\r\n      serverUrl: this._config.serverUrl,\r\n      url: requestConfig.url,\r\n      request,\r\n      apiExt: this._config.apiExt,\r\n    });\r\n    Logger.LogInfo('[SERVER] Api Request:', url, request);\r\n\r\n    switch (requestConfig.type) {\r\n      case 'GET':\r\n        this._get(url, request);\r\n        break;\r\n      case 'POST':\r\n        this._post(url, request);\r\n        break;\r\n      case 'PUT':\r\n        this._put(url, request);\r\n        break;\r\n      case 'PATCH':\r\n        this._patch(url, request);\r\n        break;\r\n      case 'DELETE':\r\n        this._delete(url, request);\r\n        break;\r\n      case 'FILES':\r\n        this._files(url, request);\r\n        break;\r\n      case 'UPDATEFILES':\r\n        this._updateFiles(url, request);\r\n        break;\r\n      default:\r\n        Logger.LogError('[ERROR] Request not send');\r\n    }\r\n  }\r\n  private _onPacketReceived = (id: number, response: IResponse): void => {\r\n    Logger.LogInfo('[SERVER] Api Reponse:', response);\r\n\r\n    this._resolveCorrelation(id, response.body);\r\n  };\r\n  private _addCorrelation(corrId: number, request: Request, sub: Subject<Object>) {\r\n    this._correlations.push({ id: corrId, request: request, subject: sub });\r\n  }\r\n  private _resolveCorrelation = (corrId: number, body: string | Object) => {\r\n    const correlation = this._correlations.find(item => item.id === corrId);\r\n\r\n    if (!correlation) {\r\n      return;\r\n    }\r\n    let content;\r\n    if (typeof body === 'string') {\r\n      try {\r\n        content = JSON.parse(<string>body);\r\n      } catch (error) {\r\n        content = body;\r\n      }\r\n    } else {\r\n      content = body;\r\n    }\r\n    this._resolveResponseStatus(correlation, content);\r\n\r\n    this._correlations = this._correlations.filter(item => item !== correlation);\r\n    if (this.requestInProgressNumber === 0) {\r\n      this._retryPending();\r\n    }\r\n  };\r\n  private _resolveResponseStatus(correlation: Correlation, content: IBaseResponse) {\r\n    Logger.LogInfo('[SERVER] Api Reponse content:', content.Status, content.Content);\r\n    switch (content.Status) {\r\n      case StatusReponse.Successful:\r\n      case StatusReponse.NoContent:\r\n        correlation.subject.next(content.Content);\r\n        correlation.subject.complete();\r\n        correlation.subject.unsubscribe();\r\n        break;\r\n      default:\r\n        correlation.subject.error(content.Content);\r\n        correlation.subject.complete();\r\n        correlation.subject.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private _retryPending() {\r\n    const list = [...this._tempPendingRequest];\r\n    this._tempPendingRequest = [];\r\n\r\n    this.retryRequest(list);\r\n  }\r\n\r\n  private _retryLoginRequired() {\r\n    const list = [...this._tempLoginRequiredRequest];\r\n    this._tempLoginRequiredRequest = [];\r\n\r\n    this.retryRequest(list);\r\n  }\r\n\r\n  private _get(url: string, request: Request) {\r\n    this.$http\r\n      .get<IBackResponse>(url, {\r\n        headers: this._headers(),\r\n        params: { cacheTime: request.cacheTime },\r\n      })\r\n      .subscribe({\r\n        next: response => {\r\n          this._onPacketReceived(request.id, this._formatReponse(response, 200));\r\n        },\r\n        error: message => {\r\n          this._onPacketReceived(request.id, this._formatReponse(message, message.status));\r\n        },\r\n        complete: () => Logger.LogDebug('API GET CLOSE'),\r\n      });\r\n  }\r\n  private _post(url: string, request: Request) {\r\n    this.$http\r\n      .post<IBackResponse>(url, request.BrutContent, {\r\n        headers: this._headers(),\r\n      })\r\n      .subscribe({\r\n        next: response => this._onPacketReceived(request.id, this._formatReponse(response)),\r\n        error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\r\n        complete: () => Logger.LogDebug('API POST CLOSE'),\r\n      });\r\n  }\r\n  private _patch(url: string, request: Request) {\r\n    this.$http.patch<IBackResponse>(url, request.Content, { headers: this._headers() }).subscribe({\r\n      next: response => this._onPacketReceived(request.id, this._formatReponse(response)),\r\n      error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\r\n      complete: () => Logger.LogDebug('API PATCH CLOSE'),\r\n    });\r\n  }\r\n  private _put(url: string, request: Request) {\r\n    this.$http.put<IBackResponse>(url, request.Content, { headers: this._headers() }).subscribe({\r\n      next: response => this._onPacketReceived(request.id, this._formatReponse(response)),\r\n      error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\r\n      complete: () => Logger.LogDebug('API PUT CLOSE'),\r\n    });\r\n  }\r\n  private _delete(url: string, request: Request) {\r\n    this.$http.delete<IBackResponse>(url, { headers: this._headers() }).subscribe({\r\n      next: response => this._onPacketReceived(request.id, this._formatReponse(response)),\r\n      error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\r\n      complete: () => Logger.LogDebug('API DELETE CLOSE'),\r\n    });\r\n  }\r\n  private _files(url: string, request: Request) {\r\n    this.$http\r\n      .post<IBackResponse>(url, request.BrutContent.files, {\r\n        headers: this._headers({\r\n          contentType: '',\r\n        }),\r\n      })\r\n      .subscribe({\r\n        next: response => {\r\n          this._onPacketReceived(request.id, this._formatReponse(response));\r\n        },\r\n        error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\r\n        complete: () => Logger.LogDebug('API DELETE CLOSE'),\r\n      });\r\n  }\r\n  private _updateFiles(url: string, request: Request) {\r\n    this.$http\r\n      .put<IBackResponse>(url, request.BrutContent.files, {\r\n        headers: this._headers({\r\n          contentType: '',\r\n        }),\r\n      })\r\n      .subscribe({\r\n        next: response => {\r\n          this._onPacketReceived(request.id, this._formatReponse(response));\r\n        },\r\n        error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\r\n        complete: () => Logger.LogDebug('API DELETE CLOSE'),\r\n      });\r\n  }\r\n  private _formatReponse(response: object, status: number = 200): IResponse {\r\n    return { body: { Status: status, Content: response } };\r\n  }\r\n  private _headers(option?: { contentType?: string }): HttpHeaders {\r\n    let headers = new HttpHeaders();\r\n\r\n    if (option?.contentType !== '') {\r\n      headers = headers.set('Content-Type', option?.contentType ? option?.contentType : 'application/json');\r\n    }\r\n    headers = headers.set('Access-Control-Allow-Origin', this._config?.serverUrl ?? '');\r\n\r\n    Logger.LogInfo('[SERVER] Api Request Header:', headers);\r\n\r\n    return headers;\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const GRAPHQL_SERVER_CONFIG = new InjectionToken<IGraphConfig>('config_graphQl_server');\r\n\r\nexport interface IGraphConfig {\r\n  url: string;\r\n}\r\n","export const graphQlBydke = (take?: number | null) => {\r\n  return `take: ${take || 1000}`;\r\n};\r\n\r\nexport const graphQlPaginationFields = () => {\r\n  return `\r\n        pageInfo {\r\n            hasNextPage\r\n            hasPreviousPage\r\n        }\r\n        totalCount\r\n    `;\r\n};\r\n","import { ObjectKeys } from '@beyond/utils';\r\n\r\nexport const graphQlUpdateFields = (object: any): { updatedFields: string[] } => {\r\n  return { updatedFields: <string[]>ObjectKeys(object) };\r\n};\r\n","import { Inject, Injectable, Optional, inject } from '@angular/core';\r\n\r\nimport { ApolloClient, ApolloLink, InMemoryCache } from '@apollo/client/core';\r\nimport { isURL } from '@beyond/utils';\r\nimport { Apollo } from 'apollo-angular';\r\nimport { HttpLink } from 'apollo-angular/http';\r\nimport { BehaviorSubject, filter, map, switchMap, take, tap } from 'rxjs';\r\n\r\nimport { Logger } from '../logger';\r\nimport { GraphMutationPayload, GraphQueryPayload } from './models/graphPayload';\r\nimport { GraphReponseData } from './models/graphResponseData';\r\nimport { GraphReponsePagedData } from './models/graphResponsePagedData';\r\nimport { ReponseMutationData } from './models/responseData';\r\nimport { GRAPHQL_SERVER_CONFIG, GraphEndpoint } from './public-api';\r\n\r\ntype WrapperData = {\r\n  context?: string;\r\n};\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydGraphService {\r\n  private readonly _graphConfig = inject(GRAPHQL_SERVER_CONFIG);\r\n\r\n  public contactsLoaded$ = new BehaviorSubject<boolean>(false);\r\n  public isReady$ = new BehaviorSubject<boolean>(true);\r\n\r\n  private _defaultEndpoint;\r\n  private _cache;\r\n  constructor(\r\n    private httpLink: HttpLink,\r\n    private apollo: Apollo\r\n  ) {\r\n    this._defaultEndpoint = new ApolloLink((operation, forward) => {\r\n      return forward(operation);\r\n    });\r\n\r\n    this._cache = new InMemoryCache();\r\n\r\n    //  (<any>window).apolloCache = this._cache;\r\n\r\n    this.apollo.client = new ApolloClient({\r\n      cache: this._cache,\r\n      link: this._defaultEndpoint,\r\n    });\r\n  }\r\n\r\n  public clearCache(key: string) {\r\n    this._cache.evict({\r\n      fieldName: key,\r\n    });\r\n  }\r\n\r\n  public fetchQueryList<T>(payload: GraphQueryPayload, node: string, context: string) {\r\n    return this._getWrapper({ context }).pipe(\r\n      tap(() => Logger.LogInfo('[GraphQL] [Query] fetchQueryList:', { payload, node, context })),\r\n      switchMap(() =>\r\n        this.apollo.query<GraphReponseData<T[]>>(this._setupData(payload, context)).pipe(\r\n          tap(data => Logger.LogInfo('[GraphQL] [Response] fetchQueryList:', { data, node, context })),\r\n          filter(response => !!response.data),\r\n          map(response => response.data[node])\r\n        )\r\n      ),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public fetchPagedQueryList<T>(payload: GraphQueryPayload, node: string, context: string) {\r\n    Logger.LogInfo('[GraphQL] [Prepare] fetchPagedQueryList:', { payload, node, context });\r\n    return this._getWrapper({ context }).pipe(\r\n      tap(() => Logger.LogInfo('[GraphQL] [Query] fetchPagedQueryList:', { payload, node, context })),\r\n      switchMap(() =>\r\n        this.apollo.query<GraphReponsePagedData<T>>(this._setupData(payload, context)).pipe(\r\n          tap(data => Logger.LogInfo('[GraphQL] [Response] fetchPagedQueryList:', { data, node, context })),\r\n          filter(response => !!response.data),\r\n          map(response => response.data[node])\r\n        )\r\n      ),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public fetchQuery<T>(payload: GraphQueryPayload, node: string, context: string) {\r\n    return this._getWrapper({ context }).pipe(\r\n      tap(() => Logger.LogInfo('[GraphQL] [Query] fetchQuery:', { payload, node, context })),\r\n      switchMap(() =>\r\n        this.apollo.query<GraphReponseData<T>>(this._setupData(payload, context)).pipe(\r\n          tap(data => Logger.LogInfo('[GraphQL] [Response] fetchQuery:', { data, node, context })),\r\n          filter(response => !!response.data),\r\n          map(data => data.data[node])\r\n        )\r\n      ),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public mutate<T>(payload: GraphMutationPayload, mutationName: string, context: string, clearCache?: string[]) {\r\n    Logger.LogInfo('[GraphQL]  [Prepare] mutate', payload, mutationName);\r\n    return this.apollo.mutate<ReponseMutationData<T>>(this._setupData(payload, context)).pipe(\r\n      tap(data => Logger.LogInfo('[GraphQL] [Reponse] mutate', data)),\r\n      filter(response => !!response.data),\r\n      tap(() => clearCache?.forEach(cacheKey => this.clearCache(cacheKey))),\r\n      map(response => {\r\n        return response!.data![mutationName];\r\n      })\r\n    );\r\n  }\r\n\r\n  public registerGraphEndpoint(graphEndpoint: GraphEndpoint) {\r\n    let uri = isURL(graphEndpoint.endpoint) ? graphEndpoint.endpoint : this._graphConfig.url + graphEndpoint.endpoint;\r\n\r\n    const newHttpLink = this.httpLink.create({\r\n      headers: graphEndpoint.headers,\r\n      uri: uri,\r\n    });\r\n\r\n    this.apollo.client.setLink(\r\n      this.apollo.client.link.concat(\r\n        ApolloLink.split(operation => operation.getContext()['clientName'] === graphEndpoint.clientName, newHttpLink)\r\n      )\r\n    );\r\n  }\r\n\r\n  private _setupData<T>(payload: T, context: string) {\r\n    return { ...payload, ...{ context: { clientName: context } } };\r\n  }\r\n\r\n  private _getWrapper(data?: WrapperData) {\r\n    return this.isReady$;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy, inject } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { BydGraphService, GraphEndpoint } from '../graphql/public-api';\r\nimport { MappingApiType } from './api/requestMap';\r\nimport { BydServerSevice } from './api/server.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport abstract class BydBaseService implements OnDestroy {\r\n  protected _subscriptionList: Subscription[] = [];\r\n  protected _serverService = inject(BydServerSevice);\r\n  protected _graphService = inject(BydGraphService);\r\n\r\n  constructor(apiRoutes?: MappingApiType) {\r\n    this.registerRoutes({ apiRoutes });\r\n  }\r\n\r\n  public registerRoutes(routes: { apiRoutes?: MappingApiType; graphEndpoint?: GraphEndpoint }) {\r\n    if (routes.apiRoutes) this._serverService.registerRoutes(routes.apiRoutes);\r\n    if (routes.graphEndpoint) this._graphService.registerGraphEndpoint(routes.graphEndpoint);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._subscriptionList.forEach(subscription => subscription.unsubscribe());\r\n  }\r\n\r\n  protected _registerSubscription(subscription: Subscription) {\r\n    this._subscriptionList.push(subscription);\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { differenceInMinutes } from 'date-fns';\r\nimport { Observable, of, share, tap } from 'rxjs';\r\n\r\nimport { Logger } from '../logger';\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n  private cache: Map<string, { timestamp: Date; response: HttpResponse<any> }> = new Map();\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.method !== 'GET') {\r\n      return next.handle(req);\r\n    }\r\n    const cacheTime = Number(req.params.get('cacheTime'));\r\n\r\n    if (cacheTime === 0) {\r\n      Logger.LogInfo('[SERVER] Api No Cache required', req.url);\r\n      return next.handle(req);\r\n    }\r\n    const cachedResponse = this.cache.get(req.url);\r\n\r\n    if (cachedResponse) {\r\n      const diffInMinutes = differenceInMinutes(new Date(), cachedResponse?.timestamp);\r\n\r\n      if (cacheTime === -1 || cacheTime > diffInMinutes) {\r\n        Logger.LogInfo('[SERVER] Api Cached response:', req.url, cachedResponse);\r\n        return of(cachedResponse.response.clone());\r\n      } else {\r\n        Logger.LogInfo('[SERVER] Api Cached expired', req.url);\r\n      }\r\n    }\r\n\r\n    return next.handle(req).pipe(\r\n      tap((stateEvent: any) => {\r\n        if (stateEvent instanceof HttpResponse) {\r\n          this.cache.set(req.url, {\r\n            timestamp: new Date(),\r\n            response: stateEvent.clone(),\r\n          });\r\n        }\r\n      }),\r\n      share()\r\n    );\r\n  }\r\n}\r\n","export type CacheStrategy = ECacheStrategy | number;\r\n\r\nexport enum ECacheStrategy {\r\n  Inifity = -1,\r\n  NoCache = 0,\r\n}\r\n","import { newId } from '@beyond/utils';\r\n\r\nimport { CacheStrategy, ECacheStrategy } from '../../types/cache';\r\n\r\n/**\r\n *\r\n * @param type\r\n * @param content\r\n * @param cacheTime in minutes => -1 = inifity, 0 = no cache (default), x = number of cache in minutes | ByDefault 0\r\n * @param loginRequired\r\n */\r\ntype RequestOptions = {\r\n  type: string;\r\n  content?: any;\r\n  urlData?: any;\r\n  cacheTime?: CacheStrategy;\r\n  loginRequired?: boolean;\r\n};\r\nexport class Request {\r\n  public id: number;\r\n\r\n  public type: string;\r\n  public loginRequired: boolean;\r\n  public cacheTime: CacheStrategy;\r\n  public urlData: any;\r\n\r\n  private readonly _content: any;\r\n\r\n  get Content(): string {\r\n    return JSON.stringify(this._content);\r\n  }\r\n  get BrutContent(): any {\r\n    return this._content;\r\n  }\r\n\r\n  constructor({\r\n    type,\r\n    content = null,\r\n    urlData = null,\r\n    cacheTime = ECacheStrategy.NoCache,\r\n    loginRequired = true,\r\n  }: RequestOptions) {\r\n    this.id = newId();\r\n    this.type = type;\r\n    this.loginRequired = loginRequired;\r\n    this.cacheTime = cacheTime;\r\n    this.urlData = urlData;\r\n\r\n    this._content = content;\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nimport { IGraphConfig } from '../graphql/models/graphConfig';\r\n\r\nexport const GRAPHQL_CONFIG_TOKEN = new InjectionToken<IGraphConfig>('IGraphConfig');\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { BehaviorSubject, Observable, filter, of } from 'rxjs';\r\n\r\nimport { Logger } from '../logger';\r\n\r\nexport type BydPermissionLevel = 'all' | 'read' | 'authenticated' | 'unauthenticated';\r\n\r\ntype Role = 'admin' | 'interne' | 'shared';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydPermissionsServices {\r\n  private _updated$ = new BehaviorSubject<number | null>(null);\r\n\r\n  public uid: number | null = null;\r\n  public pass: string | null = null;\r\n\r\n  public token: string | null = null;\r\n  public guards: { [index: string]: string[] } = {};\r\n  public roles: Role[] = [];\r\n  public compagnies: number[] = [];\r\n\r\n  get isAuthenticated() {\r\n    return !!this.uid;\r\n  }\r\n\r\n  public updated$ = this._updated$.pipe(filter(data => !!data));\r\n\r\n  private _sep = '##--##';\r\n\r\n  get received() {\r\n    return this._updated$.value !== null;\r\n  }\r\n\r\n  constructor() {\r\n    if (sessionStorage.getItem('token')) {\r\n      const token = (<string>sessionStorage.getItem('token')).split(this._sep);\r\n      this.uid = Number(token[0]);\r\n      this.pass = token[1];\r\n\r\n      this._updated$.next(Date.now());\r\n    }\r\n  }\r\n\r\n  public set(uid: number | null, pass: string) {\r\n    Logger.LogInfo('[PERMISSIONS] user Uid:', uid);\r\n\r\n    this.uid = uid;\r\n    this.pass = pass;\r\n    sessionStorage.setItem('token', [this.uid, this.pass].join(this._sep));\r\n\r\n    this.guards = {};\r\n\r\n    this._updated$.next(Date.now());\r\n  }\r\n\r\n  public setRole(role: Role, compagnies: number[] = []) {\r\n    this.compagnies = compagnies;\r\n    this.roles = [role];\r\n\r\n    if (role === 'admin') {\r\n      this.guards = {\r\n        all: ['all'],\r\n        admin: ['all'],\r\n        interne: ['all'],\r\n        shared: ['all'],\r\n      };\r\n    } else if (role === 'interne') {\r\n      this.guards = {\r\n        all: ['all'],\r\n        interne: ['all'],\r\n        shared: ['all'],\r\n      };\r\n    } else if (role === 'shared') {\r\n      this.guards = {\r\n        all: ['read'],\r\n        shared: ['all'],\r\n      };\r\n    }\r\n  }\r\n\r\n  public reset() {\r\n    this.uid = null;\r\n    sessionStorage.removeItem('token');\r\n\r\n    this.guards = {};\r\n\r\n    this._updated$.next(Date.now());\r\n  }\r\n\r\n  public hasRole(role: Role): boolean {\r\n    return this.roles.some(x => x === role);\r\n  }\r\n\r\n  public canDirectAccess(feature: string, level: BydPermissionLevel): boolean {\r\n    if (level === 'unauthenticated') {\r\n      return !this.isAuthenticated;\r\n    }\r\n    if (level === 'authenticated') {\r\n      return this.isAuthenticated;\r\n    }\r\n\r\n    if (!feature) {\r\n      return true;\r\n    }\r\n\r\n    const featureGuard = this.guards[feature];\r\n    if (!featureGuard) {\r\n      return false;\r\n    }\r\n\r\n    if (featureGuard.includes('all')) {\r\n      return true;\r\n    }\r\n\r\n    if (!featureGuard.includes(level)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public canAccess(feature: string, level: BydPermissionLevel): Observable<boolean> {\r\n    if (this.received) return of(this.canDirectAccess(feature, level));\r\n\r\n    return this._updated$.pipe(map(() => this.canDirectAccess(feature, level)));\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BydPermissionsServices } from '../services/user/permissions.services.';\r\n\r\n@Injectable()\r\nexport class BearerInterceptor implements HttpInterceptor {\r\n  private readonly _permissionsServices = inject(BydPermissionsServices);\r\n\r\n  constructor() {\r\n    console.log('BearerInterceptor');\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this._permissionsServices.token) {\r\n      const bearerHeader = req.clone({\r\n        headers: req.headers.set('Authorization', 'Bearer ' + this._permissionsServices.token),\r\n      });\r\n      return next.handle(bearerHeader);\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Provider, importProvidersFrom } from '@angular/core';\r\n\r\nimport { ApolloModule } from 'apollo-angular';\r\n\r\nimport { BearerInterceptor } from './interceptor/bearerInterceptor';\r\nimport { GRAPHQL_SERVER_CONFIG, IGraphConfig } from './services/graphql/models/graphConfig';\r\nimport { IServerConfig, SERVER_CONFIG_KEY } from './services/server/api/server.service';\r\n\r\nexport const provideServer = (data: { graphQlConfig: IGraphConfig; httpConfig: IServerConfig }): Provider => [\r\n  importProvidersFrom(ApolloModule),\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: BearerInterceptor,\r\n    multi: true,\r\n  },\r\n  {\r\n    provide: GRAPHQL_SERVER_CONFIG,\r\n    useValue: data.graphQlConfig,\r\n  },\r\n  {\r\n    provide: SERVER_CONFIG_KEY,\r\n    useValue: data.httpConfig,\r\n  },\r\n];\r\n","/*\r\n * Public API Surface of server\r\n */\r\n\r\nexport * from './lib/services/dto/keyvalue';\r\n\r\nexport * from './lib/helpers/handle-request';\r\n\r\nexport * from './lib/services/server/api/requestMap';\r\nexport * from './lib/services/server/api/server.service';\r\n\r\nexport * from './lib/services/server/baseService';\r\nexport * from './lib/services/server/cacheInterceptor';\r\n\r\nexport * from './lib/services/server/interface';\r\nexport * from './lib/services/server/request';\r\nexport * from './lib/services/server/response';\r\n\r\nexport * from './lib/services/logger';\r\n\r\nexport * from './lib/services/graphql/public-api';\r\n\r\nexport * from './lib/services/server/token';\r\n\r\nexport * from './lib/services/user/public-api';\r\n\r\nexport * from './lib/provider';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["map"],"mappings":"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"}