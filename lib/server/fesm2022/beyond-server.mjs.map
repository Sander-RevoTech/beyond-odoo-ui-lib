{"version":3,"file":"beyond-server.mjs","sources":["../../../projects/server/src/lib/services/graphql/models/graphSchema.ts","../../../projects/server/src/lib/services/dto/keyvalue.ts","../../../projects/server/src/lib/helpers/handle-request.ts","../../../projects/server/src/lib/services/logger.ts","../../../projects/server/src/lib/services/server/api/requestMap.ts","../../../projects/server/src/lib/services/server/response.ts","../../../projects/server/src/lib/services/server/api/server.service.ts","../../../projects/server/src/lib/services/graphql/models/graphConfig.ts","../../../projects/server/src/lib/services/graphql/helpers/queries.ts","../../../projects/server/src/lib/services/graphql/helpers/mutations.ts","../../../projects/server/src/lib/services/graphql/graph.service.ts","../../../projects/server/src/lib/services/server/baseService.ts","../../../projects/server/src/lib/services/server/cacheInterceptor.ts","../../../projects/server/src/lib/types/cache.ts","../../../projects/server/src/lib/services/server/request.ts","../../../projects/server/src/lib/services/server/token.ts","../../../projects/server/src/lib/services/user/permissions.ts","../../../projects/server/src/lib/services/strapi/strapi.service.ts","../../../projects/server/src/lib/services/strapi/dto/base.ts","../../../projects/server/src/lib/services/user/auth.service.ts","../../../projects/server/src/lib/interceptor/bearerInterceptor.ts","../../../projects/server/src/lib/provider.ts","../../../projects/server/src/public-api.ts","../../../projects/server/src/beyond-server.ts"],"sourcesContent":["export class GraphSchema<T> {\n  constructor(private _fields: Array<keyof T>) {}\n\n  get(field: keyof T) {\n    return this._fields.find(x => x === field);\n  }\n}\n","import { GraphSchema } from '../graphql/models/graphSchema';\r\n\r\nexport interface KeyValue {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\nexport const keyValueProps = new GraphSchema<KeyValue>(['key', 'value']);\r\n","import { BehaviorSubject, Observable, filter, map, tap } from 'rxjs';\r\n\r\nimport { isNonNullable } from '@beyond/utils';\r\n\r\nexport class HandleComplexRequest<T> {\r\n  public data$ = new BehaviorSubject<{ [index: string | number]: T }>({});\r\n\r\n  constructor() {}\r\n\r\n  public fetch(id: string | number, subscriber: Observable<T>) {\r\n    return subscriber.pipe(\r\n      filter(data => !!data),\r\n      tap(entity => {\r\n        const entities = this.data$.getValue();\r\n        entities[id] = entity;\r\n        this.data$.next(entities);\r\n      })\r\n    );\r\n  }\r\n\r\n  public update(id: string | number, item: T, merge: boolean = true) {\r\n    const entities = this.data$.getValue();\r\n\r\n    if (!entities[id]) {\r\n      return;\r\n    }\r\n    entities[id] = merge ? { ...entities[id], ...item } : item;\r\n    this.data$.next(entities);\r\n  }\r\n  public get(key: string | number) {\r\n    return this.data$.getValue()[key] ?? null;\r\n  }\r\n\r\n  public get$(key: string | number) {\r\n    return this.data$.pipe(\r\n      map(data => data[key]),\r\n      filter(data => !!data)\r\n    );\r\n  }\r\n}\r\n\r\nexport class HandleSimpleRequest<T> {\r\n  public data$ = new BehaviorSubject<T | null>(null);\r\n\r\n  constructor() {}\r\n\r\n  public fetch(subscriber: Observable<T | undefined | null>) {\r\n    return subscriber.pipe(\r\n      filter(isNonNullable),\r\n      tap(entity => {\r\n        this.data$.next(entity);\r\n      })\r\n    );\r\n  }\r\n  public get() {\r\n    return this.data$.getValue() ?? null;\r\n  }\r\n\r\n  public get$() {\r\n    return this.data$.pipe(filter(data => !!data));\r\n  }\r\n}\r\n","export class Logger {\r\n  public static DEBUG: Number = 0;\r\n  public static INFO: Number = 1;\r\n  public static WARNING: Number = 2;\r\n  public static ERROR: Number = 3;\r\n\r\n  public static config = { DEBUG: true, DEBUG_LEVEL: Logger.DEBUG };\r\n\r\n  public static LogDebug(message: string, data?: string | Object | any): void {\r\n    if (data === undefined) {\r\n      data = '';\r\n    }\r\n\r\n    if (Logger.config.DEBUG && Logger.DEBUG >= Logger.config.DEBUG_LEVEL) {\r\n      // tslint:disable-next-line:no-console\r\n      console.debug(message, data);\r\n    }\r\n    this._fsLog('log', message, data);\r\n  }\r\n\r\n  public static LogInfo(message: string, ...data: any[]): void {\r\n    if (Logger.config.DEBUG && Logger.INFO >= Logger.config.DEBUG_LEVEL) {\r\n      // tslint:disable-next-line:no-console\r\n      console.info(message, data);\r\n    }\r\n    this._fsLog('info', message, data);\r\n  }\r\n\r\n  public static LogWarning(message: string, data?: string | Object | any): void {\r\n    if (data === undefined) {\r\n      data = '';\r\n    }\r\n\r\n    if (Logger.config.DEBUG && Logger.WARNING >= Logger.config.DEBUG_LEVEL) {\r\n      console.warn('/!\\\\ ' + message + ' /!\\\\', data);\r\n    }\r\n    this._fsLog('warn', message, data);\r\n  }\r\n\r\n  public static LogError(message: string, data?: any): void {\r\n    if (data === undefined) {\r\n      data = '';\r\n    }\r\n\r\n    if (Logger.config.DEBUG && Logger.ERROR >= Logger.config.DEBUG_LEVEL) {\r\n      console.error('/!\\\\ ' + message + ' /!\\\\', data);\r\n    }\r\n    this._fsLog('error', message, data);\r\n  }\r\n\r\n  private static _fsLog(logLevel: string, message: string, data?: any) {\r\n    if ((<any>window).FS) {\r\n      (<any>window).FS.log(logLevel, `${message} | data: ${JSON.stringify(data)}`);\r\n    }\r\n  }\r\n}\r\n","import { Logger } from '../../logger';\nimport { Request } from '../request';\n\nexport interface IRequestMap {\n  type: 'POST' | 'GET' | 'DELETE' | 'PUT' | 'PATCH' | 'FILES' | 'UPDATEFILES';\n  url: string;\n}\n\nexport type MappingApiType = { [index: string]: IRequestMap };\nclass RequestMapCore {\n  public mappingApi: MappingApiType = {};\n\n  public register(routes: MappingApiType) {\n    for (const key in routes) {\n      this.mappingApi[key] = routes[key];\n    }\n  }\n  public getConfigById(id: string): IRequestMap | null {\n    return this._getConfigById(id);\n  }\n  public parseUrl(data: { serverUrl: string; url: string; request: Request; apiExt?: string }): string {\n    return this._formatUrl(data.serverUrl, data.url, data.request) + '' + (data.apiExt ?? '');\n  }\n\n  private _getConfigById(id: string): IRequestMap | null {\n    if (this.mappingApi.hasOwnProperty(id)) {\n      return this.mappingApi[id];\n    }\n    Logger.LogError('No Api Configuration found for: ', id);\n    return null;\n  }\n\n  private _formatUrl(serverUrl: string, url: string, request: Request): string {\n    return url.replace(/{(\\w+)}/g, function (match, string) {\n      if (request.urlData !== null && request.urlData.hasOwnProperty(string)) {\n        return request.urlData[string];\n      }\n      if (request.BrutContent !== null && request.BrutContent.hasOwnProperty(string)) {\n        return request.BrutContent[string];\n      }\n      if (string === 'ApiUrl') {\n        return serverUrl;\n      }\n      return match;\n    });\n  }\n}\n\nexport const RequestMap = new RequestMapCore();\n","interface IHeaders {\n  destination: string;\n}\n\nexport interface IBackResponse {\n  data: object;\n}\nexport interface IResponse {\n  body: string | IBaseResponse;\n  headers?: IHeaders;\n}\nexport enum StatusReponse {\n  Unknown = 0,\n  Successful = 200,\n  NoContent = 204,\n  Unauthorized = 401,\n  Forbidden = 403,\n  Error = 500,\n}\nexport interface IBaseResponse {\n  Status: StatusReponse;\n  Content: Object;\n}\nexport interface IGetTokenResponse extends IBaseResponse {\n  token: string;\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { inject, Inject, Injectable, InjectionToken, Optional } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { Logger } from '../../logger';\nimport { Correlation, TempRequest } from '../interface';\nimport { Request } from '../request';\nimport { IBackResponse, IBaseResponse, IResponse, StatusReponse } from '../response';\nimport { MappingApiType, RequestMap } from './requestMap';\nimport { Permissions } from '../../user/permissions';\n\nexport const SERVER_CONFIG_KEY = new InjectionToken<IServerConfig>('config_server');\nexport interface IServerConfig {\n  pendindRequestId: number;\n  serverUrl: string;\n  apiExt?: string;\n}\n@Injectable({\n  providedIn: 'root',\n})\nexport class BydServerSevice {\n  private readonly _config = inject(SERVER_CONFIG_KEY)\n\n  readonly $http = inject(HttpClient);\n\n  get requestInProgressNumber(): number {\n    return this._correlations.length;\n  }\n\n  private _tempLoginRequiredRequest: TempRequest[] = [];\n  private _tempPendingRequest: TempRequest[] = [];\n\n  private _correlations: Correlation[] = [];\n\n  private _isAuthenticated = false;\n  get isAuthenticated() {\n    return this._isAuthenticated;\n  }\n  set isAuthenticated(value: boolean) {\n    this._isAuthenticated = value;\n    if (this._isAuthenticated) {\n      this._retryLoginRequired();\n    }\n  }\n\n  constructor() {}\n\n  public registerRoutes(routes: MappingApiType) {\n    RequestMap.register(routes);\n  }\n\n  public request<T>(request: Request): Subject<T> {\n    const subject = new Subject<Object>();\n    this._send(subject, request);\n    return subject as unknown as Subject<T>;\n  }\n  public retryRequest(list: TempRequest[] = []) {\n    for (const request of list) {\n      this._send(request.subject, request.request);\n    }\n  }\n  private _send(subject: Subject<Object>, request: Request) {\n    if (!this._config) {\n      return;\n    }\n    // le user doit etre connectÃ©\n    if (request.loginRequired === true && this.isAuthenticated === false) {\n      this._tempLoginRequiredRequest.push({\n        request: request,\n        subject: subject,\n      });\n      return;\n    }\n\n    if (this.requestInProgressNumber >= this._config.pendindRequestId) {\n      this._tempPendingRequest.push({ request: request, subject: subject });\n      return;\n    }\n\n    this._addCorrelation(request.id, request, subject);\n\n    this._sendRequest(request);\n  }\n  private _sendRequest(request: Request) {\n    if (!this._config) {\n      return;\n    }\n    const requestConfig = RequestMap.getConfigById(request.type);\n    if (!requestConfig) {\n      return;\n    }\n    const url = RequestMap.parseUrl({\n      serverUrl: this._config.serverUrl,\n      url: requestConfig.url,\n      request,\n      apiExt: this._config.apiExt,\n    });\n    Logger.LogInfo('[SERVER] Api Request:', url, request);\n\n    switch (requestConfig.type) {\n      case 'GET':\n        this._get(url, request);\n        break;\n      case 'POST':\n        this._post(url, request);\n        break;\n      case 'PUT':\n        this._put(url, request);\n        break;\n      case 'PATCH':\n        this._patch(url, request);\n        break;\n      case 'DELETE':\n        this._delete(url, request);\n        break;\n      case 'FILES':\n        this._files(url, request);\n        break;\n      case 'UPDATEFILES':\n        this._updateFiles(url, request);\n        break;\n      default:\n        Logger.LogError('[ERROR] Request not send');\n    }\n  }\n  private _onPacketReceived = (id: number, response: IResponse): void => {\n    Logger.LogInfo('[SERVER] Api Reponse:', response);\n\n    this._resolveCorrelation(id, response.body);\n  };\n  private _addCorrelation(corrId: number, request: Request, sub: Subject<Object>) {\n    this._correlations.push({ id: corrId, request: request, subject: sub });\n  }\n  private _resolveCorrelation = (corrId: number, body: string | Object) => {\n    const correlation = this._correlations.find(item => item.id === corrId);\n\n    if (!correlation) {\n      return;\n    }\n    let content;\n    if (typeof body === 'string') {\n      try {\n        content = JSON.parse(<string>body);\n      } catch (error) {\n        content = body;\n      }\n    } else {\n      content = body;\n    }\n    this._resolveResponseStatus(correlation, content);\n\n    this._correlations = this._correlations.filter(item => item !== correlation);\n    if (this.requestInProgressNumber === 0) {\n      this._retryPending();\n    }\n  };\n  private _resolveResponseStatus(correlation: Correlation, content: IBaseResponse) {\n    Logger.LogInfo('[SERVER] Api Reponse content:', content.Status, content.Content);\n    switch (content.Status) {\n      case StatusReponse.Successful:\n      case StatusReponse.NoContent:\n        correlation.subject.next(content.Content);\n        correlation.subject.complete();\n        correlation.subject.unsubscribe();\n        break;\n      default:\n        correlation.subject.error(content.Content);\n        correlation.subject.complete();\n        correlation.subject.unsubscribe();\n    }\n  }\n\n  private _retryPending() {\n    const list = [...this._tempPendingRequest];\n    this._tempPendingRequest = [];\n\n    this.retryRequest(list);\n  }\n\n  private _retryLoginRequired() {\n    const list = [...this._tempLoginRequiredRequest];\n    this._tempLoginRequiredRequest = [];\n\n    this.retryRequest(list);\n  }\n\n  private _get(url: string, request: Request) {\n    this.$http\n      .get<IBackResponse>(url, {\n        headers: this._headers(),\n        params: { cacheTime: request.cacheTime },\n      })\n      .subscribe({\n        next: response => {\n          this._onPacketReceived(request.id, this._formatReponse(response, 200));\n        },\n        error: message => {\n          this._onPacketReceived(request.id, this._formatReponse(message, message.status));\n        },\n        complete: () => Logger.LogDebug('API GET CLOSE'),\n      });\n  }\n  private _post(url: string, request: Request) {\n    this.$http\n      .post<IBackResponse>(url, request.BrutContent, {\n        headers: this._headers(),\n      })\n      .subscribe({\n        next: response => this._onPacketReceived(request.id, this._formatReponse(response)),\n        error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\n        complete: () => Logger.LogDebug('API POST CLOSE'),\n      });\n  }\n  private _patch(url: string, request: Request) {\n    this.$http.patch<IBackResponse>(url, request.Content, { headers: this._headers() }).subscribe({\n      next: response => this._onPacketReceived(request.id, this._formatReponse(response)),\n      error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\n      complete: () => Logger.LogDebug('API PATCH CLOSE'),\n    });\n  }\n  private _put(url: string, request: Request) {\n    this.$http.put<IBackResponse>(url, request.Content, { headers: this._headers() }).subscribe({\n      next: response => this._onPacketReceived(request.id, this._formatReponse(response)),\n      error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\n      complete: () => Logger.LogDebug('API PUT CLOSE'),\n    });\n  }\n  private _delete(url: string, request: Request) {\n    this.$http.delete<IBackResponse>(url, { headers: this._headers() }).subscribe({\n      next: response => this._onPacketReceived(request.id, this._formatReponse(response)),\n      error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\n      complete: () => Logger.LogDebug('API DELETE CLOSE'),\n    });\n  }\n  private _files(url: string, request: Request) {\n    this.$http\n      .post<IBackResponse>(url, request.BrutContent.files, {\n        headers: this._headers({\n          contentType: '',\n        }),\n      })\n      .subscribe({\n        next: response => {\n          this._onPacketReceived(request.id, this._formatReponse(response));\n        },\n        error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\n        complete: () => Logger.LogDebug('API DELETE CLOSE'),\n      });\n  }\n  private _updateFiles(url: string, request: Request) {\n    this.$http\n      .put<IBackResponse>(url, request.BrutContent.files, {\n        headers: this._headers({\n          contentType: '',\n        }),\n      })\n      .subscribe({\n        next: response => {\n          this._onPacketReceived(request.id, this._formatReponse(response));\n        },\n        error: message => this._onPacketReceived(request.id, this._formatReponse(message, message.status)),\n        complete: () => Logger.LogDebug('API DELETE CLOSE'),\n      });\n  }\n  private _formatReponse(response: object, status: number = 200): IResponse {\n    return { body: { Status: status, Content: response } };\n  }\n  private _headers(option?: { contentType?: string }): HttpHeaders {\n    let headers = new HttpHeaders();\n\n    if (option?.contentType !== '') {\n      headers = headers.set('Content-Type', option?.contentType ? option?.contentType : 'application/json');\n    }\n    headers = headers.set('Access-Control-Allow-Origin', this._config?.serverUrl ?? '');\n\n    Logger.LogInfo('[SERVER] Api Request Header:', headers);\n\n    return headers;\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nexport const GRAPHQL_SERVER_CONFIG = new InjectionToken<IGraphConfig>('config_graphQl_server');\n\nexport interface IGraphConfig {\n    url: string;\n}\n","export const graphQlBydke = (take?: number | null) => {\r\n  return `take: ${take || 1000}`;\r\n};\r\n\r\nexport const graphQlPaginationFields = () => {\r\n  return `\r\n        pageInfo {\r\n            hasNextPage\r\n            hasPreviousPage\r\n        }\r\n        totalCount\r\n    `;\r\n};\r\n","import { ObjectKeys } from '@beyond/utils';\r\n\r\nexport const graphQlUpdateFields = (object: any): { updatedFields: string[] } => {\r\n  return { updatedFields: <string[]>ObjectKeys(object) };\r\n};\r\n","import { Inject, Injectable, Optional, inject } from '@angular/core';\n\nimport { ApolloClient, ApolloLink, InMemoryCache } from '@apollo/client/core';\nimport { Apollo } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular/http';\nimport { BehaviorSubject, filter, map, switchMap, take, tap } from 'rxjs';\n\nimport { isURL } from '@beyond/utils';\n\nimport { Logger } from '../logger';\nimport { GraphMutationPayload, GraphQueryPayload } from './models/graphPayload';\nimport { GraphReponseData } from './models/graphResponseData';\nimport { GraphReponsePagedData } from './models/graphResponsePagedData';\nimport { ReponseMutationData } from './models/responseData';\nimport { GRAPHQL_SERVER_CONFIG, GraphEndpoint } from './public-api';\n\ntype WrapperData = {\n  context?: string;\n};\n@Injectable({\n  providedIn: 'root',\n})\nexport class BydGraphService {\n  private readonly _graphConfig = inject(GRAPHQL_SERVER_CONFIG);\n\n  public contactsLoaded$ = new BehaviorSubject<boolean>(false);\n  public isReady$ = new BehaviorSubject<boolean>(true);\n\n  private _defaultEndpoint;\n  private _cache;\n  constructor(\n    private httpLink: HttpLink,\n    private apollo: Apollo\n  ) {\n    this._defaultEndpoint = new ApolloLink((operation, forward) => {\n      return forward(operation);\n    });\n\n    this._cache = new InMemoryCache();\n\n    //  (<any>window).apolloCache = this._cache;\n\n    this.apollo.client = new ApolloClient({\n      cache: this._cache,\n      link: this._defaultEndpoint,\n    });\n  }\n\n  public clearCache(key: string) {\n    this._cache.evict({\n      fieldName: key,\n    });\n  }\n\n  public fetchQueryList<T>(payload: GraphQueryPayload, node: string, context: string) {\n    return this._getWrapper({ context }).pipe(\n      tap(() => Logger.LogInfo('[GraphQL] [Query] fetchQueryList:', { payload, node, context })),\n      switchMap(() =>\n        this.apollo.query<GraphReponseData<T[]>>(this._setupData(payload, context)).pipe(\n          tap(data => Logger.LogInfo('[GraphQL] [Response] fetchQueryList:', { data, node, context })),\n          filter(response => !!response.data),\n          map(response => response.data[node])\n        )\n      ),\n      take(1)\n    );\n  }\n\n  public fetchPagedQueryList<T>(payload: GraphQueryPayload, node: string, context: string) {\n    Logger.LogInfo('[GraphQL] [Prepare] fetchPagedQueryList:', { payload, node, context });\n    return this._getWrapper({ context }).pipe(\n      tap(() => Logger.LogInfo('[GraphQL] [Query] fetchPagedQueryList:', { payload, node, context })),\n      switchMap(() =>\n        this.apollo.query<GraphReponsePagedData<T>>(this._setupData(payload, context)).pipe(\n          tap(data => Logger.LogInfo('[GraphQL] [Response] fetchPagedQueryList:', { data, node, context })),\n          filter(response => !!response.data),\n          map(response => response.data[node])\n        )\n      ),\n      take(1)\n    );\n  }\n\n  public fetchQuery<T>(payload: GraphQueryPayload, node: string, context: string) {\n    return this._getWrapper({ context }).pipe(\n      tap(() => Logger.LogInfo('[GraphQL] [Query] fetchQuery:', { payload, node, context })),\n      switchMap(() =>\n        this.apollo.query<GraphReponseData<T>>(this._setupData(payload, context)).pipe(\n          tap(data => Logger.LogInfo('[GraphQL] [Response] fetchQuery:', { data, node, context })),\n          filter(response => !!response.data),\n          map(data => data.data[node])\n        )\n      ),\n      take(1)\n    );\n  }\n\n  public mutate<T>(payload: GraphMutationPayload, mutationName: string, context: string, clearCache?: string[]) {\n    Logger.LogInfo('[GraphQL]  [Prepare] mutate', payload, mutationName);\n    return this.apollo.mutate<ReponseMutationData<T>>(this._setupData(payload, context)).pipe(\n      tap(data => Logger.LogInfo('[GraphQL] [Reponse] mutate', data)),\n      filter(response => !!response.data),\n      tap(() => clearCache?.forEach(cacheKey => this.clearCache(cacheKey))),\n      map(response => {\n        return response!.data![mutationName];\n      })\n    );\n  }\n\n  public registerGraphEndpoint(graphEndpoint: GraphEndpoint) {\n    let uri = isURL(graphEndpoint.endpoint)\n      ? graphEndpoint.endpoint\n      : this._graphConfig.url + graphEndpoint.endpoint;\n\n    const newHttpLink = this.httpLink.create({\n      headers: graphEndpoint.headers,\n      uri: uri,\n    });\n\n    this.apollo.client.setLink(\n      this.apollo.client.link.concat(\n        ApolloLink.split(operation => operation.getContext()['clientName'] === graphEndpoint.clientName, newHttpLink)\n      )\n    );\n  }\n\n  private _setupData<T>(payload: T, context: string) {\n    return { ...payload, ...{ context: { clientName: context } } };\n  }\n\n  private _getWrapper(data?: WrapperData) {\n    return this.isReady$;\n  }\n}\n","import { Injectable, OnDestroy, inject } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { BydGraphService, GraphEndpoint } from '../graphql/public-api';\r\nimport { MappingApiType } from './api/requestMap';\r\nimport { BydServerSevice } from './api/server.service';\r\nimport { BydStrapiService } from '../strapi/strapi.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport abstract class BydBaseService implements OnDestroy {\r\n  protected _subscriptionList: Subscription[] = [];\r\n  protected _serverService = inject(BydServerSevice);\r\n  protected _graphService = inject(BydGraphService);\r\n\r\n  constructor(apiRoutes?: MappingApiType) {\r\n    this.registerRoutes({ apiRoutes });\r\n  }\r\n\r\n  public registerRoutes(routes: { apiRoutes?: MappingApiType; graphEndpoint?: GraphEndpoint }) {\r\n    if (routes.apiRoutes) this._serverService.registerRoutes(routes.apiRoutes);\r\n    if (routes.graphEndpoint) this._graphService.registerGraphEndpoint(routes.graphEndpoint);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._subscriptionList.forEach(subscription => subscription.unsubscribe());\r\n  }\r\n\r\n  protected _registerSubscription(subscription: Subscription) {\r\n    this._subscriptionList.push(subscription);\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { differenceInMinutes } from 'date-fns';\nimport { Observable, of, share, tap } from 'rxjs';\n\nimport { Logger } from '../logger';\n\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n  private cache: Map<string, { timestamp: Date; response: HttpResponse<any> }> = new Map();\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (req.method !== 'GET') {\n      return next.handle(req);\n    }\n    const cacheTime = Number(req.params.get('cacheTime'));\n\n    if (cacheTime === 0) {\n      Logger.LogInfo('[SERVER] Api No Cache required', req.url);\n      return next.handle(req);\n    }\n    const cachedResponse = this.cache.get(req.url);\n\n    if (cachedResponse) {\n      const diffInMinutes = differenceInMinutes(new Date(), cachedResponse?.timestamp);\n\n      if (cacheTime === -1 || cacheTime > diffInMinutes) {\n        Logger.LogInfo('[SERVER] Api Cached response:', req.url, cachedResponse);\n        return of(cachedResponse.response.clone());\n      } else {\n        Logger.LogInfo('[SERVER] Api Cached expired', req.url);\n      }\n    }\n\n    return next.handle(req).pipe(\n      tap((stateEvent: any) => {\n        if (stateEvent instanceof HttpResponse) {\n          this.cache.set(req.url, {\n            timestamp: new Date(),\n            response: stateEvent.clone(),\n          });\n        }\n      }),\n      share()\n    );\n  }\n}\n","export type CacheStrategy = ECacheStrategy | number;\r\n\r\nexport enum ECacheStrategy {\r\n  Inifity = -1,\r\n  NoCache = 0,\r\n}\r\n","import { newId } from '@beyond/utils';\n\nimport { CacheStrategy, ECacheStrategy } from '../../types/cache';\n\n/**\n *\n * @param type\n * @param content\n * @param cacheTime in minutes => -1 = inifity, 0 = no cache (default), x = number of cache in minutes | ByDefault 0\n * @param loginRequired\n */\ntype RequestOptions = {\n  type: string;\n  content?: any;\n  urlData?: any;\n  cacheTime?: CacheStrategy;\n  loginRequired?: boolean;\n};\nexport class Request {\n  public id: number;\n\n  public type: string;\n  public loginRequired: boolean;\n  public cacheTime: CacheStrategy;\n  public urlData: any;\n\n  private readonly _content: any;\n\n  get Content(): string {\n    return JSON.stringify(this._content);\n  }\n  get BrutContent(): any {\n    return this._content;\n  }\n\n  constructor({\n    type,\n    content = null,\n    urlData = null,\n    cacheTime = ECacheStrategy.NoCache,\n    loginRequired = true,\n  }: RequestOptions) {\n    this.id = newId();\n    this.type = type;\n    this.loginRequired = loginRequired;\n    this.cacheTime = cacheTime;\n    this.urlData = urlData;\n\n    this._content = content;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { IGraphConfig } from '../graphql/models/graphConfig';\n\nexport const GRAPHQL_CONFIG_TOKEN = new InjectionToken<IGraphConfig>('IGraphConfig');\n","import { map } from 'rxjs/operators';\n\nimport { BehaviorSubject, Observable, filter, of } from 'rxjs';\nimport { Logger } from '../logger';\n\n\nexport class PermissionsCore {\n  private _updated$ = new BehaviorSubject<number | null>(null);\n\n  public token: string | null = null;\n  public guards: { [index: string]: string[] } = {};\n  public roles: string[] = [];\n  public isAuthenticated: boolean = false;\n\n  public updated$ = this._updated$.pipe(filter(data => !!data));\n\n  get received() {\n    return this._updated$.value !== null;\n  }\n\n  constructor() {}\n\n  public set(permissions: { permission_name: string }[], roles: string[], isAuthenticated: boolean) {\n    Logger.LogInfo('[PERMISSIONS] List brut:', permissions);\n\n    this.guards = {};\n\n    if (permissions) {\n      for (let perm of permissions) {\n        const access = perm.permission_name.split(':');\n\n        if (!this.guards[access[1]]) {\n          this.guards[access[1]] = [];\n        }\n        this.guards[access[1]].push(access[0]);\n      }\n    }\n\n    this.roles = roles || [];\n\n    this.setAuthenticated(isAuthenticated);\n\n    this._updated$.next(Date.now());\n    Logger.LogInfo('[PERMISSIONS] List:', this.guards, this.roles);\n  }\n\n  public setAuthenticated(isAuthenticated: boolean) {\n    this.isAuthenticated = isAuthenticated;\n    this._updated$.next(Date.now());\n  }\n\n  public hasRole(role: string): boolean {\n    return this.roles.some(x => x === role);\n  }\n\n  public canDirectAccess(feature: string, level: string | 'authenticated'): boolean {\n    if (level === 'authenticated') {\n      return this.isAuthenticated;\n    }\n\n    if (!feature) {\n      return true;\n    }\n\n    const featureGuard = this.guards[feature];\n    if (!featureGuard) {\n      return false;\n    }\n\n    if (featureGuard.includes('all')) {\n      return true;\n    }\n\n    if (!featureGuard.includes(level)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canAccess(feature: string, level: string | 'authenticated'): Observable<boolean> {\n    if (this.received) return of(this.canDirectAccess(feature, level));\n\n    return this._updated$.pipe(map(() => this.canDirectAccess(feature, level)));\n  }\n}\n\nexport const Permissions = new PermissionsCore();\n","import { HttpHeaders } from '@angular/common/http';\nimport { inject, Injectable, InjectionToken } from '@angular/core';\n\nimport { filter, tap } from 'rxjs';\n\nimport { isNonNullable } from '@beyond/utils';\n\nimport { BydBaseService } from '../server/baseService';\nimport { GraphMutationPayload, GraphQueryPayload } from '../graphql/models/graphPayload';\nimport { Request } from '../server/request';\nimport { Permissions } from '../user/permissions';\n\nexport const STRAPI_SERVER_CONFIG = new InjectionToken<IStrapiConfig>('config_strapi_server');\nexport interface IStrapiConfig {\n    url: string;\n    token: string;\n}\n\nexport type GraphStrapiResponse<T> = T\n\nexport type GraphStrapiListResponse<T> = T[]\n\nexport type GraphStrapiMutateResponse<T> = T;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BydStrapiService extends BydBaseService {\n\n  private readonly _config = inject(STRAPI_SERVER_CONFIG)\n\n  constructor() {\n    super();\n\n    const headers = new HttpHeaders({\n      authorization: `Bearer ${this._config.token}`,\n    });\n    super.registerRoutes({\n      graphEndpoint: {\n        clientName: 'strapi',\n        endpoint: this._config.url,\n        headers: headers\n      },\n    });\n  }\n\n  public authentification$(data: { identifier: string, password: string}) {\n    return this._serverService.request<{ jwt: string }>(new Request({ type: 'Login', cacheTime: -1, content: data, loginRequired: false })).pipe(\n      tap(data => {\n        Permissions.token = data.jwt;\n        Permissions.setAuthenticated(true)\n      })\n    );\n  }\n\n  public fetchQuery$<T>(payload: GraphQueryPayload, node: string) {\n    return this._graphService.fetchQuery<GraphStrapiResponse<T>>(payload, node, 'strapi').pipe(\n      filter(isNonNullable)\n    );\n  }\n\n  public fetchQueryList$<T>(payload: GraphQueryPayload, node: string) {\n    return this._graphService.fetchQuery<GraphStrapiListResponse<T>>(payload, node, 'strapi').pipe(\n      filter(isNonNullable),\n    );\n  }\n\n  public mutate$<T>(payload: GraphMutationPayload, node: string) {\n    return this._graphService.mutate<GraphStrapiResponse<T>>(payload, node, 'strapi').pipe(\n      filter(isNonNullable),\n    );\n  }\n}\n","export interface BaseStrapi {\r\n  documentId?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  publishedAt?: string;\r\n}\r\n\r\nexport const baseStrapiProps: (keyof BaseStrapi)[] = ['documentId', 'createdAt', 'updatedAt', 'publishedAt'];\r\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, filter, tap } from 'rxjs';\nimport { BydBaseService } from '../server/baseService';\nimport { MappingApiType } from '../server/api/requestMap';\nimport { Request } from '../server/request';\nimport { Permissions } from './permissions';\nimport { BydStrapiService } from '../strapi/strapi.service';\n\n\ninterface UserProfile {\n\n}\nconst apiRoutes: MappingApiType = {\n  Login: {\n    type: 'POST',\n    url: '{ApiUrl}/api/auth/local',\n  },\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BydAuthService extends BydStrapiService {\n  constructor() {\n    super();\n    super.registerRoutes({\n      apiRoutes\n    });\n  }\n\n  public login(data: { identifier: string, password: string}) {\n    return this.authentification$(data).subscribe()\n  }\n  public logout() {\n\n  }\n\n\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { Permissions } from '../../lib/services/user/permissions';\n\n\n@Injectable()\nexport class BearerInterceptor implements HttpInterceptor {\n  constructor() {\n    console.log(\"BearerInterceptor\")\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if(Permissions.token) {\n      const bearerHeader = req.clone({\n        headers: req.headers.set('Authorization', \"Bearer \" + Permissions.token)\n      });\n      return next.handle(bearerHeader);\n    }\n\n    return next.handle(req);\n\n  }\n}\n","\r\nimport { importProvidersFrom, Provider } from \"@angular/core\";\r\nimport { GRAPHQL_SERVER_CONFIG, IGraphConfig } from \"./services/graphql/models/graphConfig\";\r\nimport { ApolloModule } from \"apollo-angular\";\r\nimport { IServerConfig, SERVER_CONFIG_KEY } from \"./services/server/api/server.service\";\r\nimport { IStrapiConfig, STRAPI_SERVER_CONFIG } from \"./services/strapi/strapi.service\";\r\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { BearerInterceptor } from \"./interceptor/bearerInterceptor\";\r\n\r\nexport const provideServer = (data: {graphQlConfig: IGraphConfig, httpConfig: IServerConfig, strapiConfig: IStrapiConfig}): Provider => [\r\n    importProvidersFrom(ApolloModule),\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: BearerInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: GRAPHQL_SERVER_CONFIG,\r\n      useValue: data.graphQlConfig,\r\n    },\r\n    {\r\n      provide: SERVER_CONFIG_KEY,\r\n      useValue: data.httpConfig,\r\n    },\r\n    {\r\n      provide: STRAPI_SERVER_CONFIG,\r\n      useValue: data.strapiConfig,\r\n    },\r\n  ]\r\n","/*\r\n * Public API Surface of server\r\n */\r\n\r\nexport * from './lib/services/dto/keyvalue';\r\n\r\nexport * from './lib/helpers/handle-request';\r\n\r\nexport * from './lib/services/server/api/requestMap';\r\nexport * from './lib/services/server/api/server.service';\r\n\r\nexport * from './lib/services/server/baseService';\r\nexport * from './lib/services/server/cacheInterceptor';\r\n\r\nexport * from './lib/services/server/interface';\r\nexport * from './lib/services/server/request';\r\nexport * from './lib/services/server/response';\r\n\r\nexport * from './lib/services/logger';\r\n\r\nexport * from './lib/services/graphql/public-api';\r\n\r\nexport * from './lib/services/server/token';\r\n\r\nexport * from './lib/services/strapi/public-api';\r\n\r\nexport * from './lib/services/user/public-api';\r\n\r\nexport * from './lib/provider';\r\n\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["map"],"mappings":"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"}