{"version":3,"file":"beyond-odoo.mjs","sources":["../../../projects/odoo/src/lib/features/chatting/components/upload/files-upload.component.ts","../../../projects/odoo/src/lib/features/chatting/components/upload/files-upload.component.html","../../../projects/odoo/src/lib/injectionToken.ts","../../../projects/odoo/src/lib/services/connector/json.service.ts","../../../projects/odoo/src/lib/services/baseService.ts","../../../projects/odoo/src/lib/features/chatting/services/messages/messages.service.ts","../../../projects/odoo/src/lib/features/chatting/components/messages/messages.component.ts","../../../projects/odoo/src/lib/features/chatting/components/messages/messages.component.html","../../../projects/odoo/src/lib/interceptor/targetUrlInterceptor.ts","../../../projects/odoo/src/lib/provider.ts","../../../projects/odoo/src/lib/services/auth.service.ts","../../../projects/odoo/src/public-api.ts","../../../projects/odoo/src/beyond-odoo.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { TranslatePipe } from '@beyond/translation';\r\nimport { BydButtonComponent } from '@beyond/ui';\r\nimport { FileStructure, picImages, takeImage } from '@beyond/utils';\r\n\r\n\r\nexport interface ActionButtonData {\r\n  callback: (data?: any) => void;\r\n  icon: string;\r\n  label: string;\r\n}\r\nexport type Feature = 'take-pic' | 'upload-pic' | 'upload-file';\r\n\r\n@Component({\r\n  selector: 'byd-files-upload',\r\n  templateUrl: './files-upload.component.html',\r\n  styleUrls: ['./files-upload.component.scss'],\r\n  standalone: true,\r\n  imports: [BydButtonComponent, MatIcon, TranslatePipe],\r\n})\r\nexport class BydUploadComponent {\r\n  @Input()\r\n  features: Feature[] = [];\r\n\r\n  @Input()\r\n  canSelectMultipleFiles: boolean = false;\r\n\r\n  @Output()\r\n  filesPicked = new EventEmitter<FileStructure[]>();\r\n\r\n  get addActions(): ActionButtonData[] {\r\n    const actionsAvailable: ActionButtonData[] = [];\r\n\r\n    if (this._haveFeature('take-pic')) {\r\n      actionsAvailable.push({\r\n        label: 'add picture',\r\n        icon: 'add_a_photo',\r\n        callback: () => this._takePic(),\r\n      });\r\n    }\r\n\r\n    if (this._haveFeature('upload-pic')) {\r\n      actionsAvailable.push({\r\n        label: 'Upload',\r\n        icon: 'insert_photo',\r\n        callback: () => this._uploadPic(),\r\n      });\r\n    }\r\n\r\n    // if (this._haveFeature('upload-file')) {\r\n    //   actionsAvailable.push({\r\n    //     label: 'upload file',\r\n    //     icon: 'upload_file',\r\n    //     callback: () => this._uploadFile(),\r\n    //   });\r\n    // }\r\n\r\n    return actionsAvailable;\r\n  }\r\n\r\n  private _haveFeature(feature: Feature) {\r\n    return this.features.includes(feature);\r\n  }\r\n\r\n  private async _takePic() {\r\n    const file = await takeImage();\r\n    if (!file) {\r\n      return;\r\n    }\r\n    this.filesPicked.emit([file]);\r\n  }\r\n\r\n  private async _uploadPic() {\r\n    const pics = await picImages();\r\n    this.filesPicked.emit(pics);\r\n  }\r\n\r\n  // private async _uploadFile() {\r\n  //   // todo move into a capacitor filesystem service\r\n  //   const pickFiles = await FilePicker.pickFiles({\r\n  //     multiple: this.canSelectMultipleFiles,\r\n  //     types: [\r\n  //       // pdf\r\n  //       'application/pdf',\r\n  //       // word\r\n  //       'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n  //       'application/msword',\r\n  //       // excel\r\n  //       'application/vnd.ms-excel',\r\n  //       'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n  //       // text\r\n  //       'text/plain',\r\n  //     ],\r\n  //   });\r\n\r\n  //   const files = [];\r\n  //   for (let file of pickFiles.files) {\r\n  //     if (!file || !file.blob) continue;\r\n\r\n  //     files.push({ file: this._localToFile(file), localUrl: null });\r\n  //   }\r\n\r\n  //   this.filesPicked.emit(files);\r\n  // }\r\n\r\n  // private _localToFile(file: PickedFile): File {\r\n  //   return new File([file.blob!], file.name, {\r\n  //     type: file.mimeType,\r\n  //   });\r\n  // }\r\n}\r\n","@if (this.addActions.length === 1) {\r\n  <byd-button (action)=\"this.addActions[0].callback()\">\r\n    <mat-icon>{{ this.addActions[0].icon | translate }}</mat-icon>\r\n  </byd-button>\r\n} @else if (this.addActions.length > 1) {\r\n  <byd-button *ngFor=\"let action of this.addActions\" (action)=\"action.callback()\">\r\n    <mat-icon>{{ action.icon }}</mat-icon>\r\n  </byd-button>\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const ODOO_SERVER_CONFIG_KEY = new InjectionToken<IOdooServerConfig>('odoo-server-config');\r\nexport interface IOdooServerConfig {\r\n  proxyUrl: string;\r\n  db: string;\r\n  odooUrl: string;\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\n\r\nimport { BydNotificationService } from '@beyond/notification';\r\nimport { BydPermissionsServices } from '@beyond/server';\r\nimport { Subject, map, tap } from 'rxjs';\r\n\r\nimport { ODOO_SERVER_CONFIG_KEY } from '../../injectionToken';\r\n\r\nexport interface OdooAuthenticateResponse {\r\n  uid: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OdooJsonConnector {\r\n  readonly notificationService = inject(BydNotificationService);\r\n  readonly permissionsServices = inject(BydPermissionsServices);\r\n  readonly server = inject(ODOO_SERVER_CONFIG_KEY);\r\n\r\n  get uid() {\r\n    return this.permissionsServices.uid;\r\n  }\r\n  get pass() {\r\n    return this.permissionsServices.pass;\r\n  }\r\n\r\n  get url(): string {\r\n    return this.server.proxyUrl;\r\n  }\r\n  get db(): string {\r\n    return this.server.db;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  public login$(user: string, password: string) {\r\n    console.info('Getting UID');\r\n    return this._connectWithCredentials$(user, password).pipe(\r\n      tap(result => {\r\n        this.permissionsServices.set(result.uid, password);\r\n      }),\r\n      map(result => result.uid)\r\n    );\r\n  }\r\n\r\n  // Connexion avec identifiants\r\n  private _connectWithCredentials$(user: string, password: string) {\r\n    const endpoint = `${this.url}/web/session/authenticate`;\r\n    const params = {\r\n      jsonrpc: '2.0',\r\n      method: 'call',\r\n      params: {\r\n        db: this.db,\r\n        login: user,\r\n        password: password,\r\n      },\r\n      id: new Date().getTime(),\r\n    };\r\n\r\n    return this._call$<OdooAuthenticateResponse>(endpoint, params);\r\n  }\r\n\r\n  public searchCount$(model: string, domain: any[], opts: Record<string, any> = {}) {\r\n    console.info('Search & Count:', model);\r\n    return this._call_kw$<number>(model, 'search_count', [domain], opts);\r\n  }\r\n  public searchRead$<T>(model: string, domain: any[], fields: Array<keyof T> = [], opts: Record<string, any> = {}) {\r\n    console.info('Search & Read:', model);\r\n    return this._call_kw$<T[]>(model, 'search_read', [domain, fields], opts);\r\n  }\r\n\r\n  public create$<T>(model: string, values: Record<string, any>) {\r\n    return this._call_kw$<T>(model, 'create', [values]);\r\n  }\r\n\r\n  public write$<T>(model: string, id: number, values: Record<string, any>) {\r\n    return this._call_kw$<T>(model, 'write', [[id], values]);\r\n  }\r\n\r\n  public delete$(model: string, id: number) {\r\n    return this._call_kw$<boolean>(model, 'unlink', [[id]]);\r\n  }\r\n\r\n  public action$<T>(model: string, action: string, ids: number[]) {\r\n    return this._call_kw$<T>(model, action, ids);\r\n  }\r\n\r\n  private _call_kw$<T>(model: string, method: string, args: any[], kwargs: Record<string, any> = {}) {\r\n    return this._callWithUid<T>(model, method, args, kwargs);\r\n  }\r\n\r\n  private _callWithUid<T>(model: string, method: string, args: any[], kwargs: Record<string, any> = {}) {\r\n    const endpoint = `${this.url}/jsonrpc`;\r\n    const params = {\r\n      jsonrpc: '2.0',\r\n      method: 'call',\r\n      params: {\r\n        service: 'object',\r\n        method: 'execute_kw',\r\n        args: [this.db, this.uid, this.pass, model, method, args, kwargs],\r\n      },\r\n      id: new Date().getTime(),\r\n    };\r\n\r\n    return this._call$<T>(endpoint, params);\r\n  }\r\n\r\n  private _call$<T>(endpoint: string, params: any) {\r\n    const subject$ = new Subject<T>();\r\n    fetch(endpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(params),\r\n    }).then(response => {\r\n      this._extractResult<T>(response)\r\n        .then(result => {\r\n          console.log('response, ', result);\r\n          subject$.next(result);\r\n          subject$.complete();\r\n          subject$.unsubscribe();\r\n        })\r\n        .catch(error => {\r\n          subject$.error(error);\r\n          subject$.complete();\r\n          subject$.unsubscribe();\r\n          this._handleErrorMessage(error);\r\n        });\r\n    });\r\n\r\n    return subject$;\r\n  }\r\n\r\n  private async _extractResult<T>(response: any) {\r\n    if (!response || !response.ok) {\r\n      throw new Error(response?.statusText || 'Connection Error');\r\n    }\r\n\r\n    const body = <{ result: T; error: { data: { message: string } } }>await response.json();\r\n\r\n    if (body.error) {\r\n      this._handleErrorMessage(body.error.data.message);\r\n      throw new Error(body.error.data.message);\r\n    }\r\n    return body.result;\r\n  }\r\n\r\n  private _handleErrorMessage(message: any) {\r\n    const formattedMessage = message\r\n      .toString()\r\n      .replace('Error: Invalid XML-RPC', '')\r\n      .replace('Error: XML-RPC fault:', '');\r\n    this.notificationService.addErrorNotification(formattedMessage);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * out\r\n   */\r\n\r\n  // // MÃ©thodes pratiques pour les opÃ©rations CRUD\r\n\r\n  // async read(model: string, id: number | number[], fields: string[] = []): Promise<any> {\r\n  //   return this.call_kw(model, 'read', [id, fields]);\r\n  // }\r\n\r\n  // async search(model: string, domain: any[]): Promise<number[]> {\r\n  //   return (await this.call_kw(model, 'search', [domain])) || [];\r\n  // }\r\n\r\n  // async disconnect(): Promise<boolean> {\r\n  //   if (!this.is_connected) {\r\n  //     return true;\r\n  //   }\r\n\r\n  //   const endpoint = `${this.url}/web/session/destroy`;\r\n  //   const params = {\r\n  //     jsonrpc: '2.0',\r\n  //     method: 'call',\r\n  //     params: {},\r\n  //     id: new Date().getTime(),\r\n  //   };\r\n\r\n  //   const headers: Record<string, string> = {\r\n  //     'Content-Type': 'application/json',\r\n  //   };\r\n\r\n  //   const response = await fetch(endpoint, {\r\n  //       method: 'POST',\r\n  //       headers,\r\n  //       body: JSON.stringify(params),\r\n  //     });\r\n\r\n  //   const body = await response.json();\r\n\r\n  //   this.is_connected = false;\r\n  //   this.auth_response = null;\r\n  //   this.permissionsServices.reset();\r\n  //   this.connectionState.next(false);\r\n  //   return true;\r\n  // }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\n\r\nimport { getFirstString } from '@beyond/utils';\r\n\r\nimport { OdooJsonConnector } from './connector/json.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport abstract class BydBaseOdooService {\r\n  public _odooService = inject(OdooJsonConnector);\r\n\r\n  constructor() {}\r\n\r\n  protected _handleJoinData<T>(\r\n    entity: T,\r\n    props: Array<{\r\n      from?: keyof T;\r\n      to: keyof T;\r\n    }>\r\n  ): T {\r\n    return props.reduce<T>((entityFilled, prop) => {\r\n      const linkProp = prop.from ? prop.from : prop.to.toString() + '_id';\r\n      const list = (<any>entity)[linkProp] || [];\r\n      entityFilled[prop.to] = <any>getFirstString(list);\r\n\r\n      return entityFilled;\r\n    }, entity);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BehaviorSubject, filter, map, tap } from 'rxjs';\r\n\r\n\r\nimport { Message } from './dto/message';\r\nimport { BydBaseOdooService } from '../../../../services/baseService';\r\nimport { FileStructure, getBase64FromFile } from '@beyond/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppMessagesService extends BydBaseOdooService {\r\n  public messages$ = new BehaviorSubject<{ [id: number]: Message[] }>({});\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public getMessages$(id: number) {\r\n    return this.messages$.pipe(map(data => data[id]));\r\n  }\r\n\r\n  public fetchMessage$(data: { res_id: number; model: string; message_type: string }) {\r\n    return this._odooService\r\n      .searchRead$<Message>(\r\n        'mail.message',\r\n        [\r\n          ['res_id', '=', data.res_id],\r\n          ['model', 'like', data.model],\r\n          ['message_type', 'like', data.message_type],\r\n        ],\r\n        ['body', 'attachment_ids'],\r\n      )\r\n      .pipe(\r\n        filter(data => !!data),\r\n        tap(list => {\r\n          const entities = this.messages$.getValue();\r\n          entities[data.res_id] = list;\r\n          this.messages$.next(entities);\r\n        })\r\n      );\r\n  }\r\n\r\n  public async postMessage$(id: number, message: Message, files: FileStructure[]) {\r\n    const attachments = [];\r\n\r\n    for (let file of files.filter(att => att.file)) {\r\n      const base64 = file.file ? await getBase64FromFile(file.file) : null;\r\n      attachments.push({ file: base64, filetype: 'jpeg' });\r\n    }\r\n\r\n    return this._odooService.create$<Message>('mail.message', { ...message, ...{ subtype_id: 2}}).pipe(filter(data => !!data));\r\n    // return this._odooService\r\n    //   .action$<Message>('sale.order', 'log_message', [id],\r\n    //   //    {\r\n    //   //   ...message,\r\n    //   //   ...(attachments.length > 0 ? { attachments } : {}),\r\n    //   // }\r\n    // )\r\n    //   .pipe(filter(data => !!data));\r\n  }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { AppMessagesService } from '../../services/messages/messages.service';\r\nimport { BydBaseComponent, FileStructure } from '@beyond/utils';\r\nimport { InputTextBox } from '@beyond/form-model';\r\nimport { BydButtonComponent, ErrorComponent, LoaderComponent } from '@beyond/ui';\r\nimport { TextBoxComponent } from '@beyond/form-input';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { BydUploadComponent } from '../upload/files-upload.component';\r\nimport { AsyncPipe, NgFor, NgIf } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'byd-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss'],\r\n  standalone: true,\r\n  imports: [BydButtonComponent, LoaderComponent, ErrorComponent, TextBoxComponent, MatIcon, BydUploadComponent, NgIf, NgFor, AsyncPipe],\r\n})\r\nexport class BydMessagesComponent extends BydBaseComponent implements OnInit {\r\n  @Input()\r\n  id!: number;\r\n\r\n  @Input()\r\n  model!: string;\r\n\r\n  public input = new InputTextBox();\r\n\r\n  public tempImages: FileStructure[] = [];\r\n\r\n  get disable() {\r\n    return !this.input.value && this.tempImages.length === 0;\r\n  }\r\n  get data$() {\r\n    return this._messagesService.getMessages$(this.id);\r\n  }\r\n  constructor(private _messagesService: AppMessagesService) {\r\n    super();\r\n    this.input.createFormControl();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._fetch();\r\n  }\r\n\r\n  public uploadImage(images: FileStructure[]) {\r\n    this.tempImages = [...this.tempImages, ...images];\r\n  }\r\n  public remove(pic: FileStructure) {\r\n    this.tempImages = this.tempImages.filter(item => item.localUrl !== pic.localUrl);\r\n  }\r\n\r\n  public getPicUrl(id: number) {\r\n    return \"\"; // `${environment.server.odooUrl}/web/image/${id}`;\r\n  }\r\n\r\n  public async send() {\r\n    this.requestState.asked();\r\n    const subject$ = await this._messagesService.postMessage$(\r\n      this.id,\r\n      {\r\n        body: this.input.value ?? '',\r\n        res_id: this.id,\r\n        model: this.model,\r\n        message_type: 'comment',\r\n      },\r\n      this.tempImages\r\n    );\r\n\r\n    subject$?.subscribe(() => {\r\n      this._fetch();\r\n\r\n      this.tempImages = [];\r\n      this.input.value = '';\r\n    });\r\n  }\r\n\r\n  private _fetch() {\r\n    this.requestState.asked();\r\n\r\n    this._messagesService\r\n      .fetchMessage$({\r\n        res_id: this.id,\r\n        model: this.model,\r\n        message_type: 'comment',\r\n      })\r\n      .subscribe({\r\n        complete: () => this.requestState.completed(),\r\n        error: (error: HttpErrorResponse) => {\r\n          this.requestState.onError(error.status, error.statusText);\r\n        },\r\n      });\r\n  }\r\n}\r\n","<div>\r\n  <byd-loader [isLoading]=\"this.requestState.isLoading()\">\r\n    <byd-error [message]=\"this.requestState.getErrorMessage()\" [code]=\"this.requestState.getErrorStatus()\">\r\n      <div>\r\n        <byd-input-textbox [input]=\"this.input\"></byd-input-textbox>\r\n      </div>\r\n\r\n      <div class=\"row row-cols-3 g-0 align-items-center mb-2\">\r\n        <div *ngFor=\"let pic of this.tempImages\" class=\"temp-pic-container\">\r\n          <img [src]=\"pic.localUrl\" width=\"100%\" />\r\n          <div class=\"remove-cta\" (click)=\"this.remove(pic)\">\r\n            <mat-icon>close</mat-icon>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <byd-files-upload (filesPicked)=\"this.uploadImage($event)\" [features]=\"['take-pic']\"></byd-files-upload>\r\n        </div>\r\n      </div>\r\n\r\n      <byd-button (action)=\"this.send()\" [state]=\"this.disable ? 'disabled' : 'classic'\">\r\n        <mat-icon>send</mat-icon> Send\r\n      </byd-button>\r\n\r\n      <div>\r\n        <div *ngFor=\"let message of this.data$ | async\" class=\"item-message\">\r\n          <div [innerHTML]=\"message.body\"></div>\r\n          <hr *ngIf=\"(message.body && message.attachment_ids?.length) || 0 > 0\" />\r\n          <div class=\"row row-cols-3\">\r\n            <div *ngFor=\"let picId of message.attachment_ids\">\r\n              <img [src]=\"this.getPicUrl(picId)\" width=\"100%\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </byd-error>\r\n  </byd-loader>\r\n</div>\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ODOO_SERVER_CONFIG_KEY } from '../injectionToken';\r\n\r\n@Injectable()\r\nexport class TargetUrlInterceptor implements HttpInterceptor {\r\n  readonly server = inject(ODOO_SERVER_CONFIG_KEY);\r\n\r\n  constructor() {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(\r\n      req.clone({\r\n        headers: req.headers.set('target-url', this.server.odooUrl),\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Provider } from '@angular/core';\r\n\r\nimport { TargetUrlInterceptor } from './interceptor/targetUrlInterceptor';\r\n\r\nexport const provideOdoo = (): Provider => [\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TargetUrlInterceptor,\r\n    multi: true,\r\n  },\r\n];\r\n","import { Injectable, inject } from '@angular/core';\n\nimport { BydPermissionsServices } from '@beyond/server';\n\nimport { BydBaseOdooService } from './baseService';\n\ninterface UserProfile {}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BydAuthOdooService extends BydBaseOdooService {\n  readonly permissionsServices = inject(BydPermissionsServices);\n  constructor() {\n    super();\n  }\n\n  public login$(data: { identifier: string; password: string }) {\n    return this._odooService.login$(data.identifier, data.password);\n  }\n\n  public logout() {\n    this.permissionsServices.reset();\n    location.reload();\n  }\n}\n","/*\r\n * Public API Surface of odoo\r\n */\r\nexport * from './lib/features/chatting/public-api';\r\n\r\nexport * from './lib/provider';\r\n\r\nexport * from './lib/injectionToken';\r\nexport * from './lib/interceptor/targetUrlInterceptor';\r\n\r\nexport * from './lib/services/baseService';\r\nexport * from './lib/services/auth.service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.AppMessagesService"],"mappings":"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"}