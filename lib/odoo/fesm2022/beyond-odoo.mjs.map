{"version":3,"file":"beyond-odoo.mjs","sources":["../../../projects/odoo/src/lib/injectionToken.ts","../../../projects/odoo/src/lib/services/connector/json.service.ts","../../../projects/odoo/src/lib/services/baseService.ts","../../../projects/odoo/src/lib/features/chatting/services/messages/messages.service.ts","../../../projects/odoo/src/lib/features/chatting/components/upload/files-upload.component.ts","../../../projects/odoo/src/lib/features/chatting/components/upload/files-upload.component.html","../../../projects/odoo/src/lib/features/chatting/components/messages/messages.component.ts","../../../projects/odoo/src/lib/features/chatting/components/messages/messages.component.html","../../../projects/odoo/src/lib/features/chatting/services/messages/attachments.service.ts","../../../projects/odoo/src/lib/features/scan/services/scan-packing.service.ts","../../../projects/odoo/src/lib/features/scan/components/scan-packing-modal/scan-packing-modal.component.ts","../../../projects/odoo/src/lib/features/scan/components/scan-packing-modal/scan-packing-modal.component.html","../../../projects/odoo/src/lib/features/scan/components/scan-packing.component.ts","../../../projects/odoo/src/lib/features/printer/services/printer.service.ts","../../../projects/odoo/src/lib/features/printer/services/form.service.ts","../../../projects/odoo/src/lib/features/printer/components/label/label.component.ts","../../../projects/odoo/src/lib/features/printer/components/label/label.component.html","../../../projects/odoo/src/lib/features/printer/components/container/container.component.ts","../../../projects/odoo/src/lib/interceptor/targetUrlInterceptor.ts","../../../projects/odoo/src/lib/provider.ts","../../../projects/odoo/src/lib/services/auth.service.ts","../../../projects/odoo/src/lib/services/employee/employee.service.ts","../../../projects/odoo/src/public-api.ts","../../../projects/odoo/src/beyond-odoo.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const ODOO_SERVER_CONFIG_KEY = new InjectionToken<IOdooServerConfig>('odoo-server-config');\r\nexport interface IOdooServerConfig {\r\n  proxyUrl: string;\r\n  db: string;\r\n  odooUrl: string;\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\n\r\nimport { BydNotificationService } from '@beyond/notification';\r\nimport { BydPermissionsServices } from '@beyond/server';\r\nimport { Subject, catchError, map, of, tap } from 'rxjs';\r\n\r\nimport { ODOO_SERVER_CONFIG_KEY } from '../../injectionToken';\r\n\r\nexport interface OdooAuthenticateResponse {\r\n  uid: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OdooJsonConnector {\r\n  readonly notificationService = inject(BydNotificationService);\r\n  readonly permissionsServices = inject(BydPermissionsServices);\r\n  readonly server = inject(ODOO_SERVER_CONFIG_KEY);\r\n\r\n  get uid() {\r\n    return this.permissionsServices.hasRole('shared') ? \"%%COMMON_ID%%\" : this.permissionsServices.uid;\r\n  }\r\n  get pass() {\r\n    return this.permissionsServices.hasRole('shared') ? \"%%COMMON_PASS%%\" : this.permissionsServices.pass;\r\n  }\r\n\r\n  get url(): string {\r\n    return this.server.proxyUrl;\r\n  }\r\n  get db(): string {\r\n    return this.server.db;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  public login$(user: string | null, password: string) {\r\n    console.info('Getting UID');\r\n    if(!user) {\r\n      this.permissionsServices.set(2, password);\r\n      return this.searchCount$('res.users', [['id', '=', 2]]).pipe(\r\n        map(() => 2),\r\n        catchError(err => {this.permissionsServices.reset(); return of(err.message);}),\r\n      );\r\n    }\r\n    return this._connectWithCredentials$(user, password).pipe(\r\n      tap(result => {\r\n        this.permissionsServices.set(result.uid, password);\r\n      }),\r\n      map(result => result.uid)\r\n    );\r\n  }\r\n\r\n  // Connexion avec identifiants\r\n  private _connectWithCredentials$(user: string, password: string) {\r\n    const endpoint = `${this.url}/web/session/authenticate`;\r\n    const params = {\r\n      jsonrpc: '2.0',\r\n      method: 'call',\r\n      params: {\r\n        db: this.db,\r\n        login: user,\r\n        password: password,\r\n      },\r\n      id: new Date().getTime(),\r\n    };\r\n\r\n    return this._call$<OdooAuthenticateResponse>(endpoint, params);\r\n  }\r\n\r\n  public searchCount$(model: string, domain: any[], opts: Record<string, any> = {}) {\r\n    console.info('Search & Count:', model);\r\n    return this._call_kw$<number>(model, 'search_count', [domain], opts);\r\n  }\r\n  public searchRead$<T>(model: string, domain: any[], fields: Array<keyof T> = [], opts: Record<string, any> = {}) {\r\n    console.info('Search & Read:', model);\r\n    return this._call_kw$<T[]>(model, 'search_read', [domain, fields], opts);\r\n  }\r\n\r\n  public create$<T>(model: string, values: Record<string, any>) {\r\n    return this._call_kw$<T>(model, 'create', [values]);\r\n  }\r\n\r\n  public write$<T>(model: string, id: number, values: Record<string, any>) {\r\n    return this._call_kw$<T>(model, 'write', [[id], values]);\r\n  }\r\n\r\n  public delete$(model: string, id: number) {\r\n    return this._call_kw$<boolean>(model, 'unlink', [[id]]);\r\n  }\r\n\r\n  public action$<T>(model: string, action: string, id: number, context?: Record<string, any>) {\r\n    return this._call_kw$<T>(model, action, [[id]], context);\r\n  }\r\n\r\n  private _call_kw$<T>(model: string, method: string, args: any[], kwargs: Record<string, any> = {}) {\r\n    return this._callWithUid<T>(model, method, args, kwargs);\r\n  }\r\n\r\n  private _callWithUid<T>(model: string, method: string, args: any[], kwargs: Record<string, any> = {}) {\r\n    const endpoint = `${this.url}/jsonrpc`;\r\n    const params = {\r\n      jsonrpc: '2.0',\r\n      method: 'call',\r\n      params: {\r\n        service: 'object',\r\n        method: 'execute_kw',\r\n        args: [this.db, this.uid, this.pass, model, method, args, {...kwargs, ...{context: {\"company_id\": 1}}}],\r\n      },\r\n      id: new Date().getTime(),\r\n    };\r\n\r\n    return this._call$<T>(endpoint, params);\r\n  }\r\n\r\n  private _call$<T>(endpoint: string, params: any) {\r\n    const subject$ = new Subject<T>();\r\n    fetch(endpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'target-url': this.server.odooUrl\r\n      },\r\n      body: JSON.stringify(params),\r\n    }).then(response => {\r\n      this._extractResult<T>(response)\r\n        .then(result => {\r\n          console.log('response, ', result);\r\n          subject$.next(result);\r\n          subject$.complete();\r\n          subject$.unsubscribe();\r\n        })\r\n        .catch(error => {\r\n          subject$.error(error);\r\n          subject$.complete();\r\n          subject$.unsubscribe();\r\n          //this._handleErrorMessage(error);\r\n        });\r\n    });\r\n\r\n    return subject$;\r\n  }\r\n\r\n  private async _extractResult<T>(response: any) {\r\n    if (!response || !response.ok) {\r\n      throw new Error(response?.statusText || 'Connection Error');\r\n    }\r\n\r\n    const body = <{ result: T; error: { data: { message: string } } }>await response.json();\r\n\r\n    if (body.error) {\r\n      this._handleErrorMessage(body.error.data.message);\r\n      throw new Error(body.error.data.message);\r\n    }\r\n    return body.result;\r\n  }\r\n\r\n  private _handleErrorMessage(message: any) {\r\n    const formattedMessage = message\r\n      .toString()\r\n      .replace('Error: Invalid XML-RPC', '')\r\n      .replace('Error: XML-RPC fault:', '');\r\n    this.notificationService.addErrorNotification(formattedMessage);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * out\r\n   */\r\n\r\n  // // Méthodes pratiques pour les opérations CRUD\r\n\r\n  // async read(model: string, id: number | number[], fields: string[] = []): Promise<any> {\r\n  //   return this.call_kw(model, 'read', [id, fields]);\r\n  // }\r\n\r\n  // async search(model: string, domain: any[]): Promise<number[]> {\r\n  //   return (await this.call_kw(model, 'search', [domain])) || [];\r\n  // }\r\n\r\n  // async disconnect(): Promise<boolean> {\r\n  //   if (!this.is_connected) {\r\n  //     return true;\r\n  //   }\r\n\r\n  //   const endpoint = `${this.url}/web/session/destroy`;\r\n  //   const params = {\r\n  //     jsonrpc: '2.0',\r\n  //     method: 'call',\r\n  //     params: {},\r\n  //     id: new Date().getTime(),\r\n  //   };\r\n\r\n  //   const headers: Record<string, string> = {\r\n  //     'Content-Type': 'application/json',\r\n  //   };\r\n\r\n  //   const response = await fetch(endpoint, {\r\n  //       method: 'POST',\r\n  //       headers,\r\n  //       body: JSON.stringify(params),\r\n  //     });\r\n\r\n  //   const body = await response.json();\r\n\r\n  //   this.is_connected = false;\r\n  //   this.auth_response = null;\r\n  //   this.permissionsServices.reset();\r\n  //   this.connectionState.next(false);\r\n  //   return true;\r\n  // }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\n\r\nimport { getFirstString } from '@beyond/utils';\r\n\r\nimport { OdooJsonConnector } from './connector/json.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport abstract class BydBaseOdooService {\r\n  public _odooService = inject(OdooJsonConnector);\r\n\r\n  constructor() {}\r\n\r\n  protected _handleJoinData<T>(\r\n    entity: T,\r\n    props: Array<{\r\n      from?: keyof T;\r\n      to: keyof T;\r\n    }>\r\n  ): T {\r\n    return props.reduce<T>((entityFilled, prop) => {\r\n      const linkProp = prop.from ? prop.from : prop.to.toString() + '_id';\r\n      const list = (<any>entity)[linkProp] || [];\r\n      entityFilled[prop.to] = <any>getFirstString(list);\r\n\r\n      return entityFilled;\r\n    }, entity);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BehaviorSubject, filter, forkJoin, map, merge, mergeMap, of, tap } from 'rxjs';\r\n\r\n\r\nimport { Message } from './dto/message';\r\nimport { BydBaseOdooService } from '../../../../services/baseService';\r\nimport { FileStructure, getBase64FromFile } from '@beyond/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydMessagesService extends BydBaseOdooService {\r\n  public messages$ = new BehaviorSubject<{ [id: number]: Message[] }>({});\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public getMessages$(id: number) {\r\n    return this.messages$.pipe(map(data => data[id]));\r\n  }\r\n\r\n  public fetchMessage$(data: { res_id: number; model: string; message_type: string }) {\r\n    return this._odooService\r\n      .searchRead$<Message>(\r\n        'mail.message',\r\n        [\r\n          ['res_id', '=', data.res_id],\r\n          ['model', 'like', data.model],\r\n          ['message_type', 'like', data.message_type],\r\n        ],\r\n        ['body', 'attachment_ids'],\r\n      )\r\n      .pipe(\r\n        filter(data => !!data),\r\n        tap(list => {\r\n          const entities = this.messages$.getValue();\r\n          entities[data.res_id] = list;\r\n          this.messages$.next(entities);\r\n        })\r\n      );\r\n  }\r\n\r\n  public async postMessage$(id: number, message: Message, files: FileStructure[]) {\r\n    const attachments: any[] = [];\r\n\r\n    for (let file of files.filter(att => att.file)) {\r\n      if(!file.file) {\r\n        continue;\r\n      }\r\n      const base64 = (await getBase64FromFile(file.file)).split(',')[1];\r\n      attachments.push({ name: 'attachments-by-app-'+id, datas: base64, res_model:message.model });\r\n    }\r\n\r\n    return (attachments.length > 0 ? forkJoin([...attachments.map(attachment =>\r\n      this._odooService.create$<number>('ir.attachment', { ...attachment, ...{ res_id: id } })\r\n    )]) : of([])).pipe(mergeMap((ids: number[]) => {\r\n    return this._odooService.create$<number>('mail.message', { ...message, ...{ subtype_id: 2, attachment_ids: ids } });\r\n    }));\r\n  }\r\n}\r\n","import { Component, computed, effect, EventEmitter, Input, Output, signal } from '@angular/core';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { TranslatePipe } from '@beyond/translation';\r\nimport { BydButtonComponent } from '@beyond/ui';\r\nimport { FileStructure, picImages, takeImage } from '@beyond/utils';\r\n\r\n\r\nexport interface ActionButtonData {\r\n  callback: (data?: any) => void;\r\n  icon: string;\r\n  label: string;\r\n}\r\nexport type Feature = 'take-pic' | 'upload-pic' | 'upload-file';\r\n\r\n@Component({\r\n  selector: 'byd-files-upload',\r\n  templateUrl: './files-upload.component.html',\r\n  styleUrls: ['./files-upload.component.scss'],\r\n  standalone: true,\r\n  imports: [BydButtonComponent, MatIcon, TranslatePipe],\r\n})\r\nexport class BydUploadComponent {\r\n  @Input()\r\n  features: Feature[] = [];\r\n\r\n  @Input()\r\n  canSelectMultipleFiles: boolean = false;\r\n\r\n  @Output()\r\n  filesPicked = new EventEmitter<FileStructure[]>();\r\n\r\n  public tempImages = signal<FileStructure[]>([]);\r\n\r\n  get addActions(): ActionButtonData[] {\r\n    const actionsAvailable: ActionButtonData[] = [];\r\n\r\n    if (this._haveFeature('take-pic')) {\r\n      actionsAvailable.push({\r\n        label: 'add picture',\r\n        icon: 'add_a_photo',\r\n        callback: () => this._takePic(),\r\n      });\r\n    }\r\n\r\n    if (this._haveFeature('upload-pic')) {\r\n      actionsAvailable.push({\r\n        label: 'Upload',\r\n        icon: 'insert_photo',\r\n        callback: () => this._uploadPic(),\r\n      });\r\n    }\r\n\r\n    // if (this._haveFeature('upload-file')) {\r\n    //   actionsAvailable.push({\r\n    //     label: 'upload file',\r\n    //     icon: 'upload_file',\r\n    //     callback: () => this._uploadFile(),\r\n    //   });\r\n    // }\r\n\r\n    return actionsAvailable;\r\n  }\r\n\r\n  constructor() {\r\n    effect(() => {\r\n      this.filesPicked.emit(this.tempImages());\r\n    });\r\n  }\r\n\r\n  public addImage(images: FileStructure[]) {\r\n    this.tempImages.set([...this.tempImages(), ...images]);\r\n  }\r\n  public remove(pic: FileStructure) {\r\n    this.tempImages.set(this.tempImages().filter(item => item.localUrl !== pic.localUrl));\r\n  }\r\n\r\n  private _haveFeature(feature: Feature) {\r\n    return this.features.includes(feature);\r\n  }\r\n\r\n  private async _takePic() {\r\n    const file = await takeImage();\r\n    if (!file) {\r\n      return;\r\n    }\r\n    this.addImage([file]);\r\n  }\r\n\r\n  private async _uploadPic() {\r\n    const pics = await picImages();\r\n    this.addImage(pics);\r\n  }\r\n\r\n  // private async _uploadFile() {\r\n  //   // todo move into a capacitor filesystem service\r\n  //   const pickFiles = await FilePicker.pickFiles({\r\n  //     multiple: this.canSelectMultipleFiles,\r\n  //     types: [\r\n  //       // pdf\r\n  //       'application/pdf',\r\n  //       // word\r\n  //       'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n  //       'application/msword',\r\n  //       // excel\r\n  //       'application/vnd.ms-excel',\r\n  //       'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n  //       // text\r\n  //       'text/plain',\r\n  //     ],\r\n  //   });\r\n\r\n  //   const files = [];\r\n  //   for (let file of pickFiles.files) {\r\n  //     if (!file || !file.blob) continue;\r\n\r\n  //     files.push({ file: this._localToFile(file), localUrl: null });\r\n  //   }\r\n\r\n  //   this.filesPicked.emit(files);\r\n  // }\r\n\r\n  // private _localToFile(file: PickedFile): File {\r\n  //   return new File([file.blob!], file.name, {\r\n  //     type: file.mimeType,\r\n  //   });\r\n  // }\r\n}\r\n","<div class=\"grid align-items-center mb-space-xs\">\r\n  @for (pic of this.tempImages(); track pic.localUrl) {\r\n    <div class=\"temp-pic-container g-col-3\">\r\n      <img [src]=\"pic.localUrl\" width=\"100%\" />\r\n      <div class=\"remove-cta\" (click)=\"this.remove(pic)\">\r\n        <mat-icon>close</mat-icon>\r\n      </div>\r\n    </div>\r\n  }\r\n  <div>\r\n    @if (this.addActions.length === 1) {\r\n      <byd-button (action)=\"this.addActions[0].callback()\">\r\n        <mat-icon>{{ this.addActions[0].icon | translate }}</mat-icon>\r\n      </byd-button>\r\n    } @else if (this.addActions.length > 1) {\r\n      <byd-button *ngFor=\"let action of this.addActions\" (action)=\"action.callback()\">\r\n        <mat-icon>{{ action.icon }}</mat-icon>\r\n      </byd-button>\r\n    }\r\n  </div>\r\n</div>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, inject, Input, OnInit, signal } from '@angular/core';\r\nimport { BydMessagesService } from '../../services/messages/messages.service';\r\nimport { BydBaseComponent, FileStructure } from '@beyond/utils';\r\nimport { InputTextBox } from '@beyond/form-model';\r\nimport { BydButtonComponent, ErrorComponent, LoaderComponent } from '@beyond/ui';\r\nimport { TextBoxComponent } from '@beyond/form-input';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { BydUploadComponent } from '../upload/files-upload.component';\r\nimport { AsyncPipe, NgFor, NgIf } from '@angular/common';\r\nimport { ODOO_SERVER_CONFIG_KEY } from '../../../../injectionToken';\r\n\r\n\r\n@Component({\r\n  selector: 'byd-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss'],\r\n  standalone: true,\r\n  imports: [BydButtonComponent, LoaderComponent, ErrorComponent, TextBoxComponent, MatIcon, BydUploadComponent, NgIf, NgFor, AsyncPipe],\r\n})\r\nexport class BydMessagesComponent extends BydBaseComponent implements OnInit {\r\n  @Input()\r\n  id!: number;\r\n\r\n  @Input()\r\n  model!: string;\r\n\r\n  readonly server = inject(ODOO_SERVER_CONFIG_KEY);\r\n  private readonly _messagesService = inject(BydMessagesService);\r\n  public input = new InputTextBox();\r\n  public images = signal<FileStructure[]>([]);\r\n\r\n\r\n  get disable() {\r\n    return !this.input.value && this.images().length === 0;\r\n  }\r\n  get data$() {\r\n    return this._messagesService.getMessages$(this.id);\r\n  }\r\n  constructor() {\r\n    super();\r\n    this.input.createFormControl();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._fetch();\r\n  }\r\n\r\n  public getPicUrl(id: number) {\r\n    return `${this.server.odooUrl}/web/image/${id}`;\r\n  }\r\n\r\n  public async send() {\r\n    this.requestState.asked();\r\n    const subject$ = await this._messagesService.postMessage$(\r\n      this.id,\r\n      {\r\n        body: this.input.value ?? '',\r\n        res_id: this.id,\r\n        model: this.model,\r\n        message_type: 'comment',\r\n      },\r\n      this.images()\r\n    );\r\n\r\n    subject$?.subscribe(() => {\r\n      this._fetch();\r\n\r\n      this.images.set([]);\r\n      this.input.value = '';\r\n    });\r\n  }\r\n\r\n  private _fetch() {\r\n    this.requestState.asked();\r\n\r\n    this._messagesService\r\n      .fetchMessage$({\r\n        res_id: this.id,\r\n        model: this.model,\r\n        message_type: 'comment',\r\n      })\r\n      .subscribe({\r\n        complete: () => this.requestState.completed(),\r\n        error: (error: HttpErrorResponse) => {\r\n          this.requestState.onError(error.status, error.statusText);\r\n        },\r\n      });\r\n  }\r\n}\r\n","<div>\r\n  <byd-loader [isLoading]=\"this.requestState.isLoading()\">\r\n    <byd-error [message]=\"this.requestState.getErrorMessage()\" [code]=\"this.requestState.getErrorStatus()\">\r\n      <div>\r\n        <byd-input-textbox [input]=\"this.input\"></byd-input-textbox>\r\n      </div>\r\n\r\n      <div>\r\n        <byd-files-upload (filesPicked)=\"this.images.set($event)\" [features]=\"['take-pic']\"></byd-files-upload>\r\n      </div>\r\n\r\n      <byd-button (action)=\"this.send()\" [state]=\"this.disable ? 'disabled' : 'classic'\">\r\n        <mat-icon>send</mat-icon> Send\r\n      </byd-button>\r\n\r\n      <div>\r\n        <div *ngFor=\"let message of this.data$ | async\" class=\"item-message\">\r\n          <div [innerHTML]=\"message.body\"></div>\r\n          <hr *ngIf=\"(message.body && message.attachment_ids?.length) || 0 > 0\" />\r\n          <div class=\"grid\">\r\n            <div *ngFor=\"let picId of message.attachment_ids\" class=\"g-col-3\">\r\n              <img [src]=\"this.getPicUrl(picId)\" width=\"100%\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </byd-error>\r\n  </byd-loader>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { filter, forkJoin, of } from 'rxjs';\r\n\r\nimport { BydBaseOdooService } from '../../../../services/baseService';\r\nimport { FileStructure, getBase64FromFile } from '@beyond/utils';\r\nimport { HandleComplexRequest } from '@beyond/server';\r\nimport { Attachment } from './dto/attachment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydAttachementsService extends BydBaseOdooService {\r\n\r\n  public readonly attachments = new HandleComplexRequest<Attachment[]>();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public key(id: number, model: string) {\r\n    return `${id}-${model}`;\r\n  }\r\n\r\n  public fetch$(id: number, model: string) {\r\n    return this.attachments.fetch(\r\n      this.key(id, model),\r\n      this._odooService.searchRead$<Attachment>('ir.attachment', [\r\n        ['res_id', '=', id],\r\n        ['res_model', '=', model]\r\n      ], ['id'])\r\n      .pipe(\r\n          filter(data => !!data)\r\n      )\r\n    );\r\n  }\r\n  public async post$(id: number, model: string, files: FileStructure[]) {\r\n    const attachments: any[] = [];\r\n\r\n    for (let file of files.filter(att => att.file)) {\r\n      if(!file.file) {\r\n        continue;\r\n      }\r\n      const base64 = (await getBase64FromFile(file.file)).split(',')[1];\r\n      attachments.push({ name: 'attachments-by-app-'+id, datas: base64, res_model:model });\r\n    }\r\n\r\n    return (attachments.length > 0 ? forkJoin([...attachments.map(attachment =>\r\n      this._odooService.create$<number>('ir.attachment', { ...attachment, ...{ res_id: id } })\r\n    )]) : of([]))\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\n\r\nimport { filter, Subject } from 'rxjs';\r\n\r\nimport { SearchItem, SearchResult } from './dto/search';\r\nimport { BydBaseOdooService } from '../../../services/baseService';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydScanPackingService extends BydBaseOdooService {\r\n\r\n  public askScanning = new Subject();\r\n\r\n  public searchScanItem: SearchItem | null = null;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public lookForPacking$(model: string, id: number) {\r\n    return this._odooService\r\n        .action$<SearchResult>(model, 'search_by_id', id)\r\n        .pipe(filter(data => !!data));\r\n\r\n  }\r\n\r\n  public setActiveScanItem(item: SearchItem) {\r\n    this.searchScanItem = item;\r\n  }\r\n  public clearActiveScanItem() {\r\n    this.searchScanItem = null;\r\n  }\r\n}\r\n","import { Component, Inject, inject, Input, OnDestroy, signal } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { BydBaseComponent } from '@beyond/utils';\r\nimport { BydScanPackingService } from '../../services/scan-packing.service';\r\nimport { BydNotificationService } from '@beyond/notification';\r\nimport { SearchItem, SearchResult } from '../../services/dto/search';\r\nimport { CardComponent, CardCtaComponent, CardHeaderComponent, CardTitleComponent, EmptyComponent, ErrorComponent, LoaderComponent } from '@beyond/ui';\r\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\r\nimport { TranslatePipe } from '@beyond/translation';\r\nimport { MatIcon } from '@angular/material/icon';\r\n\r\nexport interface Scope {\r\n  key: string;\r\n  navigation: (id: SearchItem) => void;\r\n}\r\n\r\nexport interface ScanPackingDialogData {\r\n  scopes: Scope[];\r\n}\r\n@Component({\r\n  selector: '',\r\n  templateUrl: './scan-packing-modal.component.html',\r\n  styleUrls: ['./scan-packing-modal.component.scss'],\r\n  standalone: true,\r\n  imports: [LoaderComponent, EmptyComponent, ErrorComponent, ZXingScannerModule, CardComponent, CardHeaderComponent, CardTitleComponent, TranslatePipe, MatIcon, CardCtaComponent],\r\n})\r\nexport class ScanPackingDialog extends BydBaseComponent implements OnDestroy {\r\n\r\n\r\n  private readonly _scanPackingService = inject(BydScanPackingService);\r\n  private readonly _notificationService = inject(BydNotificationService);\r\n\r\n  public step = signal<'scan' | 'search'>('scan');\r\n\r\n  public activeScope: Scope | null = null;\r\n\r\n  public searchResult: SearchResult | null = null;\r\n\r\n  get scopes() {\r\n    return this.data?.scopes || [];\r\n  }\r\n  get noData() {\r\n    if (!this.searchResult) {\r\n      return true;\r\n    }\r\n    return Object.values(this.searchResult).every(items => items.length === 0);\r\n  }\r\n  constructor(public dialogRef: MatDialogRef<ScanPackingDialog>,  @Inject(MAT_DIALOG_DATA) public data?: ScanPackingDialogData) {\r\n    super();\r\n  }\r\n\r\n  public scanSuccess(result: string) {\r\n    if (!result) {\r\n      this._notificationService.addErrorNotification('QR core is not valid');\r\n      this.dialogRef.close();\r\n      return;\r\n    }\r\n\r\n    const id = this._extractIdFormUrl(result);\r\n\r\n    if (!id || isNaN(id)) {\r\n      this._notificationService.addErrorNotification('QR core is not valid (id)');\r\n      this.dialogRef.close();\r\n      return;\r\n    }\r\n\r\n    const model = this._extractModelFormUrl(result);\r\n    if (!model) {\r\n      this._notificationService.addErrorNotification('QR core is not valid (model)');\r\n      this.dialogRef.close();\r\n      return;\r\n    }\r\n\r\n    this.step.set('search');\r\n    this._scanPackingService.lookForPacking$(model, id).subscribe({\r\n      next: searchResult => {\r\n        this._processSearchResult(searchResult);\r\n\r\n        this.requestState.completed();\r\n      },\r\n      error: () => {\r\n        this.dialogRef.close();\r\n      },\r\n    });\r\n  }\r\n  public permissionResponse(repsonse: boolean) {\r\n    if (!repsonse) {\r\n      this._notificationService.addErrorNotification('Permission not granted');\r\n      this.dialogRef.close();\r\n      return;\r\n    }\r\n  }\r\n  public getDataByScope(scope: Scope) {\r\n    if(!this.searchResult) {\r\n      return [];\r\n    }\r\n    return this.searchResult[scope.key] || [];\r\n  }\r\n  public setScope(scope: Scope) {\r\n    this.activeScope = scope;\r\n\r\n    const list = this.getDataByScope(scope);\r\n    if (list.length === 1) {\r\n      this.navigateTo(scope, list[0]);\r\n    }\r\n  }\r\n\r\n  public navigateTo(scope: Scope | null, item: SearchItem) {\r\n    if(!scope) {\r\n      return;\r\n    }\r\n    this._scanPackingService.setActiveScanItem(item);\r\n\r\n    scope.navigation(item);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private _processSearchResult(searchResult: { [index: string]: SearchItem[] }) {\r\n    this.searchResult = searchResult;\r\n\r\n    const allEntries = Object.entries(searchResult);\r\n    const totalCount = allEntries.reduce((sum, [, items]) => sum + items.length, 0);\r\n\r\n    if (totalCount !== 1) {\r\n      return;\r\n    }\r\n\r\n    for (const [key, items] of allEntries) {\r\n      if (items.length > 0) {\r\n        const scope = this._getScopeByKey(key);\r\n        this.navigateTo(scope, items[0]);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  private _getScopeByKey(key: string): Scope | null {\r\n    return this.scopes.find(scope => scope.key === key) || null;\r\n  }\r\n\r\n  private _extractIdFormUrl(url: string): number | null {\r\n    const match = url.match(/id=(\\d+)/);\r\n\r\n    if (!match) {\r\n      return null;\r\n    }\r\n\r\n    return Number(match[1]);\r\n  }\r\n  private _extractModelFormUrl(url: string): string | null {\r\n    const match = url.match(/model=([a-zA-Z.]+)/);\r\n\r\n    if (!match) {\r\n      return null;\r\n    }\r\n\r\n    return match[1];\r\n  }\r\n}\r\n","<div class=\"p-space-md\">\r\n  @if (this.step() === 'scan') {\r\n    <zxing-scanner\r\n      (scanSuccess)=\"this.scanSuccess($event)\"\r\n      (permissionResponse)=\"this.permissionResponse($event)\"\r\n    ></zxing-scanner>\r\n  } @else if (this.step() === 'search') {\r\n    <byd-loader [isLoading]=\"this.requestState.isLoading()\">\r\n      <byd-error [message]=\"this.requestState.getErrorMessage()\" [code]=\"this.requestState.getErrorStatus()\">\r\n        <byd-empty [isEmpty]=\"this.noData\" [isLight]=\"false\">\r\n          <div class=\"grid\">\r\n            @for (scope of this.scopes; track scope) {\r\n              @if (this.getDataByScope(scope).length > 0) {\r\n                <div>\r\n                  <byd-card [highlight]=\"this.activeScope?.key === scope.key\" (click)=\"this.setScope(scope)\">\r\n                    <byd-card-header class=\"ta-c\">\r\n                      <byd-card-title>\r\n                        {{ 'scan.' + scope.key + '.name' | translate }} ({{ this.getDataByScope(scope).length }})\r\n                      </byd-card-title>\r\n                    </byd-card-header>\r\n                  </byd-card>\r\n                </div>\r\n              }\r\n            }\r\n          </div>\r\n          @if (this.activeScope) {\r\n            <div>\r\n              @for (item of this.getDataByScope(this.activeScope); track item) {\r\n                <div class=\"flex-column justify-content-between m-space-md\">\r\n                  <byd-card (click)=\"this.navigateTo(this.activeScope, item)\">\r\n                    <byd-card-header class=\"ta-c\">\r\n                      <byd-card-title>\r\n                        {{ item.name }}\r\n                      </byd-card-title>\r\n                    </byd-card-header>\r\n                    <byd-card-cta>\r\n                      <mat-icon>chevron_right</mat-icon>\r\n                    </byd-card-cta>\r\n                  </byd-card>\r\n                </div>\r\n              }\r\n            </div>\r\n          }\r\n        </byd-empty>\r\n      </byd-error>\r\n    </byd-loader>\r\n  }\r\n</div>\r\n","import { Component, inject, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { ScanPackingDialog, ScanPackingDialogData, Scope } from './scan-packing-modal/scan-packing-modal.component';\r\nimport { BydScanPackingService } from '../services/scan-packing.service';\r\nimport { BydBaseComponent } from '@beyond/utils';\r\n\r\n\r\n@Component({\r\n  selector: 'byd-scan-packing',\r\n  template: '',\r\n})\r\nexport class BydScanPackingComponent extends BydBaseComponent {\r\n  @Input()\r\n  scopes!: Scope[];\r\n\r\n  private readonly _scanPacking = inject(BydScanPackingService);\r\n  constructor(private _dialog: MatDialog) {\r\n    super();\r\n\r\n    this._registerSubscription(this._scanPacking.askScanning.subscribe(this.openScan));\r\n  }\r\n\r\n  public openScan = () => {\r\n    this._dialog.open<ScanPackingDialog, ScanPackingDialogData>(ScanPackingDialog, {\r\n      data: {\r\n        scopes: this.scopes,\r\n      },\r\n    });\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { filter, map, mergeMap, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { BehaviorSubject, Observable, Subject, forkJoin, of } from 'rxjs';\r\n\r\n\r\nimport { PrintDirectWizard } from './dto/print_direct_wizard';\r\nimport { PrintDirectWizardLine, PrintDirectWizardLinePost } from './dto/print_direct_wizard_line';\r\nimport { Printer } from './dto/printer';\r\nimport { BydBaseOdooService } from '../../../services/baseService';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydPrinterService extends BydBaseOdooService {\r\n  public askPrintingWizard$ = new Subject<{ id: number; model: string }>();\r\n\r\n  public printers$ = new BehaviorSubject<Printer[]>([]);\r\n\r\n  private _printWizard$ = new BehaviorSubject<{ [id: string]: PrintDirectWizard }>({});\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public getPrintWizard$(id: number) {\r\n    return this._printWizard$.pipe(\r\n      map(data => data[id]),\r\n      filter(myData => !!myData)\r\n    );\r\n  }\r\n  public printWizard$(data: { id: number; model: string }) {\r\n    const model: Observable<PrintDirectWizard[]> =\r\n      data.model === 'print.direct.wizard'\r\n        ? this._odooService.searchRead$<PrintDirectWizard>(\r\n            'print.direct.wizard',\r\n            [['id', '=', data.id]],\r\n            ['id', 'display_name', 'print_lines']\r\n          )\r\n        : of<PrintDirectWizard[]>([\r\n            {\r\n              id: data.id,\r\n              display_name: '',\r\n              print_lines: [data.id],\r\n            },\r\n          ]);\r\n\r\n    return model.pipe(\r\n      filter(data => !!data),\r\n      map(data => data[0]),\r\n      mergeMap(entity =>\r\n        this._odooService\r\n          .searchRead$<PrintDirectWizardLine>(\r\n            'print.direct.wizard.line',\r\n            [['id', 'in', entity.print_lines]],\r\n            ['id', 'display_name', 'print_qty', 'printer_id']\r\n          )\r\n          .pipe(\r\n            map(lines => ({\r\n              ...entity,\r\n              ...{\r\n                lines,\r\n              },\r\n            }))\r\n          )\r\n      ),\r\n      tap(entity => {\r\n        const entities = this._printWizard$.getValue();\r\n        entities[entity.id] = entity;\r\n        this._printWizard$.next(entities);\r\n      })\r\n    );\r\n  }\r\n\r\n  public fetchPrinters$() {\r\n    return this._odooService\r\n      .searchRead$<Printer>('remote.printer.printer', [], ['id', 'name'],)\r\n      .pipe(tap(list => this.printers$.next(list)));\r\n  }\r\n\r\n  public print$(lines: PrintDirectWizardLinePost[]) {\r\n    return forkJoin(\r\n      lines.map(line => {\r\n        if (line.print_qty === 0 || !line.printer_id) {\r\n          return of();\r\n        }\r\n        return this._odooService\r\n          .write$<PrintDirectWizardLine>('print.direct.wizard.line', line.id, line)\r\n          .pipe(switchMap(() => this._odooService.action$('print.direct.wizard.line', 'action_print', line.id)));\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\n\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\nimport { PrintDirectWizard } from './dto/print_direct_wizard';\r\nimport { PrintDirectWizardLinePost } from './dto/print_direct_wizard_line';\r\nimport { BydPrinterService } from './printer.service';\r\nimport { InputBase, InputDropdown, InputPanel, InputLabel, InputNumber, InputCheckBox } from '@beyond/form-model';\r\nimport { getFirstNumber } from '@beyond/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydPrinterFormService {\r\n\r\n  private readonly _printerService = inject(BydPrinterService);\r\n  constructor() {\r\n    this._printerService.fetchPrinters$().subscribe();\r\n  }\r\n  public getForm(wizard: PrintDirectWizard): InputBase<any>[] {\r\n    /* printer */\r\n    const printerItemsInput: InputDropdown<any>[] = [];\r\n    const printerlistInput = new InputDropdown({\r\n      key: 'printer',\r\n      showNothingOption: true,\r\n      class: 'col-5',\r\n      options: this._printerService.printers$.pipe(\r\n        map(printers =>\r\n          printers.map(printer => ({\r\n            id: printer.id.toString(),\r\n            name: printer.name,\r\n          }))\r\n        )\r\n      ),\r\n    });\r\n    printerlistInput.changeValue$.subscribe(value => {\r\n      printerItemsInput.forEach(item => (item.value = (value ? value : null)));\r\n    });\r\n\r\n    /* Qty */\r\n    // const qtyItemsInput: InputNumber[] = [];\r\n    // const qtylistInput = new InputNumber({\r\n    //   key: 'qty',\r\n    //   class: 'col-2',\r\n    // });\r\n    // qtylistInput.changeValue$.subscribe(value => {\r\n    //   qtyItemsInput.forEach(item => (value ? item.formControl.setValue(value) : null));\r\n    // });\r\n    return [\r\n      new InputPanel({\r\n        key: 'panel',\r\n        class: 'col-9',\r\n        children: [\r\n          new InputPanel({\r\n            key: 'panel',\r\n            class: 'p-15',\r\n            contentClass: 'row align-items-center',\r\n            children: [\r\n              new InputLabel({\r\n                key: 'label',\r\n                label: 'Printer: ',\r\n                class: 'col-auto',\r\n              }),\r\n              printerlistInput,\r\n            ],\r\n          }),\r\n          new InputPanel({\r\n            key: 'panel',\r\n            contentClass: 'row align-items-center fs-5',\r\n            children: [\r\n              new InputLabel({\r\n                key: 'label',\r\n                label: 'Label for',\r\n                class: 'col-7 ta-c',\r\n              }),\r\n              new InputLabel({\r\n                key: 'label',\r\n                label: 'Quantity',\r\n                class: 'col-2 ta-c',\r\n              }),\r\n              new InputLabel({\r\n                key: 'label',\r\n                label: 'Printer',\r\n                class: 'col-3 ta-c',\r\n              }),\r\n            ],\r\n          }),\r\n          ...(wizard.lines?.map(line => {\r\n            /** Print */\r\n            const printerInput = new InputDropdown({\r\n              key: 'line-' + line.id + '-printer',\r\n              class: 'col-3',\r\n              showNothingOption: true,\r\n              options: this._printerService.printers$.pipe(\r\n                map(printers =>\r\n                  printers.map(printer => ({\r\n                    id: printer.id.toString(),\r\n                    name: printer.name,\r\n                  }))\r\n                )\r\n              ),\r\n              value: getFirstNumber(line.printer_id)?.toString(),\r\n            });\r\n            printerItemsInput.push(printerInput);\r\n            /** qty */\r\n            const qtyInput = new InputNumber({\r\n              key: 'line-' + line.id + '-qty',\r\n              class: 'col-2',\r\n              value: line.print_qty.toString(),\r\n            });\r\n            // qtyItemsInput.push(qtyInput);\r\n\r\n            return new InputPanel({\r\n              key: 'panel',\r\n              contentClass: 'row align-items-center',\r\n              children: [\r\n                new InputCheckBox({\r\n                  key: 'line-' + line.id + '-check',\r\n                  class: 'col-1',\r\n                  toggle: true,\r\n                  value: true,\r\n                }),\r\n                new InputLabel({\r\n                  key: 'label-' + line.id,\r\n                  label: line.display_name,\r\n                  class: 'col-6 fs-5',\r\n                  value: line.id,\r\n                }),\r\n                qtyInput,\r\n                printerInput,\r\n              ],\r\n            });\r\n          }) ?? []),\r\n        ],\r\n      }),\r\n    ];\r\n  }\r\n\r\n  public formatForm(data: any): PrintDirectWizardLinePost[] {\r\n    const keys = Object.keys(data);\r\n    const lineIds = keys\r\n      .filter(key => key.startsWith('label-'))\r\n      .map(key => data[key])\r\n      .filter(id => data['line-' + id + '-check']);\r\n\r\n    return lineIds.map(id => ({\r\n      id: id,\r\n      print_qty: Number(data['line-' + id + '-qty']),\r\n      printer_id: Number(data['line-' + id + '-printer']),\r\n    }));\r\n  }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, inject, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { InputBase } from '@beyond/form-model';\r\nimport { BydBaseComponent } from '@beyond/utils';\r\nimport { PrintDirectWizard } from '../../services/dto/print_direct_wizard';\r\nimport { BydPrinterService } from '../../services/printer.service';\r\nimport { BydPrinterFormService } from '../../services/form.service';\r\nimport { BydNotificationService, ENotificationCode } from '@beyond/notification';\r\nimport { BydTitleComponent, ErrorComponent, LoaderComponent } from '@beyond/ui';\r\nimport { BydFormComponent } from '@beyond/form-basic';\r\nimport { MatIcon } from '@angular/material/icon';\r\n\r\n\r\nexport interface LabelModalData {\r\n  id: number;\r\n  model: string;\r\n}\r\n@Component({\r\n  selector: '',\r\n  templateUrl: './label.component.html',\r\n  styleUrls: ['./label.component.scss'],\r\n  standalone: true,\r\n  imports: [LoaderComponent, ErrorComponent, BydTitleComponent, BydFormComponent, MatIcon],\r\n})\r\nexport class LabelModal extends BydBaseComponent {\r\n  private readonly _notificationService = inject(BydNotificationService);\r\n  private readonly _printerService = inject(BydPrinterService);\r\n  private readonly _printerFormService = inject(BydPrinterFormService);\r\n\r\n  public form: InputBase<any>[] = [];\r\n\r\n  public wizard: PrintDirectWizard | null = null;\r\n\r\n  get displayName() {\r\n    return this.wizard?.display_name || (this.wizard?.lines || [])[0].display_name || '';\r\n  }\r\n  constructor(\r\n    public dialogRef: MatDialogRef<LabelModal>,\r\n    @Inject(MAT_DIALOG_DATA) public data: LabelModalData\r\n  ) {\r\n    super();\r\n    this.requestState.asked();\r\n    this._printerService.getPrintWizard$(this.data.id).subscribe(wizard => {\r\n      this.form = this._printerFormService.getForm(wizard);\r\n      this.wizard = wizard;\r\n      this.requestState.completed();\r\n    });\r\n  }\r\n\r\n  public print(values: any) {\r\n    this.requestState.asked();\r\n    const lines = this._printerFormService.formatForm(values);\r\n\r\n    this._printerService.print$(lines).subscribe({\r\n      complete: () => {\r\n        this.requestState.completed();\r\n        this._notificationService.addNotification('Sended to printer', ENotificationCode.success);\r\n        this.dialogRef.close();\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.requestState.onError(error.status, error.statusText);\r\n      },\r\n    });\r\n  }\r\n}\r\n","<div class=\"pspace-md\">\r\n  <div class=\"close-dialog\" mat-button mat-dialog-close>\r\n    <mat-icon> close </mat-icon>\r\n  </div>\r\n  <byd-title>{{ this.displayName }}</byd-title>\r\n  <byd-loader [isLoading]=\"this.requestState.isLoading()\">\r\n    <byd-error [message]=\"this.requestState.getErrorMessage()\" [code]=\"this.requestState.getErrorStatus()\">\r\n      <byd-form *ngIf=\"form\" [inputs]=\"form\" buttonTitle=\"print\" (valid)=\"this.print($event)\"></byd-form>\r\n    </byd-error>\r\n  </byd-loader>\r\n</div>\r\n","import { Component, inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { LabelModal, LabelModalData } from '../label/label.component';\r\nimport { BydBaseComponent } from '@beyond/utils';\r\nimport { BydPrinterService } from '../../services/printer.service';\r\n\r\n@Component({\r\n  selector: 'byd-printer-container',\r\n  template: '',\r\n})\r\nexport class ContainerComponent extends BydBaseComponent {\r\n  private readonly _printerService = inject(BydPrinterService)\r\n\r\n  constructor(private _dialog: MatDialog) {\r\n    super();\r\n    this._registerSubscription(\r\n      this._printerService.askPrintingWizard$.subscribe(data => {\r\n        this._printerService.printWizard$(data).subscribe();\r\n        this._dialog.open<LabelModal, LabelModalData>(LabelModal, {\r\n          data,\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ODOO_SERVER_CONFIG_KEY } from '../injectionToken';\r\n\r\n@Injectable()\r\nexport class TargetUrlInterceptor implements HttpInterceptor {\r\n  readonly server = inject(ODOO_SERVER_CONFIG_KEY);\r\n\r\n  constructor() {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(\r\n      req.clone({\r\n        headers: req.headers.set('target-url', this.server.odooUrl),\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Provider } from '@angular/core';\r\n\r\nimport { TargetUrlInterceptor } from './interceptor/targetUrlInterceptor';\r\nimport { IOdooServerConfig, ODOO_SERVER_CONFIG_KEY } from './injectionToken';\r\n\r\nexport const provideOdoo = (config: IOdooServerConfig): Provider => [\r\n  {\r\n    provide: ODOO_SERVER_CONFIG_KEY,\r\n    useValue: config,\r\n  },\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TargetUrlInterceptor,\r\n    multi: true,\r\n  },\r\n];\r\n","import { Injectable, inject } from '@angular/core';\r\n\r\nimport { BydPermissionsServices } from '@beyond/server';\r\n\r\nimport { BydBaseOdooService } from './baseService';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydAuthOdooService extends BydBaseOdooService {\r\n  readonly permissionsServices = inject(BydPermissionsServices);\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public login$(data: { identifier: string | null; password: string }) {\r\n    return this._odooService.login$(data.identifier, data.password);\r\n  }\r\n\r\n  public logout() {\r\n    this.permissionsServices.reset();\r\n    location.reload();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Employee } from './dto/employee';\r\nimport { BydBaseOdooService } from '../baseService';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydEmployeeService extends BydBaseOdooService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public searchByName$(name: string) {\r\n    return this._odooService\r\n      .searchRead$<Employee>(\r\n        'hr.employee',\r\n        [['name', 'ilike', name]],\r\n        ['id', 'name']\r\n      )\r\n      .pipe(\r\n        filter(data => !!data),\r\n      );\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of odoo\r\n */\r\nexport * from './lib/features/chatting/public-api';\r\nexport * from './lib/features/scan/public-api';\r\nexport * from './lib/features/printer/public-api';\r\n\r\n\r\nexport * from './lib/provider';\r\n\r\nexport * from './lib/injectionToken';\r\nexport * from './lib/interceptor/targetUrlInterceptor';\r\n\r\nexport * from './lib/services/baseService';\r\n\r\nexport * from './lib/types/types';\r\nexport * from './lib/services/auth.service';\r\n\r\nexport * from './lib/services/employee/employee.service';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["map","filter","mergeMap","tap"],"mappings":"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"}