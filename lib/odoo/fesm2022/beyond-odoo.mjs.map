{"version":3,"file":"beyond-odoo.mjs","sources":["../../../projects/odoo/src/lib/injectionToken.ts","../../../projects/odoo/src/lib/services/connector/json.service.ts","../../../projects/odoo/src/lib/services/baseService.ts","../../../projects/odoo/src/lib/services/auth.service.ts","../../../projects/odoo/src/public-api.ts","../../../projects/odoo/src/beyond-odoo.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\n\r\nexport const ODOO_SERVER_CONFIG_KEY = new InjectionToken<IOdooServerConfig>('odoo-server-config');\r\nexport interface IOdooServerConfig {\r\n  proxyUrl: string;\r\n  db: string;\r\n  odooUrl: string;\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\n\r\nimport { OdooRPCService } from 'angular-odoo-jsonrpc';\r\nimport { catchError, map, Observable, Subject, take, tap } from 'rxjs';\r\n\r\nimport { ODOO_SERVER_CONFIG_KEY } from '../../injectionToken';\r\nimport { BydPermissionsServices } from '@beyond/server';\r\nimport { BydNotificationService, ENotificationCode } from '@beyond/notification';\r\n\r\ntype pendingRequest = Array<{ subject$: Subject<any>; request$: Observable<unknown> }>;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OdooJsonConnector {\r\n  readonly notificationService = inject(BydNotificationService);\r\n  readonly permissionsServices = inject(BydPermissionsServices);\r\n\r\n  readonly server = inject(ODOO_SERVER_CONFIG_KEY);\r\n  readonly odooRPC = inject(OdooRPCService);\r\n\r\n  get proxyUrl() {\r\n    return this.server.proxyUrl + '/jsonrpc/';\r\n  }\r\n  get uid() {\r\n   return this.permissionsServices.uid;\r\n  }\r\n  get pass() {\r\n    return this.permissionsServices.pass;\r\n  }\r\n\r\n  private _tempAuthRequest: pendingRequest = [];\r\n\r\n\r\n  constructor(private _odooRPC: OdooRPCService) {\r\n\r\n    this._odooRPC.init({\r\n      odoo_server: this.server.proxyUrl,\r\n    });\r\n  }\r\n\r\n  public login$(login: string, password: string) {\r\n    console.info('Getting UID');\r\n\r\n    return this._odooRPC.sendRequest('/web/session/authenticate', { db: this.server.db, login, password }).pipe(\r\n      map((data: any) => {\r\n        if (data.uid) {\r\n         this.permissionsServices.set(data.uid ?? null, password);\r\n        }\r\n\r\n        return data.uid;\r\n      }),\r\n      catchError(async err => {\r\n        console.error('login failed', err);\r\n        throw new Error(\"Username and password don't match\");\r\n      })\r\n    );\r\n  }\r\n\r\n  public searchCount$(model: string, param?: any) {\r\n    console.info('Search & Count:', model);\r\n\r\n    const subject$ = new Subject<number>();\r\n\r\n    return this._handleRequest<number>(subject$, this._odooRPC.call<number>(\r\n        model,\r\n        'search_count',\r\n        [this.server.db, this.uid, this.pass],\r\n        [param]).pipe(tap((value: number) => {\r\n              console.log('response Search & Count, ', value);\r\n              subject$.next(value);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n            }\r\n        ),\r\n        catchError(async error => {\r\n            console.error(error);\r\n              subject$.error(error);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n              this._handleErrorMessage(error);\r\n        })\r\n      ));\r\n\r\n\r\n  }\r\n\r\n\r\n  private _handleRequest<T>(subject$: Subject<T>, request$: Observable<unknown>): Subject<T> {\r\n    if (this.uid) {\r\n      request$.pipe(take(1)).subscribe();\r\n    } else {\r\n      console.log('Wait for Authuser');\r\n      this._tempAuthRequest.push({ subject$: subject$, request$: request$ });\r\n    }\r\n\r\n    return subject$;\r\n  }\r\n\r\n  private _handleErrorMessage(message: any) {\r\n    const formattedMessage = message\r\n      .toString()\r\n      .replace('Error: Invalid XML-RPC', '')\r\n      .replace('Error: XML-RPC fault:', '');\r\n    this.notificationService.addNotification(formattedMessage, ENotificationCode.error);\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\n\r\nimport { getFirstString } from '@beyond/utils';\r\nimport { OdooJsonConnector } from './connector/json.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport abstract class BydBaseOdooService {\r\n  protected _odooService = inject(OdooJsonConnector);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  protected _handleJoinData<T>(\r\n    entity: T,\r\n    props: Array<{\r\n      from?: keyof T;\r\n      to: keyof T;\r\n    }>\r\n  ): T {\r\n    return props.reduce<T>((entityFilled, prop) => {\r\n      const linkProp = prop.from ? prop.from : prop.to.toString() + '_id';\r\n      const list = (<any>entity)[linkProp] || [];\r\n      entityFilled[prop.to] = <any>getFirstString(list);\r\n\r\n      return entityFilled;\r\n    }, entity);\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\n\nimport { BydPermissionsServices } from '@beyond/server';\nimport { BydBaseOdooService } from './baseService';\n\n\ninterface UserProfile {\n\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BydAuthOdooService extends BydBaseOdooService {\n  readonly permissionsServices = inject(BydPermissionsServices);\n  constructor() {\n    super();\n  }\n\n  public login$(data: { identifier: string, password: string}) {\n    return this._odooService.login$(data.identifier, data.password);\n  }\n\n  public logout() {\n    this.permissionsServices.reset();\n    location.reload();\n  }\n\n\n}\n","/*\r\n * Public API Surface of odoo\r\n */\r\n\r\nexport * from './lib/injectionToken';\r\nexport * from './lib/services/baseService';\r\nexport * from './lib/services/auth.service';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}