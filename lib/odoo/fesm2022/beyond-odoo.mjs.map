{"version":3,"file":"beyond-odoo.mjs","sources":["../../../projects/odoo/src/lib/injectionToken.ts","../../../projects/odoo/src/lib/services/connector/json.service.ts","../../../projects/odoo/src/lib/services/connector/xml.service.ts","../../../projects/odoo/src/lib/services/baseService.ts","../../../projects/odoo/src/lib/services/auth.service.ts","../../../projects/odoo/src/public-api.ts","../../../projects/odoo/src/beyond-odoo.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\n\r\nexport const ODOO_SERVER_CONFIG_KEY = new InjectionToken<IOdooServerConfig>('odoo-server-config');\r\nexport interface IOdooServerConfig {\r\n  proxyUrl: string;\r\n  db: string;\r\n  odooUrl: string;\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\n\r\nimport { OdooRPCService } from 'angular-odoo-jsonrpc';\r\nimport { catchError, map, tap } from 'rxjs';\r\n\r\n// import { Permissions } from 'src/app/services/user/permissions';\r\n// import { environment } from 'src/environments/environment';\r\nimport { ODOO_SERVER_CONFIG_KEY } from '../../injectionToken';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OdooJsonConnector {\r\n  readonly server = inject(ODOO_SERVER_CONFIG_KEY);\r\n  readonly odooRPC = inject(OdooRPCService);\r\n\r\n  get uid() {\r\n    return \"\";\r\n   // return Permissions.uid;\r\n  }\r\n  get pass() {\r\n    return \"\";\r\n\r\n    //return Permissions.pass;\r\n  }\r\n\r\n  private _passTemp: string | null = null;\r\n\r\n  constructor(private _odooRPC: OdooRPCService) {\r\n\r\n    this._odooRPC.init({\r\n      odoo_server: this.server.proxyUrl,\r\n    });\r\n  }\r\n\r\n  public login$(login: string, password: string) {\r\n    console.info('Getting UID');\r\n\r\n    return this._odooRPC.sendRequest('/web/session/authenticate', { db: this.server.db, login, password }).pipe(\r\n      map((data: any) => {\r\n        if (data.uid) {\r\n         // Permissions.set(data.uid ?? null, password);\r\n        } else {\r\n          this._passTemp = password;\r\n        }\r\n\r\n        return data.uid;\r\n      }),\r\n      catchError(async err => {\r\n        console.error('login failed', err);\r\n        throw new Error(\"Username and password don't match\");\r\n      })\r\n    );\r\n  }\r\n\r\n  public totp$(totp_token: string) {\r\n    console.info('Getting UID');\r\n\r\n    return this._odooRPC.sendRequest('/web/session/totp', { totp_token }).pipe(\r\n      tap((uid: any) => {\r\n        console.log('totp uid:', uid);\r\n       // Permissions.set(uid, this._passTemp ?? '');\r\n      }),\r\n      catchError(async err => console.error('login failed', err))\r\n    );\r\n  }\r\n}\r\n","import { Injectable, NgZone, inject } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport * as xmlrpc from 'xmlrpc';\r\nimport { ODOO_SERVER_CONFIG_KEY } from '../../injectionToken';\r\nimport { BydPermissionsServices } from '@beyond/server';\r\n\r\n// import { AppNotificationService } from 'src/app/services/notification/notification.service';\r\n// import { Permissions } from 'src/app/services/user/permissions';\r\n// import { environment } from 'src/environments/environment';\r\n\r\n/*\r\n * Odoo Connector Service by Moldeo Interactive\r\n * Angular 8+\r\n * Requires xmlrpc - npm i xmlrpc\r\n *\r\n * Developer: Ignacio Buioli <ibuioli@gmail.com>\r\n * Company: Codize <www.codize.ar>\r\n * https://github.com/codize-app/ng-odoo-connect\r\n */\r\n\r\ntype pendingRequest = Array<{ subject$: Subject<any>; request: () => void }>;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OdooXmlConnector {\r\n\r\n  readonly server = inject(ODOO_SERVER_CONFIG_KEY);\r\n\r\n  get proxyUrl() {\r\n    return this.server.proxyUrl + '/xmlrpc/2/';\r\n  }\r\n  get uid() {\r\n    return \"\";\r\n    //return Permissions.uid;\r\n  }\r\n  get pass() {\r\n    return \"\";\r\n    //return Permissions.pass;\r\n  }\r\n\r\n  private readonly _permissionsService = inject(BydPermissionsServices);\r\n\r\n // private _notificationService: AppNotificationService;\r\n  private _tempAuthRequest: pendingRequest = [];\r\n\r\n  private _oddObject;\r\n  private _oddCommon;\r\n  private _zone = inject(NgZone);\r\n\r\n  constructor() {\r\n    this._oddObject = xmlrpc.createClient({\r\n      url: this.proxyUrl + 'object',\r\n      headers: this._headers(),\r\n      cookies: true,\r\n    });\r\n    this._oddCommon = xmlrpc.createClient({\r\n      url: this.proxyUrl + 'common',\r\n      headers: this._headers(),\r\n    });\r\n  }\r\n\r\n  // public data() {\r\n  //   console.info('Getting Odoo Data');\r\n\r\n  //   const odoo$ = new Observable(observer => {\r\n  //     this._oddCommon.methodCall('version', [], (error: any, value: any) =>\r\n  //       this._zone.run(() => {\r\n  //         if (error) {\r\n  //           console.error(error);\r\n  //           observer.error(error);\r\n  //         } else {\r\n  //           console.log('Odoo Data:', value);\r\n  //           observer.next(value);\r\n  //           observer.complete();\r\n  //         }\r\n  //       })\r\n  //     );\r\n  //   });\r\n\r\n  //   return odoo$;\r\n  // }\r\n\r\n  public login$(user: string, pass: string) {\r\n    console.info('Getting UID');\r\n\r\n    const subject$ = new Subject();\r\n\r\n    this._oddCommon.methodCall(\r\n      'authenticate',\r\n      [this.server.db, user, pass, { interactive: false, save_session: true }],\r\n      (error: any, value: any) =>\r\n        this._zone.run(() => {\r\n          if (error) {\r\n            console.error(error);\r\n            subject$.error(error);\r\n            this._handleErrorMessage(error);\r\n          } else {\r\n            setTimeout(() => {\r\n              console.log('UID:', value);\r\n              this._permissionsService.set(value, pass);\r\n\r\n              subject$.next(value);\r\n              subject$.complete();\r\n\r\n              this._retryAuthRequest();\r\n            }, 0);\r\n          }\r\n        })\r\n    );\r\n\r\n    return subject$;\r\n  }\r\n\r\n  public searchCount(model: string, param?: any) {\r\n    console.info('Search & Count:', model);\r\n\r\n    const subject$ = new Subject<number>();\r\n\r\n    return this._handleRequest<number>(subject$, () => {\r\n      this._oddObject.methodCall(\r\n        'execute_kw',\r\n        [this.server.db, this.uid, this.pass, model, 'search_count', [param]],\r\n        (error: any, value: number) =>\r\n          this._zone.run(() => {\r\n            console.log('response Search & Read, ' + model);\r\n            if (error) {\r\n              console.error(error);\r\n              subject$.error(error);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n              this._handleErrorMessage(error);\r\n            } else {\r\n              console.log('response Search & Count, ', value);\r\n              subject$.next(value);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n            }\r\n          })\r\n      );\r\n    });\r\n  }\r\n\r\n  public searchRead<T, K = T>(model: string, param?: any, keyword?: { fields: Array<keyof K>; limit?: any }) {\r\n    console.info('Search & Read:', model);\r\n\r\n    const subject$ = new Subject<T>();\r\n\r\n    return this._handleRequest<T>(subject$, () => {\r\n      this._oddObject.methodCall(\r\n        'execute_kw',\r\n        [this.server.db, this.uid, this.pass, model, 'search_read', [param], keyword],\r\n        (error: any, value: T) =>\r\n          this._zone.run(() => {\r\n            console.log('response Search & Read, ' + model);\r\n            if (error) {\r\n              console.error(error);\r\n              subject$.error(error);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n              this._handleErrorMessage(error);\r\n            } else {\r\n              console.log('response Search & Read, ', value);\r\n              subject$.next(value);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n            }\r\n          })\r\n      );\r\n    });\r\n  }\r\n\r\n  public create<T>(model: string, values: T, keyword: { [key in keyof T]?: any }): any {\r\n    console.info('Create on:', model, values);\r\n\r\n    const subject$ = new Subject<T>();\r\n\r\n    return this._handleRequest<T>(subject$, () => {\r\n      this._oddObject.methodCall(\r\n        'execute_kw',\r\n        [this.server.db, this.uid, this.pass, model, 'create', [values], keyword],\r\n        (error: any, value: any) =>\r\n          this._zone.run(() => {\r\n            if (error) {\r\n              console.log('Create, ' + error);\r\n              subject$.error(error);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n              this._handleErrorMessage(error);\r\n            } else {\r\n              console.log('Create, ' + value);\r\n              subject$.next(value);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n            }\r\n          })\r\n      );\r\n    });\r\n  }\r\n\r\n  public write<T>(model: string, id: number, keyword: { [key in keyof T]?: any }) {\r\n    console.info('Write on:', model, id, keyword);\r\n\r\n    const subject$ = new Subject<T>();\r\n\r\n    return this._handleRequest<T>(subject$, () => {\r\n      this._oddObject.methodCall(\r\n        'execute_kw',\r\n        [this.server.db, this.uid, this.pass, model, 'write', [[id], keyword]],\r\n        (error: any, value: any) =>\r\n          this._zone.run(() => {\r\n            if (error) {\r\n              console.info('Write error, ' + error);\r\n              subject$.error(error);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n              this._handleErrorMessage(error);\r\n            } else {\r\n              console.log('Write, ' + value);\r\n              subject$.next(value);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n            }\r\n          })\r\n      );\r\n    });\r\n  }\r\n\r\n  public delete(model: string, id: number) {\r\n    console.info('Delete on:', model);\r\n    const subject$ = new Subject<string>();\r\n\r\n    return this._handleRequest<string>(subject$, () => {\r\n      this._oddObject.methodCall(\r\n        'execute_kw',\r\n        [this.server.db, this.uid, this.pass, model, 'unlink', [[id]]],\r\n        (error: any, value: any) =>\r\n          this._zone.run(() => {\r\n            if (error) {\r\n              console.info('Delete, ' + model);\r\n              subject$.error(error);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n              this._handleErrorMessage(error);\r\n            } else {\r\n              console.log('Delete, ' + model + ' ' + value);\r\n              subject$.next(value);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n            }\r\n          })\r\n      );\r\n    });\r\n  }\r\n\r\n  public custom<T>(model: string, id: number, action: string, keyword?: any) {\r\n    console.log('Model:', model, 'Action:', action);\r\n\r\n    const subject$ = new Subject<T>();\r\n\r\n    return this._handleRequest<T>(subject$, () => {\r\n      this._oddObject.methodCall(\r\n        'execute_kw',\r\n        [this.server.db, this.uid, this.pass, model, action, keyword ? [[id], keyword] : [[id]]],\r\n        (error: any, value: any) =>\r\n          this._zone.run(() => {\r\n            if (error) {\r\n              console.error('Custom Action, ' + action + ' - ' + model);\r\n              subject$.error(error);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n              this._handleErrorMessage(error);\r\n            } else {\r\n              console.log('Custom Action, ' + action + ' - ' + model);\r\n              subject$.next(value);\r\n              subject$.complete();\r\n              subject$.unsubscribe();\r\n            }\r\n          })\r\n      );\r\n    });\r\n  }\r\n\r\n  private _handleRequest<T>(subject$: Subject<T>, request: () => void): Subject<T> {\r\n    if (this.uid) {\r\n      request();\r\n    } else {\r\n      console.log('Wait for Authuser');\r\n      this._tempAuthRequest.push({ subject$: subject$, request: request });\r\n    }\r\n\r\n    return subject$;\r\n  }\r\n\r\n  private _retryAuthRequest() {\r\n    const list = [...this._tempAuthRequest];\r\n    this._tempAuthRequest = [];\r\n\r\n    this._retryRequest(list);\r\n  }\r\n\r\n  private _retryRequest(list: pendingRequest = []) {\r\n    for (const request of list) {\r\n      this._handleRequest(request.subject$, request.request);\r\n    }\r\n  }\r\n\r\n  private _handleErrorMessage(message: any) {\r\n    const formattedMessage = message\r\n      .toString()\r\n      .replace('Error: Invalid XML-RPC', '')\r\n      .replace('Error: XML-RPC fault:', '');\r\n   // this._notificationService.addErrorNotification(formattedMessage);\r\n  }\r\n\r\n  private _headers(): { [header: string]: string } {\r\n    return { 'target-url': this.server.odooUrl };\r\n  }\r\n\r\n  // public fieldsGet(model: string, keyword?: any): any {\r\n  //   console.info('Fields get on:', model);\r\n  //   const object = xmlrpc.createClient(this.server.proxyUrl + 'object');\r\n  //   const odoo$ = new Observable(observer => {\r\n  //     object.methodCall('execute_kw',\r\n  //     [this.server.db, this.uid, this.pass, model, 'fields_get', [keyword]], (error: any, value: any) => this._zone.run(() => {\r\n  //       if (error) {\r\n  //         console.info('Fields get, ' + model);\r\n  //         console.error(error);\r\n  //         observer.error(error);\r\n  //       } else {\r\n  //         console.log('Fields get, ' + model);\r\n  //         observer.next(value);\r\n  //         observer.complete();\r\n  //       }\r\n  //     });\r\n  //   });\r\n\r\n  //   return odoo$;\r\n  // }\r\n}\r\n","import { Injectable, OnDestroy, inject } from '@angular/core';\r\n\r\nimport { getFirstString } from '@beyond/utils';\r\nimport { OdooJsonConnector } from './connector/json.service';\r\nimport { OdooXmlConnector } from './connector/xml.service';\r\nimport { BydBaseService } from '@beyond/server';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport abstract class BydBaseOdooService extends BydBaseService implements OnDestroy {\r\n  protected _odooService = inject(OdooXmlConnector);\r\n  protected _odooJsonService = inject(OdooJsonConnector);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  protected _handleJoinData<T>(\r\n    entity: T,\r\n    props: Array<{\r\n      from?: keyof T;\r\n      to: keyof T;\r\n    }>\r\n  ): T {\r\n    return props.reduce<T>((entityFilled, prop) => {\r\n      const linkProp = prop.from ? prop.from : prop.to.toString() + '_id';\r\n      const list = (<any>entity)[linkProp] || [];\r\n      entityFilled[prop.to] = <any>getFirstString(list);\r\n\r\n      return entityFilled;\r\n    }, entity);\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\n\nimport { MappingApiType, BydPermissionsServices } from '@beyond/server';\nimport { BydBaseOdooService } from './baseService';\n\n\ninterface UserProfile {\n\n}\nconst apiRoutes: MappingApiType = {\n  Login: {\n    type: 'POST',\n    url: '{ApiUrl}/api/auth/local',\n  },\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BydAuthOdooService extends BydBaseOdooService {\n  readonly permissionsServices = inject(BydPermissionsServices);\n  constructor() {\n    super();\n    super.registerRoutes({\n      apiRoutes\n    });\n  }\n\n  public login(data: { identifier: string, password: string}) {\n    return this._odooService.login$(data.identifier, data.password);\n  }\n\n  public logout() {\n    this.permissionsServices.reset();\n    location.reload();\n  }\n\n\n}\n","/*\r\n * Public API Surface of odoo\r\n */\r\n\r\nexport * from './lib/injectionToken';\r\nexport * from './lib/services/baseService';\r\nexport * from './lib/services/auth.service';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}