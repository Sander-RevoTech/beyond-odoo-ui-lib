{"version":3,"file":"beyond-translation.mjs","sources":["../../../projects/translation/src/lib/services/translation-registry.service.ts","../../../projects/translation/src/lib/services/translation.service.ts","../../../projects/translation/src/lib/services/lazy-translation.service.ts","../../../projects/translation/src/lib/services/translation.loader.ts","../../../projects/translation/src/lib/provider.ts","../../../projects/translation/src/public-api.ts","../../../projects/translation/src/beyond-translation.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nexport interface ITranslation {\r\n  id: string;\r\n  getTranslation(lang: string): Observable<object | null>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydTranslationRegistryService {\r\n  registered: ITranslation[] = [];\r\n  newRegistrationSubscription$ = new Subject();\r\n\r\n  constructor() {}\r\n\r\n  public register(register: ITranslation) {\r\n    this.registered.push(register);\r\n    this.newRegistrationSubscription$.next(null);\r\n  }\r\n\r\n  public getTranslations(lang: string) {\r\n    return this.registered.map(r => r.getTranslation(lang));\r\n  }\r\n}\r\n","import { Inject, Injectable, Optional, inject } from '@angular/core';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { BydTranslationRegistryService } from './translation-registry.service';\r\nimport { debounceTime, mergeMap } from 'rxjs';\r\n\r\nexport const TRANSLATION_CONFIG = 'config_translation';\r\nexport interface ITranslationConfig {\r\n  default: string;\r\n  supportedLanguages: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydTranslationService {\r\n  public translateService = inject(TranslateService);\r\n  private _registry = inject(BydTranslationRegistryService);\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Inject(TRANSLATION_CONFIG)\r\n    private _config: ITranslationConfig = {\r\n      default: 'fr',\r\n      supportedLanguages: ['fr'],\r\n    }\r\n  ) {\r\n    this._registry.newRegistrationSubscription$.pipe(\r\n      debounceTime(500),\r\n      mergeMap(() => this.translateService.reloadLang(this.translateService.currentLang))\r\n    ).subscribe({\r\n      next: (data) => this.translateService.onTranslationChange.emit({ translations: data, lang: this.translateService.currentLang})\r\n    });\r\n\r\n    this.translateService.onLangChange.subscribe(({ lang }) => {\r\n      if (!sessionStorage.getItem('lang')) {\r\n        sessionStorage.setItem('lang', lang);\r\n        return;\r\n      }\r\n\r\n      if (lang === sessionStorage.getItem('lang')) {\r\n        return;\r\n      }\r\n\r\n      sessionStorage.setItem('lang', lang);\r\n      location.reload();\r\n    });\r\n  }\r\n\r\n  public init(): void {\r\n    // this language will be used as a fallback when a translation isn't found in the current language\r\n    this.translateService.setDefaultLang(this._config.default);\r\n\r\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\r\n    let lang: string = sessionStorage.getItem('lang') ?? this.translateService.getBrowserLang() ?? this._config.default;\r\n\r\n    if (!lang || !this._config.supportedLanguages.find(langId => langId === lang)) {\r\n      lang = this._config.default;\r\n    }\r\n    this.translateService.use(lang);\r\n  }\r\n\r\n  public getLanguage(): string {\r\n    return this.translateService.currentLang;\r\n  }\r\n\r\n  public get(key: string | string[], interpolateParams?: Object) {\r\n    return this.translateService.get(key, interpolateParams);\r\n  }\r\n\r\n  public use(lang: string) {\r\n    return this.translateService.use(lang);\r\n  }\r\n}\r\n","import { inject } from '@angular/core';\r\n\r\nimport { map, Observable, of } from 'rxjs';\r\n\r\nimport { BydTranslationRegistryService, ITranslation } from './translation-registry.service';\r\n\r\nexport abstract class BydLazyTranslationService implements ITranslation {\r\n  get id() {\r\n    return this._id;\r\n  }\r\n  private readonly _registry = inject(BydTranslationRegistryService);\r\n\r\n  private _id = '';\r\n  private _isApp = false;\r\n  private _translations: { [key: string]: any } = {};\r\n\r\n  constructor(id: string, isApp = false, translation: { [key: string]: Object } = {}) {\r\n    this._id = id;\r\n    this._isApp = isApp;\r\n    this._translations = translation;\r\n    this._registry.register(this);\r\n  }\r\n\r\n  static getInstance() {\r\n    return inject(this);\r\n  }\r\n\r\n  public getTranslation(lang: string): Observable<object | null> {\r\n    return of(this._translations[lang]).pipe(\r\n      map(translations =>\r\n        Object.entries(translations).reduce((acc, [key, value]) => {\r\n          const keys = key.split('.');\r\n          keys.reduce<{ [index: string]: any }>((current, k, index) => {\r\n            if (index === keys.length - 1) {\r\n              current[k] = value;\r\n            } else {\r\n              current[k] = current[k] || {};\r\n            }\r\n            return current[k];\r\n          }, acc);\r\n\r\n          return acc;\r\n        }, {})\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { inject } from '@angular/core';\r\n\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { Observable, forkJoin, map, tap } from 'rxjs';\r\n\r\nimport { BydTranslationRegistryService } from './translation-registry.service';\r\n\r\nexport class BydTranslationLoader implements TranslateLoader {\r\n  private registry = inject(BydTranslationRegistryService);\r\n  constructor() {}\r\n\r\n  getTranslation(lang: string): Observable<object> {\r\n    return forkJoin([...this.registry.getTranslations(lang)]).pipe(\r\n      map(translations =>\r\n        translations.reduce<object>((acc, translation) => {\r\n          if (!translation) {\r\n            return acc;\r\n          }\r\n          return this._merge(acc, translation);\r\n        }, {})\r\n      )\r\n    );\r\n  }\r\n\r\n  private _merge(current: object, additionalTranslation: object): object {\r\n    return this._mergeDeep(current, additionalTranslation);\r\n  }\r\n\r\n  /**\r\n   * Simple object check.\r\n   * @param item Object\r\n   */\r\n  private _isObject(item: object | undefined): boolean {\r\n    return !!(item && typeof item === 'object' && !Array.isArray(item));\r\n  }\r\n\r\n  /**\r\n   * Deep merge two objects.\r\n   * @param target Object\r\n   * @param ...sources objects\r\n   */\r\n  private _mergeDeep(target: { [key: string]: any }, ...sources: { [key: string]: any }[]): { [key: string]: any } {\r\n    if (!sources.length) {\r\n      return target;\r\n    }\r\n    const source = sources.shift();\r\n    if (this._isObject(target) && this._isObject(source)) {\r\n      for (const key in source) {\r\n        if (this._isObject(source[key])) {\r\n          if (!target[key]) {\r\n            Object.assign(target, { [key]: {} });\r\n          }\r\n          this._mergeDeep(target[key], source[key]);\r\n        } else {\r\n          Object.assign(target, { [key]: source[key] });\r\n        }\r\n      }\r\n    }\r\n\r\n    return this._mergeDeep(target, ...sources);\r\n  }\r\n}\r\n","import { LOCALE_ID, Provider, inject, provideAppInitializer } from '@angular/core';\r\n\r\nimport { TranslateLoader, provideTranslateService } from '@ngx-translate/core';\r\n\r\nimport { BydTranslationLoader } from './services/translation.loader';\r\nimport { BydTranslationService, TRANSLATION_CONFIG } from './services/translation.service';\r\n\r\nexport function HttpLoaderFactory() {\r\n  return new BydTranslationLoader();\r\n}\r\n\r\nexport const provideTranslation = (data: { default: string; supportedLanguages: string[] }): Provider => [\r\n  provideTranslateService({\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: HttpLoaderFactory,\r\n    },\r\n  }),\r\n  {\r\n    provide: LOCALE_ID,\r\n    deps: [BydTranslationService],\r\n    useFactory: (TranslationService: BydTranslationService) => TranslationService.getLanguage(),\r\n  },\r\n  provideAppInitializer(() => {\r\n    const translationService = inject(BydTranslationService);\r\n    return translationService.init();\r\n  }),\r\n  {\r\n    provide: TRANSLATION_CONFIG,\r\n    useValue: {\r\n      default: data.default,\r\n      supportedLanguages: data.supportedLanguages,\r\n    },\r\n  },\r\n];\r\n","/*\r\n * Public API Surface of translation\r\n */\r\nexport { TranslateDirective, TranslatePipe } from '@ngx-translate/core';\r\n\r\nexport * from './lib/services/translation.service';\r\nexport * from './lib/services/translation-registry.service';\r\n\r\nexport * from './lib/services/lazy-translation.service';\r\n\r\nexport * from './lib/provider';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}