{"version":3,"file":"beyond-user.mjs","sources":["../../../projects/user/src/lib/services/form/form.service.ts","../../../projects/user/src/lib/components/login/login-card.component.ts","../../../projects/user/src/lib/components/login/login-card.component.html","../../../projects/user/src/lib/components/guard/guard.component.ts","../../../projects/user/src/lib/components/guard/guard.component.html","../../../projects/user/src/lib/pages/login/login.component.ts","../../../projects/user/src/lib/pages/login/login.component.html","../../../projects/user/src/lib/guards/auth.guard.ts","../../../projects/user/src/lib/guards/feature.guard.ts","../../../projects/user/src/lib/guards/public-api.ts","../../../projects/user/src/lib/services/user.service.ts","../../../projects/user/src/public-api.ts","../../../projects/user/src/beyond-user.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\n\r\nimport { InputBase, InputEmail, InputPanel, InputPassword } from '@beyond/form-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppUserFormService {\r\n  constructor() {}\r\n\r\n  public getLoginForm(): InputBase<any>[] {\r\n    const form: InputBase<any>[] = [\r\n      new InputPanel({\r\n        key: 'panel',\r\n        label: '',\r\n        class: 'col-sm-12',\r\n        children: [\r\n          new InputEmail({\r\n            key: 'email',\r\n            label: 'Email',\r\n            validators: [Validators.required],\r\n          }),\r\n          new InputPassword({\r\n            key: 'password',\r\n            label: 'Password',\r\n          }),\r\n        ],\r\n      }),\r\n    ];\r\n    return form;\r\n  }\r\n  public formatLoginForm(data: any): { user: string; pass: string } {\r\n    return {\r\n      user: data.email,\r\n      pass: data.password,\r\n    };\r\n  }\r\n}\r\n","import { Component, inject, signal } from '@angular/core';\n\nimport { BydFormComponent } from '@beyond/form-basic';\nimport { BydNotificationService, ENotificationCode } from '@beyond/notification';\nimport { BydAuthOdooService, BydBaseOdooService } from '@beyond/odoo';\nimport { LoaderComponent } from '@beyond/ui';\nimport { BydBaseComponent } from '@beyond/utils';\n\nimport { AppUserFormService } from '../../services/form/form.service';\n\n@Component({\n  selector: 'byd-login-card',\n  templateUrl: './login-card.component.html',\n  styleUrls: ['./login-card.component.scss'],\n  imports: [LoaderComponent, BydFormComponent],\n  standalone: true,\n})\nexport class LoginCardComponent extends BydBaseComponent {\n  private readonly _authService = inject(BydAuthOdooService);\n  private readonly _notificationService = inject(BydNotificationService);\n  private readonly _formService = inject(AppUserFormService);\n  private readonly _odooService = inject(BydBaseOdooService);\n\n  public readonly form = signal(this._formService.getLoginForm());\n  constructor() {\n    super();\n  }\n\n  public login(data: any) {\n    this.requestState.asked();\n    const loginData = this._formService.formatLoginForm(data);\n\n    this._authService.login$({ identifier: loginData.user, password: loginData.pass }).subscribe({\n      next: uid => {\n        this.requestState.completed();\n\n        if (uid) {\n          this._successMessage();\n        } else {\n          this._errorMessage('notification.success');\n        }\n        this._odooService._odooService.searchRead$('res.partner', []);\n      },\n      error: (message: string) => {\n        this.requestState.completed();\n        this._errorMessage(message);\n      },\n    });\n  }\n\n  private _successMessage() {\n    this._notificationService.addNotification('notification.success', ENotificationCode.success);\n    this._router.navigateByUrl('/');\n  }\n\n  private _errorMessage(message: string) {\n    this._notificationService.addNotification(message, ENotificationCode.error);\n  }\n}\n","<byd-loader [isLoading]=\"this.requestState.isLoading()\">\n  <byd-form [inputs]=\"this.form()\" (valid)=\"this.login($event)\"></byd-form>\n</byd-loader>\n","import { Component, Input, inject } from '@angular/core';\n\nimport { BydMainRoute, BydRoutes } from '@beyond/menu';\nimport { BydPermissionLevel, BydPermissionsServices } from '@beyond/server';\nimport { BydButtonComponent } from '@beyond/ui';\nimport { BydAbstractComponent } from '@beyond/utils';\n\n@Component({\n  selector: 'byd-guard',\n  templateUrl: './guard.component.html',\n  styleUrls: ['./guard.component.scss'],\n  imports: [BydButtonComponent],\n  standalone: true,\n})\nexport class GuardComponent extends BydAbstractComponent {\n  @Input()\n  level!: BydPermissionLevel;\n\n  @Input()\n  feature!: string;\n\n  @Input()\n  canDisplayErrorMessage: boolean = true;\n\n  private readonly _permissionsServices = inject(BydPermissionsServices);\n\n  constructor() {\n    super();\n  }\n\n  public isGuardValid(): boolean {\n    return this._permissionsServices.canDirectAccess(this.feature, this.level);\n  }\n\n  public goToLogin() {\n    this._router.navigateByUrl(BydRoutes.getUrl([BydMainRoute.USERLOGIN]));\n  }\n}\n","<div class=\"guard\">\n  @if (this.isGuardValid()) {\n    <div class=\"guard-valid\">\n      <ng-content></ng-content>\n    </div>\n  } @else if (!this.isGuardValid() && this.canDisplayErrorMessage) {\n    <div class=\"guard-no-valid ta-c\">\n      <!-- <cam-font-icon name=\"close-tool\" size=\"md\"></cam-font-icon> -->\n      {{ 'container.guard.content' }}\n\n      @if (this.level === 'authenticated') {\n        <byd-button (action)=\"this.goToLogin()\"> Me connecter </byd-button>\n      }\n    </div>\n  }\n</div>\n","import { Component } from '@angular/core';\r\n\r\nimport { LoginCardComponent } from '../../components/public-api';\r\n\r\n@Component({\r\n  selector: '',\r\n  imports: [LoginCardComponent],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss',\r\n  standalone: true,\r\n})\r\nexport class BydLoginPage {}\r\n","<byd-login-card></byd-login-card>\r\n","import { Injectable, inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\n\nimport { BydRoutes } from '@beyond/menu';\nimport { BydPermissionsServices } from '@beyond/server';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard {\n  private readonly _permissionsServices = inject(BydPermissionsServices);\n\n  constructor(private router: Router) {}\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n\n    if (this._permissionsServices.isAuthenticated === false) {\n      this.setRedirect();\n      return false;\n    }\n    return this._permissionsServices.isAuthenticated;\n  }\n\n  public setRedirect(): void {\n    this.router.navigateByUrl(BydRoutes.getLogin());\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\n\nimport { BydRoutes } from '@beyond/menu';\nimport { BydPermissionsServices } from '@beyond/server';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeatureGuard {\n  private readonly _permissionsServices = inject(BydPermissionsServices);\n  constructor(private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean> | boolean {\n    const level = route.data['level'];\n    const feature = route.data['feature'];\n\n    if (this._permissionsServices.received === true) {\n      return this._isValidPermission(feature, level);\n    }\n    return this._permissionsServices.updated$.pipe(\n      map(() => {\n        return this._isValidPermission(feature, level);\n      })\n    );\n  }\n\n  public setRedirect(): void {\n    this.router.navigateByUrl(BydRoutes.getHome());\n  }\n\n  private _isValidPermission(feature: string, level: string) {\n    if (this._permissionsServices.canDirectAccess(feature, level)) {\n      return true;\n    }\n    this.setRedirect();\n    return false;\n  }\n}\n","/*\n * Public API Surface of users\n */\n\nexport * from './auth.guard';\nexport * from './feature.guard';\n","import { Injectable, inject } from '@angular/core';\r\n\r\nimport { BydBaseOdooService } from '@beyond/odoo';\r\nimport { BydPermissionsServices } from '@beyond/server';\r\nimport { BehaviorSubject, filter, mergeMap, of, tap } from 'rxjs';\r\n\r\nimport { Profile } from './dto/profile';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydUserService extends BydBaseOdooService {\r\n  readonly profile$ = new BehaviorSubject<Profile | null>(null);\r\n  readonly permissionsServices = inject(BydPermissionsServices);\r\n\r\n  constructor() {\r\n    super();\r\n    this.permissionsServices.updated$.pipe(\r\n      mergeMap(() => this.fetchProfile$())\r\n    ).subscribe()\r\n  }\r\n\r\n  public fetchProfile$() {\r\n    if (!this.permissionsServices.uid) {\r\n      return of(null);\r\n    }\r\n    return this._odooService\r\n      .searchRead$<Profile>('res.users', [['id', '=', this.permissionsServices.uid]], ['id', 'email', 'display_name'])\r\n      .pipe(\r\n        filter(data => !!data),\r\n        tap(entities => {\r\n          if (entities.length > 0) {\r\n            this.profile$.next(entities[0]);\r\n          }\r\n        })\r\n      );\r\n  }\r\n}\r\n","/*\n * Public API Surface of users\n */\nexport * from './lib/components/public-api';\nexport * from './lib/pages/public-api';\n\nexport * from './lib/guards/public-api';\nexport * from './lib/services/user.service';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}