{"version":3,"file":"beyond-user.mjs","sources":["../../../projects/user/src/lib/services/form/form.service.ts","../../../projects/user/src/lib/components/login/login-card.component.ts","../../../projects/user/src/lib/components/login/login-card.component.html","../../../projects/user/src/lib/components/guard/guard.component.ts","../../../projects/user/src/lib/components/guard/guard.component.html","../../../projects/user/src/lib/components/company/company.component.ts","../../../projects/user/src/lib/components/company/company.component.html","../../../projects/user/src/lib/services/user.service.ts","../../../projects/user/src/lib/components/warehouse/warehouse.component.ts","../../../projects/user/src/lib/components/warehouse/warehouse.component.html","../../../projects/user/src/lib/components/warehouse/warehouse-guard.component.ts","../../../projects/user/src/lib/pages/login/login.component.ts","../../../projects/user/src/lib/pages/login/login.component.html","../../../projects/user/src/lib/guards/auth.guard.ts","../../../projects/user/src/lib/guards/feature.guard.ts","../../../projects/user/src/lib/guards/public-api.ts","../../../projects/user/src/public-api.ts","../../../projects/user/src/beyond-user.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\n\r\nimport {\r\n  InputBase,\r\n  // InputCheckBox,  // Commented out because not used now\r\n  InputPanel,\r\n  InputPassword,\r\n  InputTextBox,\r\n} from '@beyond/form-model';\r\nimport { map, startWith } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppUserFormService {\r\n  constructor() {}\r\n\r\n  public getLoginForm(): InputBase<any>[] {\r\n    /*\r\n    const asAdmin = new InputCheckBox({\r\n      key: 'asAdmin',\r\n      label: 'Login as admin',\r\n      class: 'col-sm-12',\r\n      toggle: false,\r\n    });\r\n    */\r\n\r\n    return [\r\n      new InputPanel({\r\n        key: 'panel',\r\n        label: '',\r\n        class: 'col-sm-12',\r\n        children: [\r\n          /*\r\n          asAdmin,\r\n          */\r\n          new InputTextBox({\r\n            key: 'email',\r\n            label: 'Email',\r\n            validators: [Validators.required],\r\n            class: 'password-input'\r\n            /*\r\n            visible$: asAdmin.changeValue$.pipe(\r\n              startWith(false),\r\n              map(value => !value)\r\n            ),\r\n            */\r\n          }),\r\n          new InputPassword({\r\n            key: 'password',\r\n            label: 'Password',\r\n            validators: [Validators.required],\r\n          }),\r\n        ],\r\n      }),\r\n    ];\r\n  }\r\n  public formatLoginForm(data: any): { user: string | null; pass: string } {\r\n    return {\r\n      user: data.email ?? null,\r\n      pass: data.password,\r\n    };\r\n  }\r\n}\r\n","import { Component, HostListener, inject, signal } from '@angular/core';\r\n\r\nimport { BydFormComponent } from '@beyond/form-basic';\r\nimport { BydNotificationService, ENotificationCode } from '@beyond/notification';\r\nimport { BydAuthOdooService } from '@beyond/odoo';\r\nimport { LoaderComponent } from '@beyond/ui';\r\nimport { BydBaseComponent } from '@beyond/utils';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { AppUserFormService } from '../../services/form/form.service';\r\n\r\n@Component({\r\n  selector: 'byd-login-card',\r\n  templateUrl: './login-card.component.html',\r\n  styleUrls: ['./login-card.component.scss'],\r\n  imports: [LoaderComponent, BydFormComponent],\r\n  standalone: true,\r\n})\r\nexport class LoginCardComponent extends BydBaseComponent {\r\n  private readonly _authService = inject(BydAuthOdooService);\r\n  private readonly _notificationService = inject(BydNotificationService);\r\n  private readonly _formService = inject(AppUserFormService);\r\n\r\n  public readonly form = signal(this._formService.getLoginForm());\r\n  readonly askValidation$ = new BehaviorSubject<null>(null);\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  @HostListener('document:keydown.enter', ['$event'])\r\n  handleEnter(event: KeyboardEvent) {\r\n    this.askValidation$.next(null);\r\n  }\r\n\r\n  public login(data: any) {\r\n    this.requestState.asked();\r\n    const loginData = this._formService.formatLoginForm(data);\r\n\r\n    this._authService.login$({ identifier: loginData.user, password: loginData.pass }).subscribe({\r\n      next: uid => {\r\n        this.requestState.completed();\r\n\r\n        if (uid) {\r\n          this._successMessage();\r\n        } else {\r\n          this._errorMessage('notification.success');\r\n        }\r\n      },\r\n      error: (message: string) => {\r\n        this.requestState.completed();\r\n        this._errorMessage(message);\r\n      },\r\n    });\r\n  }\r\n\r\n  private _successMessage() {\r\n    this._notificationService.addNotification('notification.success', ENotificationCode.success);\r\n    // this._router.navigateByUrl('/');\r\n  }\r\n\r\n  private _errorMessage(message: string) {\r\n    this._notificationService.addNotification(message, ENotificationCode.error);\r\n  }\r\n}\r\n","<byd-loader [isLoading]=\"this.requestState.isLoading()\">\r\n  <byd-form [inputs]=\"this.form()\" [askValidation$]=\"this.askValidation$\" (valid)=\"this.login($event)\"></byd-form>\r\n</byd-loader>\r\n","import { Component, Input, inject } from '@angular/core';\r\n\r\nimport { BydMainRoute, BydRoutes } from '@beyond/menu';\r\nimport { BydPermissionLevel, BydPermissionsServices } from '@beyond/server';\r\nimport { BydButtonComponent } from '@beyond/ui';\r\nimport { BydAbstractComponent } from '@beyond/utils';\r\n\r\n@Component({\r\n  selector: 'byd-guard',\r\n  templateUrl: './guard.component.html',\r\n  styleUrls: ['./guard.component.scss'],\r\n  imports: [BydButtonComponent],\r\n  standalone: true,\r\n})\r\nexport class GuardComponent extends BydAbstractComponent {\r\n  @Input()\r\n  level!: BydPermissionLevel;\r\n\r\n  @Input()\r\n  feature!: string;\r\n\r\n  @Input()\r\n  canDisplayErrorMessage: boolean = true;\r\n\r\n  private readonly _permissionsServices = inject(BydPermissionsServices);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public isGuardValid(): boolean {\r\n    return this._permissionsServices.canDirectAccess(this.feature, this.level);\r\n  }\r\n\r\n  public goToLogin() {\r\n    this._router.navigateByUrl(BydRoutes.getUrl([BydMainRoute.USERLOGIN]));\r\n  }\r\n}\r\n","<div class=\"guard\">\r\n  @if (this.isGuardValid()) {\r\n    <div class=\"guard-valid\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  } @else if (!this.isGuardValid() && this.canDisplayErrorMessage) {\r\n    <div class=\"guard-no-valid ta-c\">\r\n      <!-- <cam-font-icon name=\"close-tool\" size=\"md\"></cam-font-icon> -->\r\n      {{ 'container.guard.content' }}\r\n\r\n      @if (this.level === 'authenticated') {\r\n        <byd-button (action)=\"this.goToLogin()\"> Me connecter </byd-button>\r\n      }\r\n    </div>\r\n  }\r\n</div>\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component, inject } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { BydCompaniesService } from '@beyond/odoo';\r\nimport { CardComponent, CardHeaderComponent, CardTitleComponent, EmptyComponent, LoaderComponent } from '@beyond/ui';\r\nimport { BydAbstractComponent } from '@beyond/utils';\r\n\r\nimport { BydUserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'byd-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrls: ['./company.component.scss'],\r\n  imports: [AsyncPipe, CardComponent, CardHeaderComponent, CardTitleComponent, LoaderComponent, EmptyComponent],\r\n  standalone: true,\r\n})\r\nexport class CompanyComponent extends BydAbstractComponent {\r\n  private readonly _usersServices = inject(BydUserService);\r\n  private readonly _companiesServices = inject(BydCompaniesService);\r\n\r\n  public dialogRef = inject(MatDialogRef);\r\n  public companies$ = this._companiesServices.companies.get$();\r\n\r\n  constructor() {\r\n    super();\r\n    this.requestState.asked();\r\n    this._companiesServices\r\n      .fetch$(this._usersServices.company.get() ?? [])\r\n      .subscribe({ complete: () => this.requestState.completed(), error: () => this.requestState.completed() });\r\n  }\r\n\r\n  public select(id: number) {\r\n    this._usersServices.permissionsServices.setCompany(id);\r\n    this.dialogRef.close();\r\n    this._router.navigateByUrl('/');\r\n  }\r\n}\r\n","@let companies = this.companies$ | async;\r\n\r\n<byd-loader [isLoading]=\"this.requestState.isLoading()\">\r\n  <div class=\"p-space-lg\">\r\n    <byd-empty [isEmpty]=\"!companies || companies.length === 0\" text=\"No company are allow for your user\">\r\n      <div class=\"flex-column g-space-md\">\r\n        @for (company of companies; track company.id) {\r\n          <byd-card (click)=\"this.select(company.id)\">\r\n            <byd-card-header>\r\n              <byd-card-title>\r\n                <h3>{{ company.name }}</h3>\r\n              </byd-card-title>\r\n            </byd-card-header>\r\n          </byd-card>\r\n        }\r\n      </div>\r\n    </byd-empty>\r\n  </div>\r\n</byd-loader>\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { BydBaseOdooService, BydEmployeeService } from '@beyond/odoo';\r\nimport { BydPermissionsServices, HandleSimpleRequest } from '@beyond/server';\r\nimport { getFirstNumber, isNonNullable } from '@beyond/utils';\r\nimport { debounceTime, filter, map, mergeMap, of, switchMap, tap } from 'rxjs';\r\n\r\nimport { CompanyComponent } from '../components/company/company.component';\r\nimport { Profile } from './dto/profile';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydUserService extends BydBaseOdooService {\r\n  readonly profile = new HandleSimpleRequest<Profile>();\r\n  readonly warehouse = new HandleSimpleRequest<number[]>();\r\n  readonly company = new HandleSimpleRequest<number[]>();\r\n\r\n  readonly permissionsServices = inject(BydPermissionsServices);\r\n  readonly employeesServices = inject(BydEmployeeService);\r\n\r\n  public openDialog = inject(MatDialog);\r\n\r\n  constructor() {\r\n    super();\r\n    this.permissionsServices.updated$\r\n      .pipe(\r\n        debounceTime(500),\r\n        mergeMap(() => this.fetchProfile$())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  public fetchProfile$() {\r\n    if (!this.permissionsServices.uid) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.profile.fetch(\r\n      this._odooService\r\n        .searchRead$<Profile>(\r\n          'res.users',\r\n          [['id', '=', this.permissionsServices.uid]],\r\n          ['id', 'email', 'display_name', 'share', 'groups_id', 'employee_id', 'company_ids']\r\n        )\r\n        .pipe(\r\n          filter(isNonNullable),\r\n          map(result => result[0]),\r\n          switchMap(profile => {\r\n            this.permissionsServices.setRole(profile.share ? 'shared' : 'interne');\r\n            this.company.data$.next(profile.company_ids);\r\n\r\n            if (!profile.share) {\r\n              this.permissionsServices.setEmployee(getFirstNumber(profile.employee_id));\r\n              return of(profile);\r\n            } else {\r\n              return this.employeesServices.getRelatedByUserId$(profile.id).pipe(\r\n                tap(employee => this.permissionsServices.setEmployee(employee.id)),\r\n                map(employee => ({ ...profile, ...{ employee_id: [employee.id, employee.name] } }))\r\n              );\r\n            }\r\n          }),\r\n          switchMap(profile => {\r\n            if (this.permissionsServices.company) {\r\n              return of(profile);\r\n            }\r\n            return this.openDialog\r\n              .open(CompanyComponent, {\r\n                disableClose: true,\r\n              })\r\n              .afterClosed()\r\n              .pipe(map(() => profile));\r\n          }),\r\n          switchMap((profile: Profile) => {\r\n            return this.warehouse\r\n              .fetch(\r\n                this.employeesServices\r\n                  .getWarehouses$(getFirstNumber(profile.employee_id) ?? 0)\r\n                  .pipe(filter(isNonNullable))\r\n              )\r\n              .pipe(map(() => profile));\r\n          })\r\n        )\r\n    );\r\n  }\r\n}\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component, inject } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { BydWarehousesService } from '@beyond/odoo';\r\nimport { CardComponent, CardHeaderComponent, CardTitleComponent, EmptyComponent, LoaderComponent } from '@beyond/ui';\r\nimport { BydAbstractComponent } from '@beyond/utils';\r\n\r\nimport { BydUserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'byd-warehouse',\r\n  templateUrl: './warehouse.component.html',\r\n  styleUrls: ['./warehouse.component.scss'],\r\n  imports: [AsyncPipe, CardComponent, CardHeaderComponent, CardTitleComponent, LoaderComponent, EmptyComponent],\r\n  standalone: true,\r\n})\r\nexport class WarehouseComponent extends BydAbstractComponent {\r\n  private readonly _usersServices = inject(BydUserService);\r\n  private readonly _warehouseServices = inject(BydWarehousesService);\r\n\r\n  public dialogRef = inject(MatDialogRef);\r\n  public warehouses$ = this._warehouseServices.warehouses.get$();\r\n\r\n  constructor() {\r\n    super();\r\n    this.requestState.asked();\r\n\r\n    this._warehouseServices\r\n      .fetch$(this._usersServices.warehouse.get() ?? [])\r\n      .subscribe({ complete: () => this.requestState.completed(), error: () => this.requestState.completed() });\r\n  }\r\n\r\n  public select(id: number) {\r\n    this._usersServices.permissionsServices.setWarehouse(id);\r\n    this.dialogRef.close();\r\n    location.reload();\r\n  }\r\n}\r\n","@let warehouses = this.warehouses$ | async;\r\n\r\n<byd-loader [isLoading]=\"this.requestState.isLoading()\">\r\n  <div class=\"p-space-lg\">\r\n    <byd-empty [isEmpty]=\"!warehouses || warehouses.length === 0\" text=\"No warehouse are allow for your user\">\r\n      <div class=\"flex-column g-space-md\">\r\n        @for (warehouse of warehouses; track warehouse.id) {\r\n          <byd-card (click)=\"this.select(warehouse.id)\">\r\n            <byd-card-header>\r\n              <byd-card-title>\r\n                <h3>{{ warehouse.name }}</h3>\r\n              </byd-card-title>\r\n            </byd-card-header>\r\n          </byd-card>\r\n        }\r\n      </div>\r\n    </byd-empty>\r\n  </div>\r\n</byd-loader>\r\n","import { Component, inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { BydPermissionsServices } from '@beyond/server';\r\nimport { BydAbstractComponent } from '@beyond/utils';\r\n\r\nimport { BydUserService } from '../../services/user.service';\r\nimport { WarehouseComponent } from './warehouse.component';\r\n\r\n@Component({\r\n  selector: 'byd-warehouse-guard',\r\n  template: '',\r\n  imports: [],\r\n  standalone: true,\r\n})\r\nexport class WarehouseGuardComponent extends BydAbstractComponent {\r\n  private readonly _usersServices = inject(BydUserService);\r\n  private readonly _permissionsServices = inject(BydPermissionsServices);\r\n\r\n  public openDialog = inject(MatDialog);\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._registerSubscription(\r\n      this._usersServices.warehouse.get$().subscribe({\r\n        next: warehouses => {\r\n          if (!warehouses) {\r\n            return;\r\n          }\r\n          if (this._permissionsServices.warehouse) {\r\n            return;\r\n          }\r\n\r\n          this.openDialog.open(WarehouseComponent, {\r\n            disableClose: true,\r\n          });\r\n        },\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { LoginCardComponent } from '../../components/public-api';\r\n\r\n@Component({\r\n  selector: '',\r\n  imports: [LoginCardComponent],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss',\r\n  standalone: true,\r\n})\r\nexport class BydLoginPage {}\r\n","<byd-login-card></byd-login-card>\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { BydRoutes } from '@beyond/menu';\r\nimport { BydPermissionsServices } from '@beyond/server';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard {\r\n  private readonly _permissionsServices = inject(BydPermissionsServices);\r\n\r\n  constructor(private router: Router) {}\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\r\n    if (this._permissionsServices.isAuthenticated === false) {\r\n      this.setRedirect();\r\n      return false;\r\n    }\r\n    return this._permissionsServices.isAuthenticated;\r\n  }\r\n\r\n  public setRedirect(): void {\r\n    this.router.navigateByUrl(BydRoutes.getLogin());\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\n\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { BydRoutes } from '@beyond/menu';\r\nimport { BydPermissionLevel, BydPermissionsServices } from '@beyond/server';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FeatureGuard {\r\n  private readonly _permissionsServices = inject(BydPermissionsServices);\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean> | boolean {\r\n    const level = route.data['level'];\r\n    const feature = route.data['feature'];\r\n\r\n    if (this._permissionsServices.received === true) {\r\n      return this._isValidPermission(feature, level);\r\n    }\r\n    return this._permissionsServices.updated$.pipe(\r\n      map(() => {\r\n        return this._isValidPermission(feature, level);\r\n      })\r\n    );\r\n  }\r\n\r\n  public setRedirect(): void {\r\n    this.router.navigateByUrl(BydRoutes.getHome());\r\n  }\r\n\r\n  private _isValidPermission(feature: string, level: BydPermissionLevel) {\r\n    if (this._permissionsServices.canDirectAccess(feature, level)) {\r\n      return true;\r\n    }\r\n    this.setRedirect();\r\n    return false;\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of users\r\n */\r\n\r\nexport * from './auth.guard';\r\nexport * from './feature.guard';\r\n","/*\r\n * Public API Surface of users\r\n */\r\nexport * from './lib/components/public-api';\r\nexport * from './lib/pages/public-api';\r\n\r\nexport * from './lib/guards/public-api';\r\nexport * from './lib/services/user.service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["map"],"mappings":"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"}