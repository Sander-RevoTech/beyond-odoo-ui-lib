{"version":3,"file":"beyond-form-input.mjs","sources":["../../../../projects/form/form-input/src/lib/components/input/checkbox/checkbox.component.ts","../../../../projects/form/form-input/src/lib/components/input/checkbox/checkbox.component.html","../../../../projects/form/form-input/src/lib/components/label/label.component.ts","../../../../projects/form/form-input/src/lib/components/label/label.component.html","../../../../projects/form/form-input/src/lib/components/input/dropdown/dropdown.component.ts","../../../../projects/form/form-input/src/lib/components/input/dropdown/dropdown.component.html","../../../../projects/form/form-input/src/lib/components/input/label/label.component.ts","../../../../projects/form/form-input/src/lib/components/input/label/label.component.html","../../../../projects/form/form-input/src/lib/components/input/radio/radio.component.ts","../../../../projects/form/form-input/src/lib/components/input/radio/radio.component.html","../../../../projects/form/form-input/src/lib/components/input/textarea/textarea.component.ts","../../../../projects/form/form-input/src/lib/components/input/textarea/textarea.component.html","../../../../projects/form/form-input/src/lib/components/input/textbox/text-box.component.ts","../../../../projects/form/form-input/src/lib/components/input/textbox/text-box.component.html","../../../../projects/form/form-input/src/lib/components/input/toggle/toggle.component.ts","../../../../projects/form/form-input/src/lib/components/input/toggle/toggle.component.html","../../../../projects/form/form-input/src/lib/components/input/extra/button/button.component.ts","../../../../projects/form/form-input/src/lib/components/input/extra/button/button.component.html","../../../../projects/form/form-input/src/public-api.ts","../../../../projects/form/form-input/src/beyond-form-input.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { InputCheckBox } from '@beyond/form-model';\nimport { BydBaseComponent, TranslatePipe } from '@beyond/utils';\n\n@Component({\n  selector: 'byd-input-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  standalone: true,\n  imports: [MatFormFieldModule, MatInputModule, FormsModule, ReactiveFormsModule, TranslatePipe, MatCheckbox],\n})\nexport class CheckboxComponent extends BydBaseComponent {\n  @Input()\n  input!: InputCheckBox;\n\n  constructor() {\n    super();\n  }\n}\n","<mat-checkbox [formControl]=\"$any(this.input.formControl)\">\n  {{ input.label | translate }}\n</mat-checkbox>\n","import { NgFor, NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, ValidatorFn, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { TranslatePipe } from '@beyond/utils';\n\n@Component({\n  selector: 'byd-form-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgFor, MatFormFieldModule, MatInputModule, FormsModule, ReactiveFormsModule, TranslatePipe],\n})\nexport class FormLabelComponent {\n  @Input()\n  input!: { label: string; validators: ValidatorFn[] };\n\n  public readonly validators = Validators;\n}\n","<div *ngIf=\"this.input.label\">\n  <mat-label>\n    {{ this.input.label | translate }}\n    <span *ngFor=\"let validator of this.input.validators\">\n      <span *ngIf=\"validator === validators.required\"> * </span>\n    </span>\n  </mat-label>\n</div>\n","import { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { InputDropdown } from '@beyond/form-model';\nimport { BydBaseComponent, TranslatePipe, toArray } from '@beyond/utils';\nimport { Observable } from 'rxjs';\n\nimport { FormLabelComponent } from '../../label/label.component';\n\n@Component({\n  selector: 'byd-input-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    NgIf,\n    NgFor,\n    MatFormFieldModule,\n    MatSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslatePipe,\n    FormLabelComponent,\n  ],\n})\nexport class DropdownComponent extends BydBaseComponent implements OnInit {\n  @Input()\n  input!: InputDropdown<any>;\n\n  @Input()\n  matcher!: ErrorStateMatcher;\n\n  @Input()\n  space = true;\n\n  @Output()\n  valueChanged = new EventEmitter();\n\n  public validators = Validators;\n  public filteredOptions$: Observable<{ id: string; name: string; disabled?: boolean }[]> | null = null;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.matcher === null) {\n      this.matcher = new ErrorStateMatcher();\n    }\n    if (this.input.formControl) {\n      this.filteredOptions$ = this.input.formControl.valueChanges.pipe(switchMap(x => this._filter(x)));\n    }\n  }\n\n  public onChange(value: any) {\n    this.valueChanged.emit(value);\n  }\n\n  private _filter(value: string | string[]): Observable<{ id: string; name: string; disabled?: boolean }[]> {\n    return this.input.options.pipe(\n      map(x => x.filter(option => option.name?.toLowerCase()?.includes(toArray(value).join(' ')?.toLowerCase())))\n    );\n  }\n}\n","<ng-container *ngIf=\"this.input\">\n  <byd-form-label [input]=\"this.input\"></byd-form-label>\n\n  <mat-form-field [floatLabel]=\"'auto'\">\n    <mat-select\n      #box\n      panelClass=\"dropdown-panel\"\n      [disabled]=\"this.input.disabled\"\n      [id]=\"this.input.key\"\n      [formControl]=\"$any(this.input.formControl)\"\n      [multiple]=\"this.input.multiple\"\n      (selectionChange)=\"this.onChange($event)\"\n    >\n      <mat-option *ngIf=\"this.input.showNothingOption\" [value]=\"null\"></mat-option>\n      <mat-option *ngFor=\"let opt of this.input.options | async\" [value]=\"opt.id\" [disabled]=\"opt.disabled || false\">\n        {{ opt.name | translate }}\n      </mat-option>\n    </mat-select>\n\n    <mat-hint>\n      <div *ngIf=\"this.input.message\" class=\"message\">\n        <span> {{ this.input.message }} </span>\n      </div>\n    </mat-hint>\n    <mat-error *ngIf=\"this.input.formControl?.hasError('message')\">\n      <div class=\"alert alert-danger\" role=\"alert\">\n        {{ this.input.formControl?.getError('message') }}\n      </div>\n    </mat-error>\n    <mat-error *ngIf=\"this.input.formControl?.hasError('required')\">\n      <div class=\"alert alert-danger\" role=\"alert\">\n        {{ this.input.label | translate }} est <strong>obligatoire</strong>\n      </div>\n    </mat-error>\n  </mat-form-field>\n</ng-container>\n","import { AsyncPipe } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { InputLabel } from '@beyond/form-model';\nimport { TranslatePipe } from '@beyond/utils';\n\nimport { FormLabelComponent } from '../../label/label.component';\n\n@Component({\n  selector: 'byd-input-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.scss'],\n  standalone: true,\n  imports: [MatFormFieldModule, MatInputModule, FormsModule, ReactiveFormsModule, TranslatePipe, AsyncPipe],\n})\nexport class LabelComponent {\n  @Input()\n  input!: InputLabel;\n\n  constructor() {}\n}\n","<span>{{ input.label | translate }}</span>\n<span>{{ input.extraInfo | async }}</span>\n","import { NgClass, NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { InputRadio } from '@beyond/form-model';\nimport { BydSizes } from '@beyond/styles';\nimport { BydBaseComponent, TranslatePipe } from '@beyond/utils';\n\nimport { FormLabelComponent } from '../../label/label.component';\n\n@Component({\n  selector: 'byd-input-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss'],\n  standalone: true,\n  imports: [\n    NgClass,\n    NgIf,\n    MatFormFieldModule,\n    MatRadioModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslatePipe,\n    FormLabelComponent,\n  ],\n})\nexport class RadioComponent extends BydBaseComponent {\n  @Input() input!: InputRadio<any>;\n\n  constructor() {\n    super();\n  }\n\n  public iconSize(option: { name?: string }): BydSizes {\n    return this.hasLabel(option) ? 'xs' : 'sm';\n  }\n\n  public hasLabel(option: { name?: string }): boolean {\n    return !!option.name && option.name.length > 0;\n  }\n\n  onOptionClicked(optionId: any) {\n    if (this.input.disabled) return;\n\n    if (this.input.value === optionId) {\n      this.input.formControl?.setValue(null);\n    } else {\n      this.input.formControl?.setValue(optionId);\n    }\n  }\n}\n","<div class=\"radio-label\">\n  <byd-form-label [input]=\"this.input\"></byd-form-label>\n</div>\n\n<div class=\"radio-container\" *ngIf=\"!this.input.useMaterialTheme\">\n  <div\n    class=\"radio-element\"\n    [ngClass]=\"{\n      validated: this.input.value === option.id,\n      disabled: this.input.disabled,\n    }\"\n    *ngFor=\"let option of this.input.options | async\"\n    (click)=\"this.onOptionClicked(option.id)\"\n  >\n    <div\n      [ngClass]=\"{\n        'button-with-icon': this.hasLabel(option),\n        'only-icon': !this.hasLabel(option),\n      }\"\n    >\n      <!-- <byd-local-icon\n        *ngIf=\"option.icon\"\n        [type]=\"option.icon\"\n        [size]=\"this.iconSize(option)\"\n      >\n      </byd-local-icon> -->\n\n      <span *ngIf=\"option.name\">\n        {{ option.name | translate }}\n      </span>\n    </div>\n  </div>\n</div>\n\n<mat-radio-group *ngIf=\"this.input.useMaterialTheme\" [id]=\"this.input.key\" [formControl]=\"$any(this.input.formControl)\">\n  <mat-radio-button\n    [ngClass]=\"{ validated: this.input.value === option.id }\"\n    *ngFor=\"let option of this.input.options | async\"\n    [value]=\"option.id\"\n  >\n    <div class=\"button-with-icon\">\n      <!-- <byd-local-icon\n        *ngIf=\"this.option.icon\"\n        [type]=\"this.option.icon\"\n        [size]=\"this.iconSize(option)\"\n      >\n      </byd-local-icon> -->\n\n      <span *ngIf=\"option.name\">\n        {{ option.name | translate }}\n      </span>\n    </div>\n  </mat-radio-button>\n</mat-radio-group>\n","import { Component, Input } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { InputTextarea } from '@beyond/form-model';\n\nimport { FormLabelComponent } from '../../label/label.component';\n\n@Component({\n  selector: 'byd-input-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss'],\n  standalone: true,\n  imports: [MatFormFieldModule, MatInputModule, FormsModule, ReactiveFormsModule, FormLabelComponent],\n})\nexport class TextareaComponent {\n  @Input()\n  input!: InputTextarea;\n\n  @Input()\n  matcher!: ErrorStateMatcher;\n\n  public validators = Validators;\n\n  constructor() {}\n}\n","<!-- <quill-editor [beforeRender]=\"beforeRender\"></quill-editor> -->\n\n<byd-form-label [input]=\"this.input\"></byd-form-label>\n\n<mat-form-field [floatLabel]=\"'auto'\" class=\"textarea-container\" appearance=\"fill\">\n  <!-- IMPROVE: remove $any -->\n  <textarea\n    matInput\n    cdkTextareaAutosize\n    cdkAutosizeMinRows=\"1\"\n    cdkAutosizeMaxRows=\"5\"\n    class=\"form-control\"\n    [value]=\"this.input.value\"\n    [formControl]=\"$any(this.input.formControl)\"\n    [errorStateMatcher]=\"this.matcher\"\n  ></textarea>\n</mat-form-field>\n","import { NgClass, NgIf } from '@angular/common';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { InputNumber, InputTextBox } from '@beyond/form-model';\nimport { TranslatePipe } from '@beyond/utils';\n\nimport { FormLabelComponent } from '../../label/label.component';\nimport { TextareaComponent } from '../textarea/textarea.component';\n\n@Component({\n  selector: 'byd-input-textbox',\n  templateUrl: './text-box.component.html',\n  styleUrls: ['./text-box.component.scss'],\n  standalone: true,\n  imports: [\n    NgIf,\n    NgClass,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslatePipe,\n    FormLabelComponent,\n    TextareaComponent,\n  ],\n})\nexport class TextBoxComponent implements OnInit {\n  @Input()\n  input!: InputTextBox | InputNumber;\n\n  @Input()\n  matcher!: ErrorStateMatcher;\n\n  @Output()\n  valueChanged = new EventEmitter();\n\n  @Input()\n  space = true;\n\n  public validators = Validators;\n  public hide = false;\n\n  get isPassword() {\n    return this.input.type === 'password';\n  }\n\n  constructor() {}\n\n  ngOnInit() {\n    if (this.matcher === null) {\n      this.matcher = new ErrorStateMatcher();\n    }\n    if (this.isPassword) {\n      this.hide = true;\n    }\n  }\n\n  public onChange(value: any) {\n    this.valueChanged.emit(value);\n  }\n\n  public iconClicked() {\n    if (this.input.iconClicked) this.input.iconClicked();\n  }\n}\n","<byd-form-label [input]=\"this.input\"></byd-form-label>\n\n<ng-container *ngIf=\"this.input.type === 'textarea'\">\n  <byd-input-textarea [input]=\"$any(this.input)\" [matcher]=\"this.matcher\"></byd-input-textarea>\n</ng-container>\n\n<div class=\"input-group\" *ngIf=\"this.input.type !== 'textarea'\">\n  <mat-form-field class=\"textbox-container\" [floatLabel]=\"'auto'\" [ngClass]=\"{ noSpace: !this.space }\">\n    <!-- IMPROVE: remove $any -->\n    <input\n      #box\n      matInput\n      class=\"form-control\"\n      [value]=\"this.input.value\"\n      [formControl]=\"$any(this.input.formControl)\"\n      [errorStateMatcher]=\"this.matcher\"\n      [readonly]=\"this.input.disabled\"\n      [type]=\"this.isPassword && !this.hide ? 'text' : this.input.type\"\n      (keyup)=\"this.onChange(box.value)\"\n    />\n    <span matSuffix mat-icon-button aria-label=\"Hide/Show\" (click)=\"this.hide = !this.hide\" *ngIf=\"this.isPassword\">\n      <mat-icon>\n        {{ this.hide ? 'Visibility' : 'Visibility Off' }}\n      </mat-icon>\n    </span>\n\n    <mat-hint>\n      <small class=\"form-text text-muted\">\n        <div *ngIf=\"this.input.message\" class=\"message\">\n          <span> {{ this.input.message }} </span>\n        </div>\n      </small>\n    </mat-hint>\n    <mat-error *ngIf=\"this.input.formControl?.hasError('message')\">\n      <small class=\"form-text text-danger\">\n        {{ this.input.formControl?.getError('message') }}\n      </small>\n    </mat-error>\n    <mat-error *ngIf=\"this.input.formControl?.getError('invalidSlug')\">\n      {{ 'input.text-box.is-slug' }}\n    </mat-error>\n    <mat-error *ngIf=\"this.input.formControl?.hasError('minlength')\">\n      <small class=\"form-text text-danger\">\n        {{\n          'input.text-box.minimum-length'\n            | translate\n              : {\n                  length: this.input.formControl?.getError('minlength').requiredLength,\n                }\n        }}\n      </small>\n    </mat-error>\n    <mat-error *ngIf=\"this.input.formControl?.hasError(this.input.type)\">\n      <small class=\"form-text text-danger\">{{ 'input.text-box.error-occured' | translate }}</small>\n    </mat-error>\n    <mat-error *ngIf=\"this.input.formControl?.hasError('required')\">\n      <small class=\"form-text text-danger\">\n        {{\n          'input.text-box.is-mandatory'\n            | translate\n              : {\n                  field: (this.input.label | translate) || 'input.text-box.this-field' | translate,\n                }\n        }}\n      </small>\n    </mat-error>\n  </mat-form-field>\n\n  <span class=\"action\" *ngIf=\"this.input.icon\" (click)=\"this.iconClicked()\">\n    <!-- <byd-local-icon [type]=\"this.input.icon\" size=\"xs\"></byd-local-icon> -->\n  </span>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { InputCheckBox } from '@beyond/form-model';\nimport { BydBaseComponent, TranslatePipe } from '@beyond/utils';\n\n@Component({\n  selector: 'byd-input-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  standalone: true,\n  imports: [\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslatePipe,\n    MatSlideToggleModule,\n  ],\n})\nexport class ToggleComponent extends BydBaseComponent {\n  @Input()\n  input!: InputCheckBox;\n\n  constructor() {\n    super();\n  }\n}\n","<mat-slide-toggle [checked]=\"this.input.value\" [formControl]=\"$any(this.input.formControl)\">\n  <span class=\"label\">{{ this.input.label | translate }}</span>\n</mat-slide-toggle>\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { InputButton } from '@beyond/form-model';\r\nimport { TranslatePipe } from '@beyond/translation';\r\nimport { BydButtonComponent } from '@beyond/ui';\r\n\r\n\r\n@Component({\r\n  selector: 'byd-input-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n  standalone: true,\r\n  imports: [BydButtonComponent, TranslatePipe, AsyncPipe],\r\n})\r\nexport class BydInputButtonComponent {\r\n  @Input()\r\n  input!: InputButton;\r\n}\r\n","<byd-button\r\n  (action)=\"this.input.callback()\"\r\n  [state]=\"(this.input.disabled$ | async) ? 'disabled' : 'classic'\"\r\n  [type]=\"this.input.style\"\r\n>\r\n  {{ this.input.label | translate }}\r\n</byd-button>\r\n","/*\n * Public API Surface of form\n */\nexport * from './lib/components/public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i3","TranslatePipe"],"mappings":"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"}