{"version":3,"file":"beyond-features.mjs","sources":["../../../projects/features/src/lib/features/grid/models/types.ts","../../../projects/features/src/lib/features/grid/models/cols/base-col.ts","../../../projects/features/src/lib/features/grid/models/cols/bool-col.ts","../../../projects/features/src/lib/features/grid/models/cols/date-col.ts","../../../projects/features/src/lib/features/grid/models/cols/enum-col.ts","../../../projects/features/src/lib/features/grid/models/cols/number-col.ts","../../../projects/features/src/lib/features/grid/models/cols/string-col.ts","../../../projects/features/src/lib/features/grid/models/grid-filters.ts","../../../projects/features/src/lib/features/grid/models/grid-data.ts","../../../projects/features/src/lib/features/grid/services/grid-instance.service.ts","../../../projects/features/src/lib/features/grid/components/abstract.component.ts","../../../projects/features/src/lib/features/grid/services/grid-form.services.ts","../../../projects/features/src/lib/features/grid/components/form/form.component.ts","../../../projects/features/src/lib/features/grid/components/form/form.component.html","../../../projects/features/src/lib/features/grid/components/pagination/pagination.component.ts","../../../projects/features/src/lib/features/grid/components/pagination/pagination.component.html","../../../projects/features/src/lib/features/grid/components/grid/grid.component.ts","../../../projects/features/src/lib/features/grid/components/grid/grid.component.html","../../../projects/features/src/lib/features/grid/components/tags/tags.component.ts","../../../projects/features/src/lib/features/grid/components/tags/tags.component.html","../../../projects/features/src/lib/features/grid/components/control/control.component.ts","../../../projects/features/src/lib/features/grid/components/control/control.component.html","../../../projects/features/src/lib/features/grid/services/grid-view.service.ts","../../../projects/features/src/lib/features/grid/components/container/container.component.ts","../../../projects/features/src/lib/features/grid/components/container/container.component.html","../../../projects/features/src/lib/features/grid/public-api.ts","../../../projects/features/src/public-api.ts","../../../projects/features/src/beyond-features.ts"],"sourcesContent":["import { Filter as TabulatorFilter } from 'tabulator-tables';\r\n\r\ntype KeyValuePair = {\r\n  key: string;\r\n  value: number;\r\n};\r\n\r\nexport enum ParameterType {\r\n  Unknown,\r\n  String,\r\n  Number,\r\n  Boolean,\r\n  DateTime,\r\n  Enum,\r\n}\r\n\r\nexport interface ColMetaData {\r\n  name: string;\r\n  type: ParameterType;\r\n  // enumName?: 'Criticity' | string;\r\n  // nullable: boolean;\r\n  // multiSearchEnabled: boolean;\r\n  // meSearchEnabled: boolean;\r\n  // showEntireListWhenFiltering: boolean;\r\n  // additionalInfo: KeyValuePair[];\r\n}\r\n\r\nexport type ActiveFilter = { key: string, values: Filter[] };\r\nexport type Filter = TabulatorFilter;\r\nexport type Sort = {field: string; dir: 'asc' | 'desc'}\r\n\r\nexport type ajaxResponse<T> = { data: T[]; last_page: number }\r\nexport type ajaxRequestFuncParams = { filter: Filter[], sort: Sort[], page: number, size: number }\r\n\r\nexport type ViewType = 'grid' | 'card';","\nimport { Observable } from 'rxjs';\n\nimport { InputBase } from '@beyond/form-model';\n\nimport { BydGridData } from '../grid-data';\nimport { ColumnDefinition } from 'tabulator-tables';\nimport { ColMetaData, Filter } from '../types';\n\nexport const operatorMap: { [key: string]: string } = {\n  contains: '%',\n  greaterThan: '>',\n  lessThan: '<',\n  equals: '=',\n  notEqual: '!=',\n  greaterThanOrEqual: '>=',\n  lessThanOrEqual: '<=',\n};\nexport interface IFilterOptions {\n  allow: boolean;\n}\nexport interface IColOptions {\n  sortable?: boolean;\n  filters?: IFilterOptions;\n  enumInfo?: {\n    cellRenderer: any;\n    enum: any | null;\n    values: {\n      id: string;\n      name: string;\n    }[];\n  };\n  dataSearch$?: (search: string, colId: string) => Observable<string[]>;\n}\nexport interface IBaseCol {\n  scope: string;\n  col: ColMetaData;\n  options?: IColOptions;\n}\n\nexport class BaseCol<T> {\n  public data: IBaseCol;\n  public model: BydGridData<any>;\n\n  get key() {\n    return this.data.col.name;\n  }\n  get options() {\n    return this.data.options;\n  }\n\n  get inputLabel() {\n    return `grid.${this.data.scope}.core.${this.data.col.name}`;\n  }\n  constructor(data: IBaseCol, model: BydGridData<any>) {\n    this.data = data;\n    this.model = model;\n  }\n\n  public getColDef(): ColumnDefinition {\n    return {\n      field: this.key,\n      title: this.inputLabel,\n      headerFilter: \"input\" \n    };\n  }\n\n  public getInputForm(): InputBase<any> | null {\n    return null;\n  }\n  public formatInputForm(data: any): Filter | null {\n    return null;\n  }\n}\n\n// export class BaseFilterComponent<T extends AdvancedFilterModel, U extends BaseCol<T>> implements IFilter {\n//   public input: InputBase<any> | null = null;\n\n//   protected _col: U | null = null;\n//   protected _model: T | null = null;\n//   protected _params: IFilterParams<unknown, GridContext> | null = null;\n\n//   agInit(params: IFilterParams) {\n//     this._params = params;\n//     this._col = params.context.cols[params.column.getColId()] ?? null;\n\n//     this.setInput();\n//   }\n\n//   isFilterActive() {\n//     this.setInput();\n//     return !!this._model;\n//   }\n//   getModel() {\n//     return this._model;\n//   }\n//   setModel(model: any): void | AgPromise<void> {\n//     this._model = model;\n//   }\n//   refresh?(newParams: IFilterParams): boolean {\n//     console.log('Method refresh not implemented.');\n//     return true;\n//   }\n//   doesFilterPass(params: IDoesFilterPassParams): boolean {\n//     if (!this._col?.key) {\n//       return true;\n//     }\n//     const data = params.data[this._col?.key];\n//     if (!data || !this._model) {\n//       return true;\n//     }\n//     return this._validateDataAgainstModel(data, this._model);\n//   }\n\n//   getTags(): ActiveFilterTag[] {\n//     return [];\n//   }\n\n//   getModelAsString(model: ISimpleFilter): string {\n//     return '';\n//   }\n\n//   apply(data: any) {\n//     this.setModel(this._col?.getFiltersModel(data));\n\n//     this._params?.api.onFilterChanged();\n//     this._params?.context.grid.applyFilterModel({}, FilterModelSource.storage);\n//   }\n\n//   setInput() {\n//     if (this.input) {\n//       this.input.destroy();\n//     }\n//     this.input = this._col?.getInputForm(true) ?? null;\n//     this.input?.createFormControl();\n//     this.input?.changeValue$.subscribe({\n//       next: value => {\n//         const data: any = [];\n//         data[this._col?.key ?? ''] = value;\n\n//         this.apply(data);\n//       },\n//     });\n//   }\n\n//   private _validateDataAgainstModel(data: any, model: AdvancedFilterModel): boolean {\n//     if (model.filterType === 'join') {\n//       // Validation for JoinAdvancedFilterModel\n//       if (!Array.isArray(model.conditions)) return false;\n\n//       if (model.type === 'AND') {\n//         return model.conditions.every(condition => this._validateDataAgainstModel(data, condition));\n//       } else if (model.type === 'OR') {\n//         return model.conditions.some(condition => this._validateDataAgainstModel(data, condition));\n//       }\n//     }\n\n//     if (['text', 'number', 'date', 'dateString', 'boolean'].includes(model.filterType)) {\n//       // Validation for ColumnAdvancedFilterModel\n//       switch (model.filterType) {\n//         case 'text':\n//           return this._validateTextCondition(data, model.type, model.filter);\n//         case 'number':\n//           return this._validateScalarCondition(data, model.type, model.filter);\n//         case 'date':\n//         case 'dateString':\n//           return this._validateScalarCondition(\n//             new Date(data).getTime(),\n//             model.type,\n//             model.filter ? new Date(model.filter).getTime() : undefined\n//           );\n//         case 'boolean':\n//           return this._validateBooleanCondition(data, model.type);\n//         default:\n//           return false;\n//       }\n//     }\n\n//     return false;\n//   }\n\n//   private _validateTextCondition(data: string, type: TextAdvancedFilterModelType, filter?: string): boolean {\n//     switch (type) {\n//       case 'equals':\n//         return data === filter;\n//       case 'notEqual':\n//         return data !== filter;\n//       case 'contains':\n//         return filter ? data.includes(filter) : false;\n//       case 'notContains':\n//         return filter ? !data.includes(filter) : true;\n//       case 'startsWith':\n//         return filter ? data.startsWith(filter) : false;\n//       case 'endsWith':\n//         return filter ? data.endsWith(filter) : false;\n//       case 'blank':\n//         return data === '';\n//       case 'notBlank':\n//         return data !== '';\n//       default:\n//         return false;\n//     }\n//   }\n\n//   private _validateScalarCondition(data: number, type: ScalarAdvancedFilterModelType, filter?: number): boolean {\n//     switch (type) {\n//       case 'equals':\n//         return data === filter;\n//       case 'notEqual':\n//         return data !== filter;\n//       case 'lessThan':\n//         return filter !== undefined && data < filter;\n//       case 'lessThanOrEqual':\n//         return filter !== undefined && data <= filter;\n//       case 'greaterThan':\n//         return filter !== undefined && data > filter;\n//       case 'greaterThanOrEqual':\n//         return filter !== undefined && data >= filter;\n//       case 'blank':\n//         return data === null || data === undefined;\n//       case 'notBlank':\n//         return data !== null && data !== undefined;\n//       default:\n//         return false;\n//     }\n//   }\n\n//   private _validateBooleanCondition(data: boolean, type: BooleanAdvancedFilterModelType): boolean {\n//     return (type === 'true' && data === true) || (type === 'false' && data === false);\n//   }\n// }\n","\nimport { BaseCol } from './base-col';\n\nexport class BoolCol extends BaseCol<Boolean> {\n\n}\n","import { InputDatePicker } from \"@beyond/form-model\";\nimport { BaseCol } from \"./base-col\";\n\n\n\nexport class DateCol extends BaseCol<Date> {\n  \n    public override getInputForm() {\n        return new InputDatePicker({\n        key: this.key,\n        label: this.inputLabel,\n        rangeEnabled: true,\n        });\n    }\n}\n\n","import { BaseCol } from \"./base-col\";\n\nexport class EnumCol extends BaseCol<Number> {\n  \n}\n","import { InputLabel, InputNumber, InputPanel } from \"@beyond/form-model\";\nimport { BaseCol } from \"./base-col\";\n\nexport class NumberCol extends BaseCol<Number> {\n    public override getInputForm() {\n        return new InputPanel({\n            key: 'number-panel',\n            contentClass: 'row g-0',\n            children: [\n                new InputLabel({\n                key: 'number-panel-label',\n                label: this.inputLabel,\n                class: 'col-12',\n                }),\n                new InputNumber({\n                key: this.key + '#min',\n                label: 'min',\n                }),\n                new InputNumber({\n                key: this.key + '#max',\n                label: 'max',\n                }),\n            ],\n        });\n    }\n}\n","import { InputTextBox } from \"@beyond/form-model\";\nimport { BaseCol } from \"./base-col\";\nimport { Filter } from \"../types\";\n\nexport class StringCol extends BaseCol<string> {\n  \n    public override getInputForm() {\n       // const value = this.values;\n\n      return new InputTextBox({\n        key: this.key,\n        label: this.inputLabel,\n        class: 'pb-2',\n      })\n    }\n\n      \n    public override formatInputForm(data: any): Filter | null {\n        const value = data[this.key];\n\n        if (!value || value === '' || value.length === 0) {\n            return null;\n        }\n        \n        return {\n            field: this.key,\n            type: 'like',\n            value: value,\n        };\n        \n    }\n}\n","import {TabulatorFull as Tabulator} from 'tabulator-tables';\r\nimport { ActiveFilter, Filter } from \"./types\";\r\n\r\nexport class BydGridFilters {\r\n  \r\n    constructor(public readonly scope: string, public readonly table: Tabulator) {}\r\n\r\n    public get() {\r\n        return this.table.getFilters(false).reduce<ActiveFilter[]>((acc, filter) => {\r\n            const existing = acc.find(tag => tag.key === filter.field);\r\n            if (existing) {\r\n                existing.values.push(filter);\r\n            } else {\r\n                acc.push({\r\n                key: filter.field,\r\n                values: [filter]\r\n                });\r\n            }\r\n            return acc;\r\n        }, []);\r\n    }\r\n    public apply(filters: Filter[]) {\r\n        this.table?.setFilter(filters);\r\n    }\r\n\r\n    public remove(filter: Filter) {\r\n        this.table.removeFilter(filter.field, filter.type, filter.value);\r\n    }\r\n}\r\n","import { ElementRef, signal } from \"@angular/core\";\r\nimport {ColumnDefinition, TabulatorFull as Tabulator} from 'tabulator-tables';\r\nimport { ajaxRequestFuncParams, ajaxResponse, ColMetaData, Filter, ParameterType, ViewType } from \"./types\";\r\nimport { BaseCol } from \"./cols/base-col\";\r\nimport { BoolCol } from \"./cols/bool-col\";\r\nimport { DateCol } from \"./cols/date-col\";\r\nimport { EnumCol } from \"./cols/enum-col\";\r\nimport { NumberCol } from \"./cols/number-col\";\r\nimport { StringCol } from \"./cols/string-col\";\r\nimport { BehaviorSubject, firstValueFrom, Observable } from \"rxjs\";\r\nimport { BydGridFilters } from \"./grid-filters\";\r\n\r\nexport interface IDataService<T> {\r\n  getData$: (params: ajaxRequestFuncParams) => Observable<ajaxResponse<T>>;\r\n}\r\n\r\nexport class BydGridData<T> {\r\n  \r\n    get data(): T[] {\r\n        return this.table?.getData() ?? [];\r\n    }\r\n    public table: Tabulator | null = null;\r\n    public cols: { [index: string]: BaseCol<any> } = {};\r\n    public filters: BydGridFilters | null = null;\r\n\r\n    public readonly isReady$ = new BehaviorSubject(false);\r\n\r\n    public tableHtml: ElementRef | null = null;\r\n    public readonly displayType = signal<ViewType>('card');\r\n\r\n    constructor(\r\n        public readonly scope: string\r\n    ) { }\r\n\r\n    public init(params: {elementRef: ElementRef, colsMetaData: ColMetaData[], services: IDataService<T>}) {\r\n        this.table = new Tabulator(params.elementRef.nativeElement, {\r\n            height: \"500px\",\r\n            layout: \"fitColumns\",\r\n            paginationMode: \"remote\",\r\n            pagination: true,\r\n            paginationSize: 10,\r\n            paginationInitialPage: 1,\r\n            ajaxFiltering: true,\r\n            filterMode: \"remote\",\r\n\r\n            ajaxSorting: true,\r\n            sortMode: \"remote\",\r\n\r\n            columns: this._getColumns(params.colsMetaData),\r\n\r\n            ajaxURL: \"dummy\",\r\n            ajaxRequestFunc: (url: string, config: any, ajaxParams: ajaxRequestFuncParams): Promise<ajaxResponse<T>> => {\r\n                return firstValueFrom(params.services.getData$(ajaxParams));\r\n            },\r\n            ajaxResponse: function(_: any, __: any, response: ajaxResponse<T>) {\r\n                return response;\r\n            },\r\n        });        \r\n\r\n        this.table.on(\"tableBuilt\", () => {\r\n            this.tableHtml = params.elementRef;\r\n            this.filters = new BydGridFilters(this.scope, this.table!);\r\n            this.isReady$.next(true);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    public switchView(type: ViewType) {\r\n        this.displayType.set(type);\r\n    }\r\n\r\n    private _getColumns(colsMetaData: ColMetaData[]): ColumnDefinition[] {\r\n        this.cols = Object.fromEntries(\r\n            colsMetaData.map(meta => {\r\n                const field = this._factoryCols(meta);\r\n                return [field.key, field];\r\n            })\r\n        );\r\n\r\n        return Object.keys(this.cols)\r\n            .filter(key => !key.startsWith('_'))\r\n            .map(key => ({ ...this.cols[key].getColDef() }));\r\n    }\r\n\r\n    private _factoryCols(col: ColMetaData): BaseCol<any> {\r\n\r\n        switch (col.type) {\r\n        case ParameterType.String:\r\n            return new StringCol({ scope: this.scope, col: col }, this);\r\n        case ParameterType.Enum:\r\n            return new EnumCol({ scope: this.scope, col: col }, this);\r\n        case ParameterType.Number:\r\n            return new NumberCol({ scope: this.scope, col: col }, this);\r\n        case ParameterType.DateTime:\r\n            return new DateCol({ scope: this.scope, col: col }, this);\r\n        case ParameterType.Boolean:\r\n            return new BoolCol({ scope: this.scope, col: col }, this);\r\n        default:\r\n            return new BaseCol({ scope: this.scope, col: col }, this);\r\n        }\r\n    }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\n\r\nimport { BydGridData } from '../models/grid-data';\r\nimport { BydGridFormService } from './grid-form.services';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydGridInstanceService<T> {\r\n  public readonly grids: { [index: string]: BydGridData<T> } = {};\r\n\r\n  constructor() {}\r\n\r\n  public create(key: string) {\r\n    if (!this.has(key)) {\r\n      this.grids[key] = new BydGridData<T>(key);\r\n    }\r\n  }\r\n\r\n  public get(key: string, create: boolean = false) {\r\n    if (!this.has(key) && create) {\r\n      this.create(key);\r\n    }\r\n    return this.grids[key];\r\n  }\r\n\r\n  public has(key: string) {\r\n    return !!this.grids[key];\r\n  }\r\n}\r\n","import { Component, Input, OnInit, inject } from '@angular/core';\r\n\r\nimport { BydBaseComponent } from '@beyond/utils';\r\n\r\nimport { BydGridData } from '../models/grid-data';\r\nimport { BydGridInstanceService } from '../services/grid-instance.service';\r\nimport { filter, Observable, tap } from 'rxjs';\r\n\r\n@Component({ template: '' })\r\nexport abstract class BydAbstractGridComponent<T>\r\n  extends BydBaseComponent\r\n  implements OnInit\r\n{\r\n  @Input()\r\n  gridId!: string;\r\n\r\n  get data() {\r\n    return this._grid.data;\r\n  }\r\n  get displayType() {\r\n    return this._grid.displayType;\r\n  }\r\n  public isReady$!: Observable<boolean>;\r\n\r\n  protected _grid!: BydGridData<T>;\r\n  private _dataService = inject(BydGridInstanceService);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._grid = this._dataService.get(this.gridId, true);\r\n    this.isReady$ = this._grid.isReady$.pipe(filter(isReady => isReady), tap(a => console.log('after', a)));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BydGridData } from '../models/grid-data';\r\nimport { InputBase, InputPanel } from '@beyond/form-model';\r\nimport { isNonNullable } from '@beyond/utils';\r\nimport { Filter } from '../models/types';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydGridFormService<T> {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public getFiltersForm(model: BydGridData<T>): InputBase<any>[] {\r\n    const keys = Object.keys(model.cols);\r\n    if (!keys || keys.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    return [\r\n      new InputPanel({\r\n        key: 'main-panel',\r\n        label: `grid.${model.scope}.title`,\r\n        class: 'p-space-sm',\r\n        children: keys\r\n          .map(key => model.cols[key].getInputForm())\r\n          .filter(isNonNullable),\r\n      }),\r\n    ];\r\n  }\r\n\r\n  public formatFiltersForm(model: BydGridData<T>, data: any): Filter[] {\r\n    return Object.keys(model.cols).reduce<Filter[]>((acc, key) => {\r\n      const filter = model.cols[key].formatInputForm(data);\r\n\r\n      if(!filter){\r\n        return acc\r\n      }\r\n      return [...acc, filter]\r\n      }, []);\r\n  }\r\n\r\n}\r\n","import { Component, inject, signal } from '@angular/core';\r\nimport { BydAbstractGridComponent } from '../abstract.component';\r\nimport { InputBase } from '@beyond/form-model';\r\nimport { BydGridFormService } from '../../services/grid-form.services';\r\nimport { BydFormComponent } from '@beyond/form-basic';\r\n\r\n@Component({\r\n  selector: 'byd-grid-form',\r\n  imports: [BydFormComponent],\r\n  templateUrl: './form.component.html',\r\n  styleUrl: './form.component.scss'\r\n})\r\nexport class BydGridFormComponent extends BydAbstractGridComponent<unknown> {\r\n\r\n  public filtersForm = signal<InputBase<any>[]>([]);\r\n\r\n  private _formService = inject(BydGridFormService<unknown>)\r\n\r\n  public override ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this._registerSubscription(this.isReady$.subscribe({\r\n      next: () => this.filtersForm.set(this._formService.getFiltersForm(this._grid))\r\n    }));\r\n  }\r\n\r\n  public apply(data: any) {\r\n    const filters = this._formService.formatFiltersForm(this._grid, data);\r\n\r\n    this._grid.filters?.apply(filters);\r\n  }\r\n}\r\n","<byd-form [inputs]=\"this.filtersForm()\" (valid)=\"this.apply($event)\"></byd-form>","import { Component } from '@angular/core';\nimport { BydAbstractGridComponent } from '../abstract.component';\nimport { MatIcon } from '@angular/material/icon';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { TypedTemplateDirective } from '@beyond/utils';\n\ntype PageNumber = {\n  number: number;\n  icon?: string;\n};\n@Component({\n  selector: 'byd-grid-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss'],\n  standalone: true,\n  imports: [MatIcon, NgTemplateOutlet, TypedTemplateDirective],\n})\nexport class PaginationComponent extends BydAbstractGridComponent<any> {\n  readonly PageNumber!: { pagenumber: PageNumber };\n  readonly maxPageNumber = 10;\n  get grid() {\n    return this._grid;\n  }\n  get show() {\n    return this.paginationGetTotalPages > 1;\n  }\n  get paginationGetTotalPages() {\n    return this.grid.table?.getPageMax() || 0;\n  }\n\n  constructor() {\n    super();\n  }\n\n  public getListPage() {\n    if (!this.grid || !this.grid.table) {\n      return [];\n    }\n    const last = this.paginationGetTotalPages;\n\n    if (last < this.maxPageNumber) {\n      return this._computedPageNumbers(2, last);\n    }\n\n    const current = this.grid.table.getPage() || 0;\n    const rangeStart = Math.floor(current / 10) * 10;\n    const rangeEnd = rangeStart + 10;\n\n    return [\n      ...(rangeStart <= 1 ? [] : [{ number: rangeStart - 1, icon: 'more-line' }]),\n      ...this._computedPageNumbers(rangeStart > 1 ? rangeStart : 2, rangeEnd < last ? rangeEnd : last),\n      ...(rangeEnd > last ? [] : [{ number: rangeEnd, icon: 'more-line' }]),\n    ];\n  }\n\n  private _computedPageNumbers(start: number, end: number): PageNumber[] {\n    const pageNumbers = [];\n    for (let i = start; i < end; i++) {\n      pageNumbers.push({ number: i });\n    }\n    return pageNumbers;\n  }\n}\n","@if(this.grid && this.grid.table && this.show) {\n  <div\n    class=\"flex-start g-space-sm align-center\"\n  >\n    <mat-icon (click)=\"this.grid.table.previousPage()\">\n      chevron_left\n    </mat-icon>\n    <ng-template\n      [ngTemplateOutlet]=\"item\"\n      [ngTemplateOutletContext]=\"{ pagenumber: { number: 1 } }\"\n    ></ng-template>\n\n    @for(page of this.getListPage(); track page.number) {\n      <ng-template\n        [ngTemplateOutlet]=\"item\"\n        [ngTemplateOutletContext]=\"{ pagenumber: page }\"\n      ></ng-template>\n    }\n\n    @if(this.paginationGetTotalPages > 1) {\n      <ng-template\n        [ngTemplateOutlet]=\"item\"\n        [ngTemplateOutletContext]=\"{\n          pagenumber: { number: this.paginationGetTotalPages }\n        }\"\n      ></ng-template>\n    }\n\n    <mat-icon (click)=\"this.grid.table.nextPage()\">\n      chevron_right\n    </mat-icon>\n  </div>\n}\n\n\n<ng-template\n  #item\n  let-pagenumber=\"pagenumber\"\n  [typedTemplate]=\"this.PageNumber\"\n>\n  <div\n    class=\"figure c-pointer\"\n    [class.is-active]=\"\n      pagenumber.number === (this.grid.table?.getPage() || 0 )\n    \"\n    (click)=\"this.grid.table?.setPage(pagenumber.number)\"\n  >\n    @if(pagenumber.icon) {\n        <mat-icon type=\"sm\">{{ pagenumber.icon }}</mat-icon>\n    } @else {\n        {{ pagenumber.number }}\n    }\n  </div>\n</ng-template>\n","import { Component, ElementRef, Input, Renderer2, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { BydAbstractGridComponent } from '../abstract.component';\r\nimport { PaginationComponent } from \"../pagination/pagination.component\";\r\nimport { AsyncPipe, NgTemplateOutlet } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'byd-grid',\r\n  imports: [PaginationComponent, NgTemplateOutlet, AsyncPipe],\r\n  templateUrl: './grid.component.html',\r\n  styleUrl: './grid.component.scss',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class BydGridComponent<T extends { id: number}> extends BydAbstractGridComponent<T> {\r\n\r\n  @Input()\r\n  cardTemplate!: TemplateRef<{ items: T[] }>;\r\n\r\n  @ViewChild('table', { static: true }) tableElement!: ElementRef;\r\n\r\n  constructor(private renderer: Renderer2) {\r\n    super();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._registerSubscription(\r\n      this.isReady$.subscribe({\r\n        next: () => {\r\n          if(this._grid.tableHtml) {\r\n            this.renderer.appendChild(this.tableElement, this._grid.tableHtml.nativeElement);\r\n          }\r\n        }\r\n      })\r\n    )\r\n  }\r\n}\r\n","<div [style.display]=\"this.displayType() === 'grid' ? 'block' : 'none'\">\r\n    <div #table></div>\r\n</div>\r\n\r\n@if(this.isReady$ | async){\r\n    @if(this.displayType() === 'card') {\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"this.cardTemplate\"\r\n            [ngTemplateOutletContext]=\"{ items: this.data }\"\r\n        ></ng-template>\r\n    }\r\n    <byd-grid-pagination [gridId]=\"this.gridId\"></byd-grid-pagination>\r\n}\r\n\r\n\r\n\r\n","import { Component } from '@angular/core';\nimport { BydAbstractGridComponent } from '../abstract.component';\nimport { TranslatePipe } from '@beyond/translation';\nimport { BydBadgeComponent, BydTextComponent } from '@beyond/ui';\nimport { Filter } from '../../models/types';\n\n\n@Component({\n  selector: 'nyd-grid-tags',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.scss'],\n  standalone: true,\n  imports: [TranslatePipe, BydBadgeComponent, BydTextComponent]\n})\nexport class BydGridTagsComponent extends BydAbstractGridComponent<unknown> {\n\n  get activeFilters() {\n    return this._grid.filters?.get() ?? [];\n  }\n  override ngOnInit() {\n    super.ngOnInit()\n  }\n\n  public remove(filter: Filter) {\n    this._grid.filters?.remove(filter);\n  }\n}\n","<div class=\"flex-row align-center g-space-sm\">\n  <div class=\"list-tag\">\n    @for(tag of this.activeFilters; track tag.key){\n      <div\n        class=\"item-tag\"\n      >\n        <div class=\"tag-title\">\n          {{ \"grid.\" + this.gridId + \".core.\" + tag.key | translate }}\n        </div>\n        @for(value of tag.values; track value.field){\n        <byd-badge [value]=\"value.type + ' ' + value.value\" type=\"primary\" icon=\"close\" (clickAction)=\"this.remove(value)\"></byd-badge>\n        }\n      </div>\n    }\n\n  </div>\n\n  <div class=\"reset-n-result flex-start g-space-md\">\n    <!-- <div class=\"rest\" *ngIf=\"this.tagsList.length > 0\">\n      <cam-link (action)=\"this.reset()\" [underline]=\"false\">\n        <div class=\"flex-start g-space-xs align-center\">\n          <cam-font-icon type=\"sm\" name=\"close-tool\"></cam-font-icon>\n          {{ \"grid.tag.delete\" | translate }}\n        </div>\n      </cam-link>\n    </div> -->\n    <div class=\"result\">\n      <byd-text>\n        {{ \"grid.tag.results\" | translate : { nb: this.data.length} }}\n      </byd-text>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { BydAbstractGridComponent } from '../abstract.component';\nimport { ViewType } from '../../models/types';\nimport { MatIcon } from '@angular/material/icon';\nimport { AsyncPipe } from '@angular/common';\n\n@Component({\n  selector: 'byd-grid-control',\n  templateUrl: './control.component.html',\n  styleUrls: ['./control.component.scss'],\n  standalone: true,\n  imports: [MatIcon, AsyncPipe],\n})\nexport class BydGridControlComponent extends BydAbstractGridComponent<any> implements OnInit {\n  @Input()\n  show: { switchView?: boolean; } = { switchView: true };\n\n  constructor() {\n    super();\n  }\n\n  public override ngOnInit() {\n    super.ngOnInit();\n    if (this.breakpoints.isMobile && this.show.switchView) {\n      this.switchView('card');\n    }\n  }\n\n  public switchView(type: ViewType) {\n    this._grid.switchView(type);\n  }\n\n}\n","@if(this.isReady$ | async) {\n  <div class=\"d-flex\">\n    @if(this.show.switchView) {\n      <div class=\"grid-control-container ml-space-xs c-pointer\">\n        <div (click)=\"this.switchView('grid')\" class=\"trigger\" [class.active]=\"this.displayType() === 'grid'\">\n          <mat-icon>list</mat-icon>\n        </div>\n        <div class=\"sep\"></div>\n\n        <div (click)=\"this.switchView('card')\" class=\"trigger\" [class.active]=\"this.displayType() === 'card'\">\n          <mat-icon>grid_view</mat-icon>\n        </div>\n      </div>\n    }\n  </div>\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BydBaseOdooService } from '@beyond/odoo';\r\nimport { filter, map, mergeMap, Observable } from 'rxjs';\r\nimport { ajaxRequestFuncParams, ajaxResponse } from '../models/types';\r\nimport { isNonNullable } from '@beyond/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydGridViewService extends BydBaseOdooService {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n  public getData$<T>(model: string, ajaxParam: ajaxRequestFuncParams, fields: (keyof T)[]): Observable<ajaxResponse<T>> {\r\n    const filterParams = ajaxParam.filter.map(f => [f.field, f.type, f.value]) ?? [];\r\n    const orderParams = ajaxParam.sort.map(s => `${s.field} ${s.dir}`).join(',') ?? '';\r\n\r\n    return  this._odooService\r\n          .searchCount$(model, filterParams).pipe(mergeMap((count) => this._odooService\r\n          .searchRead$<T>(\r\n            model,\r\n            filterParams,\r\n            fields,\r\n            { \"order\": orderParams, \"offset\": (ajaxParam.page - 1) * ajaxParam.size, \"limit\": ajaxParam.size }\r\n          )\r\n          .pipe(\r\n            filter(isNonNullable),\r\n            map((data) => ({\r\n                data: data,\r\n                last_page: Math.ceil(count / ajaxParam.size),\r\n              })\r\n            )\r\n          )));\r\n  }\r\n  \r\n}\r\n","import { Component, ElementRef, inject, Input, ViewChild } from '@angular/core';\r\nimport { BydAbstractGridComponent } from '../abstract.component';\r\nimport { ColMetaData } from '../../models/types';\r\nimport { BydGridViewService } from '../../services/grid-view.service';\r\n\r\n@Component({\r\n  selector: 'byd-grid-container',\r\n  imports: [],\r\n  templateUrl: './container.component.html',\r\n  styleUrl: './container.component.scss'\r\n})\r\nexport class BydGridContainerComponent extends BydAbstractGridComponent<unknown> {\r\n\r\n  @Input()\r\n  model!: string;\r\n\r\n  @Input()\r\n  colsMetaData: ColMetaData[] = [];\r\n\r\n  @ViewChild('table', { static: true }) tableElement!: ElementRef;\r\n\r\n  \r\n  private _service = inject(BydGridViewService);\r\n  \r\n  ngAfterViewInit() {\r\n    \r\n    this._grid.init(\r\n      {\r\n        elementRef: this.tableElement, \r\n        colsMetaData: this.colsMetaData,\r\n        services: {\r\n          getData$: (params) => this._service.getData$<any>(this.model, params, this.colsMetaData.map(c => c.name)),\r\n        }\r\n      }\r\n    );\r\n  }\r\n}","<div style=\"display: none;\">\r\n    <div #table ></div>\r\n</div>\r\n\r\n<ng-content></ng-content>","/*\r\n * Public API Surface of features\r\n */\r\n\r\nexport * from './models/types';\r\nexport * from './components/form/form.component';\r\nexport * from './components/grid/grid.component';\r\nexport * from './components/tags/tags.component';\r\nexport * from './components/control/control.component';\r\n\r\nexport * from './components/container/container.component';\r\n","/*\r\n * Public API Surface of features\r\n */\r\n\r\nexport * from './lib/features/grid/public-api';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Tabulator"],"mappings":"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"}