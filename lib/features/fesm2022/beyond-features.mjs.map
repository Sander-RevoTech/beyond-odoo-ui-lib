{"version":3,"file":"beyond-features.mjs","sources":["../../../projects/features/src/lib/features/grid/models/types.ts","../../../projects/features/src/lib/features/grid/services/grid-form.services.ts","../../../projects/features/src/lib/features/grid/models/cols/base-col.ts","../../../projects/features/src/lib/features/grid/models/cols/bool-col.ts","../../../projects/features/src/lib/features/grid/models/cols/date-col.ts","../../../projects/features/src/lib/features/grid/models/cols/enum-col.ts","../../../projects/features/src/lib/features/grid/models/cols/number-col.ts","../../../projects/features/src/lib/features/grid/models/cols/relation-col.ts","../../../projects/features/src/lib/features/grid/models/cols/string-col.ts","../../../projects/features/src/lib/features/grid/models/grid-filters.ts","../../../projects/features/src/lib/features/grid/models/utils.ts","../../../projects/features/src/lib/features/grid/models/grid-data.ts","../../../projects/features/src/lib/features/grid/services/grid-instance.service.ts","../../../projects/features/src/lib/features/grid/components/abstract.component.ts","../../../projects/features/src/lib/features/grid/components/form/form.component.ts","../../../projects/features/src/lib/features/grid/components/form/form.component.html","../../../projects/features/src/lib/features/grid/components/pagination/pagination.component.ts","../../../projects/features/src/lib/features/grid/components/pagination/pagination.component.html","../../../projects/features/src/lib/features/grid/components/grid/grid.component.ts","../../../projects/features/src/lib/features/grid/components/grid/grid.component.html","../../../projects/features/src/lib/features/grid/components/tags/tags.component.ts","../../../projects/features/src/lib/features/grid/components/tags/tags.component.html","../../../projects/features/src/lib/features/grid/components/control/control.component.ts","../../../projects/features/src/lib/features/grid/components/control/control.component.html","../../../projects/features/src/lib/features/grid/services/grid-session.services.ts","../../../projects/features/src/lib/features/grid/services/grid-view.service.ts","../../../projects/features/src/lib/features/grid/components/search/search.component.ts","../../../projects/features/src/lib/features/grid/components/search/search.component.html","../../../projects/features/src/lib/features/grid/components/container/container.component.ts","../../../projects/features/src/lib/features/grid/components/container/container.component.html","../../../projects/features/src/lib/features/grid/public-api.ts","../../../projects/features/src/public-api.ts","../../../projects/features/src/beyond-features.ts"],"sourcesContent":["import { InputChoicesOption } from '@beyond/form-model';\r\nimport { Observable } from 'rxjs';\r\nimport { Filter as TabulatorFilter } from 'tabulator-tables';\r\n\r\nexport enum ParameterType {\r\n  Unknown,\r\n  String,\r\n  Number,\r\n  Boolean,\r\n  DateTime,\r\n  Enum,\r\n  Relation,\r\n}\r\n\r\nexport interface ColMetaData<T = unknown> {\r\n  name: keyof T;\r\n  type: ParameterType;\r\n  isSearchField?: boolean;\r\n  notDisplayable?: boolean;\r\n  showOnSearch?: boolean;\r\n  multivalues?: boolean;\r\n  enumValues?: string[];\r\n  dataSearch$?: (search?: string) => Observable<InputChoicesOption[]>;\r\n  manyToOneOptions?: {\r\n    field: string;\r\n    model: string;\r\n    data$: (id: number[]) => Observable<string[]>;\r\n  };\r\n}\r\n\r\nexport type ActiveFilter = { key: string; values: Filter[] };\r\nexport type Filter = TabulatorFilter;\r\nexport type Sort = { field: string; dir: 'asc' | 'desc' };\r\n\r\nexport type ajaxResponse<T> = { data: T[]; last_page: number; total: number };\r\nexport type ajaxRequestFuncParams = {\r\n  filter: Filter[];\r\n  sort: Sort[];\r\n  groupBy: string | null;\r\n  page: number;\r\n  size: number;\r\n  colsMetaData: ColMetaData[];\r\n};\r\n\r\nexport type ViewType = 'grid' | 'card';\r\nexport type Preset = { name: string; filters: Filter[] };\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { InputBase, InputDropdown, InputPanel } from '@beyond/form-model';\r\nimport { isNonNullable } from '@beyond/utils';\r\nimport { of } from 'rxjs';\r\n\r\nimport { BydGridData } from '../models/grid-data';\r\nimport { Filter } from '../models/types';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydGridFormService<T> {\r\n  constructor() {}\r\n\r\n  public getFiltersForm(model: BydGridData<T>): InputBase<any>[] {\r\n    const keys = Object.keys(model.cols);\r\n    if (!keys || keys.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    return [\r\n      new InputPanel({\r\n        key: 'main-panel',\r\n        class: 'p-space-sm',\r\n        contentClass: 'grid g-space-md',\r\n        children: keys\r\n          .filter(key => model.cols[key].data.col.showOnSearch)\r\n          .map(key => model.cols[key].getInputForm())\r\n          .filter(isNonNullable)\r\n          .map(\r\n            input =>\r\n              new InputPanel({\r\n                key: 'panel',\r\n                class: 'g-col-6',\r\n                children: [input],\r\n              })\r\n          ),\r\n      }),\r\n    ];\r\n  }\r\n\r\n  public formatFiltersForm(model: BydGridData<T>, data: any): Filter[] {\r\n    return Object.keys(model.cols).reduce<Filter[]>((acc, key) => {\r\n      const filter = model.cols[key].formatInputForm(data);\r\n\r\n      if (!filter) {\r\n        return acc;\r\n      }\r\n      return [...acc, filter];\r\n    }, []);\r\n  }\r\n\r\n  public getGroupForm(model: BydGridData<T>): InputBase<any>[] {\r\n    return [\r\n      new InputPanel({\r\n        key: 'main-panel',\r\n        class: 'p-space-sm',\r\n        children: [\r\n          new InputDropdown({\r\n            key: 'group',\r\n            label: `grid.${model.scope}.groupBy`,\r\n            options: of(\r\n              Object.values(model.cols)\r\n                .filter(col => col.data.col.showOnSearch && !col.data.col.notDisplayable)\r\n                .map(group => ({\r\n                  id: group.key,\r\n                  name: group.inputLabel,\r\n                }))\r\n            ),\r\n            value: model.groupBy,\r\n          }),\r\n        ],\r\n      }),\r\n    ];\r\n  }\r\n\r\n  public formatGroupForm(data: any): string | null {\r\n    return data['group'] || null;\r\n  }\r\n}\r\n","import { InputBase } from '@beyond/form-model';\r\nimport { Observable } from 'rxjs';\r\nimport { ColumnDefinition } from 'tabulator-tables';\r\n\r\nimport { BydGridData } from '../grid-data';\r\nimport { ColMetaData, Filter } from '../types';\r\n\r\nexport const operatorMap: { [key: string]: string } = {\r\n  contains: '%',\r\n  greaterThan: '>',\r\n  lessThan: '<',\r\n  equals: '=',\r\n  notEqual: '!=',\r\n  greaterThanOrEqual: '>=',\r\n  lessThanOrEqual: '<=',\r\n};\r\nexport interface IFilterOptions {\r\n  allow: boolean;\r\n}\r\nexport interface IBaseCol {\r\n  scope: string;\r\n  col: ColMetaData;\r\n}\r\n\r\nexport class BaseCol<T> {\r\n  public data: IBaseCol;\r\n  public model: BydGridData<any>;\r\n\r\n  get key() {\r\n    return this.data.col.name;\r\n  }\r\n\r\n  get inputLabel() {\r\n    return `grid.${this.data.scope}.core.${this.data.col.name}`;\r\n  }\r\n  get filterValues(): T[] {\r\n    return (\r\n      this.model.filters\r\n        ?.get()\r\n        .find(filter => filter.key === this.key)\r\n        ?.values.map(f => f.value) || []\r\n    );\r\n  }\r\n  constructor(data: IBaseCol, model: BydGridData<any>) {\r\n    this.data = data;\r\n    this.model = model;\r\n  }\r\n\r\n  public getColDef(): ColumnDefinition {\r\n    return {\r\n      field: this.key,\r\n      title: this.inputLabel,\r\n      headerFilter: 'input',\r\n    };\r\n  }\r\n\r\n  public getInputForm(): InputBase<any> | null {\r\n    return null;\r\n  }\r\n  public formatInputForm(data: any): Filter | null {\r\n    const value = data[this.key];\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      field: this.key,\r\n      type: '=',\r\n      value: value.trim(),\r\n    };\r\n  }\r\n}\r\n","import { BaseCol } from './base-col';\r\n\r\nexport class BoolCol extends BaseCol<Boolean> {}\r\n","import { InputDatePicker } from '@beyond/form-model';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Filter } from '../types';\r\nimport { BaseCol } from './base-col';\r\n\r\nexport class DateCol extends BaseCol<Date> {\r\n  public override getInputForm() {\r\n    return new InputDatePicker({\r\n      key: this.key,\r\n      label: this.inputLabel,\r\n      rangeEnabled: true,\r\n      value: this.filterValues[0] ? { start: this.filterValues[0] } : undefined,\r\n    });\r\n  }\r\n\r\n  public override formatInputForm(data: any): Filter | null {\r\n    const value = data[this.key];\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      field: this.key,\r\n      type: 'like',\r\n      value: format(value, 'yyyy-MM-dd') + '%',\r\n    };\r\n  }\r\n}\r\n","import { InputDropdown, InputPanel } from '@beyond/form-model';\r\nimport { of } from 'rxjs';\r\n\r\nimport { BaseCol } from './base-col';\r\n\r\nexport class EnumCol extends BaseCol<string> {\r\n  public override getInputForm() {\r\n    return new InputPanel({\r\n      key: 'enum-panel',\r\n      contentClass: 'row g-0',\r\n      children: [\r\n        new InputDropdown({\r\n          key: this.key,\r\n          label: this.inputLabel,\r\n          options: of(\r\n            this.data.col.enumValues?.map(value => ({\r\n              id: value,\r\n              name: value,\r\n            })) ?? []\r\n          ),\r\n          value: this.filterValues[0],\r\n        }),\r\n      ],\r\n    });\r\n  }\r\n}\r\n","import { InputNumber, InputPanel } from '@beyond/form-model';\r\n\r\nimport { Filter } from '../types';\r\nimport { BaseCol } from './base-col';\r\n\r\nexport class NumberCol extends BaseCol<Number> {\r\n  public override getInputForm() {\r\n    return new InputPanel({\r\n      key: 'number-panel',\r\n      contentClass: 'row g-0',\r\n      children: [\r\n        new InputNumber({\r\n          key: this.key,\r\n          label: this.inputLabel,\r\n          value: this.filterValues[0]?.toString(),\r\n        }),\r\n      ],\r\n    });\r\n  }\r\n\r\n  public override formatInputForm(data: any): Filter | null {\r\n    const value = data[this.key];\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      field: this.key,\r\n      type: '=',\r\n      value: value,\r\n    };\r\n  }\r\n}\r\n","import { InputChoices, InputTextBox } from '@beyond/form-model';\r\n\r\nimport { Filter } from '../types';\r\nimport { BaseCol } from './base-col';\r\n\r\nexport class RelationCol extends BaseCol<string> {\r\n  public override getInputForm() {\r\n    if (this.data.col.dataSearch$) {\r\n      return new InputChoices({\r\n        key: this.key,\r\n        label: this.inputLabel,\r\n        class: 'pb-2',\r\n        advancedSearch$: this.data.col.dataSearch$,\r\n        value: this.filterValues[0],\r\n      });\r\n    }\r\n\r\n    return new InputTextBox({\r\n      key: this.key,\r\n      value: this.filterValues[0],\r\n    });\r\n  }\r\n\r\n  public override formatInputForm(data: any): Filter | null {\r\n    const value = data[this.key];\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      field: this.key,\r\n      type: this.data.col.multivalues ? 'in' : '=',\r\n      value: Number(value),\r\n    };\r\n  }\r\n}\r\n","import { InputTextBox } from '@beyond/form-model';\r\n\r\nimport { Filter } from '../types';\r\nimport { BaseCol } from './base-col';\r\n\r\nexport class StringCol extends BaseCol<string> {\r\n  public override getInputForm() {\r\n    // const value = this.values;\r\n\r\n    return new InputTextBox({\r\n      key: this.key,\r\n      label: this.inputLabel,\r\n      class: 'pb-2',\r\n      value: this.filterValues[0],\r\n    });\r\n  }\r\n\r\n  public override formatInputForm(data: any): Filter | null {\r\n    const value = data[this.key];\r\n\r\n    if (!value || value === '' || value.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      field: this.key,\r\n      type: 'like',\r\n      value: value,\r\n    };\r\n  }\r\n}\r\n","import { TabulatorFull as Tabulator } from 'tabulator-tables';\r\n\r\nimport { ActiveFilter, Filter, Preset } from './types';\r\n\r\nexport class BydGridFilters {\r\n  private _debounceTimer: any = null;\r\n\r\n  constructor(\r\n    public readonly scope: string,\r\n    public readonly table: Tabulator,\r\n    public readonly preset: Preset[] = []\r\n  ) {}\r\n\r\n  public get() {\r\n    return this.table.getFilters(false).reduce<ActiveFilter[]>((acc, filter) => {\r\n      const existing = acc.find(tag => tag.key === filter.field);\r\n      if (existing) {\r\n        existing.values.push(filter);\r\n      } else {\r\n        acc.push({\r\n          key: filter.field,\r\n          values: [filter],\r\n        });\r\n      }\r\n      return acc;\r\n    }, []);\r\n  }\r\n  public apply(filters: Filter[]) {\r\n    if (this._debounceTimer) {\r\n      clearTimeout(this._debounceTimer);\r\n    }\r\n\r\n    this._debounceTimer = setTimeout(() => {\r\n      this.table.setFilter(filters);\r\n    }, 500);\r\n  }\r\n\r\n  public remove(filter: Filter) {\r\n    this.table.removeFilter(filter.field, filter.type, filter.value);\r\n  }\r\n}\r\n","import { getUniqueArray } from '@beyond/utils';\r\n\r\nexport const groupBy = <T>(key: keyof T | null, data: T[]): { key: string; data: T[] }[] => {\r\n  if (!key) {\r\n    return [{ key: '', data }];\r\n  }\r\n\r\n  const keys = getUniqueArray<any>(data.map(item => item[key]));\r\n\r\n  return keys.map(k => ({\r\n    key: k.toString(),\r\n    data: data.filter(item => item[key] === k),\r\n  }));\r\n};\r\n","import { ElementRef, signal } from '@angular/core';\r\n\r\nimport { BehaviorSubject, Observable, Subject, firstValueFrom } from 'rxjs';\r\nimport { ColumnDefinition, TabulatorFull as Tabulator } from 'tabulator-tables';\r\n\r\nimport { BaseCol } from './cols/base-col';\r\nimport { BoolCol } from './cols/bool-col';\r\nimport { DateCol } from './cols/date-col';\r\nimport { EnumCol } from './cols/enum-col';\r\nimport { NumberCol } from './cols/number-col';\r\nimport { RelationCol } from './cols/relation-col';\r\nimport { StringCol } from './cols/string-col';\r\nimport { BydGridFilters } from './grid-filters';\r\nimport { ColMetaData, Filter, ParameterType, Preset, ViewType, ajaxRequestFuncParams, ajaxResponse } from './types';\r\nimport { groupBy } from './utils';\r\n\r\nexport interface IDataService<T> {\r\n  getData$: (params: ajaxRequestFuncParams) => Observable<ajaxResponse<T>>;\r\n}\r\n\r\nexport class BydGridData<T> {\r\n  get data(): T[] {\r\n    return this.table?.getData() ?? [];\r\n  }\r\n  get dataByGroup() {\r\n    return groupBy(this.groupBy, this.data);\r\n  }\r\n  get isGroup() {\r\n    return this.groupBy !== null;\r\n  }\r\n\r\n  public readonly rowClicked$ = new Subject<T>();\r\n  public table: Tabulator | null = null;\r\n  public cols: { [index: string]: BaseCol<any> } = {};\r\n  public filters: BydGridFilters | null = null;\r\n\r\n  public readonly isReady$ = new BehaviorSubject(false);\r\n  public readonly isDataReady$ = new BehaviorSubject(false);\r\n\r\n  public tableHtml: ElementRef | null = null;\r\n  public readonly displayType = signal<ViewType>('card');\r\n\r\n  public groupBy: keyof T | null = null;\r\n  public readonly totalItems = signal(0);\r\n\r\n  constructor(public readonly scope: string) {}\r\n\r\n  public init(params: {\r\n    elementRef: ElementRef;\r\n    colsMetaData: ColMetaData[];\r\n    services: IDataService<T>;\r\n    initialFilter?: Filter[];\r\n    preset?: Preset[];\r\n  }) {\r\n    this.table = new Tabulator(params.elementRef.nativeElement, {\r\n      height: '500px',\r\n      layout: 'fitColumns',\r\n      paginationMode: 'remote',\r\n      pagination: true,\r\n      paginationSize: 20,\r\n      paginationInitialPage: 1,\r\n      ajaxFiltering: true,\r\n      filterMode: 'remote',\r\n      initialFilter: params.initialFilter,\r\n\r\n      ajaxSorting: true,\r\n      sortMode: 'remote',\r\n\r\n      columns: this._getColumns(params.colsMetaData),\r\n\r\n      ajaxURL: 'dummy',\r\n      ajaxRequestFunc: (url: string, config: any, ajaxParams: ajaxRequestFuncParams): Promise<ajaxResponse<T>> => {\r\n        return firstValueFrom(\r\n          params.services.getData$({\r\n            ...ajaxParams,\r\n            groupBy: this.groupBy as string,\r\n            colsMetaData: params.colsMetaData,\r\n          })\r\n        );\r\n      },\r\n      ajaxResponse: (_: any, __: any, response: ajaxResponse<T>) => {\r\n        this.isDataReady$.next(true);\r\n        this.totalItems.set(response.total);\r\n        return response;\r\n      },\r\n    });\r\n\r\n    this.table.on('tableBuilt', () => {\r\n      this.tableHtml = params.elementRef;\r\n      this.filters = new BydGridFilters(this.scope, this.table!, params.preset);\r\n      this.isReady$.next(true);\r\n    });\r\n    this.table.on('rowClick', (_e, row) => {\r\n      this.rowClicked$.next(<T>row.getData());\r\n    });\r\n  }\r\n\r\n  public destroy() {\r\n    this.table?.destroy();\r\n  }\r\n\r\n  public setGroupBy(field: string) {\r\n    this.groupBy = field as keyof T;\r\n    this.table?.setGroupBy(field);\r\n    this.table?.setData();\r\n  }\r\n  public clearGroupBy() {\r\n    this.groupBy = null;\r\n    this.table?.setGroupBy([]);\r\n    this.table?.setData();\r\n  }\r\n\r\n  public switchView(type: ViewType) {\r\n    this.displayType.set(type);\r\n  }\r\n\r\n  private _getColumns(colsMetaData: ColMetaData[]): ColumnDefinition[] {\r\n    this.cols = Object.fromEntries(\r\n      colsMetaData.map(meta => {\r\n        const field = this._factoryCols(meta);\r\n        return [field.key, field];\r\n      })\r\n    );\r\n\r\n    return Object.keys(this.cols)\r\n      .filter(key => !key.startsWith('_'))\r\n      .map(key => ({ ...this.cols[key].getColDef() }));\r\n  }\r\n\r\n  private _factoryCols(col: ColMetaData): BaseCol<any> {\r\n    switch (col.type) {\r\n      case ParameterType.String:\r\n        return new StringCol({ scope: this.scope, col: col }, this);\r\n      case ParameterType.Enum:\r\n        return new EnumCol({ scope: this.scope, col: col }, this);\r\n      case ParameterType.Number:\r\n        return new NumberCol({ scope: this.scope, col: col }, this);\r\n      case ParameterType.DateTime:\r\n        return new DateCol({ scope: this.scope, col: col }, this);\r\n      case ParameterType.Boolean:\r\n        return new BoolCol({ scope: this.scope, col: col }, this);\r\n      case ParameterType.Relation:\r\n        return new RelationCol({ scope: this.scope, col: col }, this);\r\n      default:\r\n        return new BaseCol({ scope: this.scope, col: col }, this);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\n\r\nimport { BydGridData } from '../models/grid-data';\r\nimport { BydGridFormService } from './grid-form.services';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydGridInstanceService<T> {\r\n  public readonly grids: { [index: string]: BydGridData<T> } = {};\r\n\r\n  constructor() {}\r\n\r\n  public create(key: string) {\r\n    if (!this.has(key)) {\r\n      this.grids[key] = new BydGridData<T>(key);\r\n    }\r\n  }\r\n\r\n  public get(key: string, create: boolean = false) {\r\n    if (!this.has(key) && create) {\r\n      this.create(key);\r\n    }\r\n    return this.grids[key];\r\n  }\r\n\r\n  public has(key: string) {\r\n    return !!this.grids[key];\r\n  }\r\n}\r\n","import { Component, Input, OnInit, inject } from '@angular/core';\r\n\r\nimport { BydBaseComponent } from '@beyond/utils';\r\nimport { Observable, distinctUntilChanged, filter } from 'rxjs';\r\n\r\nimport { BydGridData } from '../models/grid-data';\r\nimport { BydGridInstanceService } from '../services/grid-instance.service';\r\n\r\n@Component({ template: '' })\r\nexport abstract class BydAbstractGridComponent<T> extends BydBaseComponent implements OnInit {\r\n  @Input()\r\n  gridId!: string;\r\n\r\n  get grid() {\r\n    return this._grid;\r\n  }\r\n  get isGroup() {\r\n    return this._grid.isGroup;\r\n  }\r\n  get data() {\r\n    return this._grid.data;\r\n  }\r\n  get dataByGroup() {\r\n    return this._grid.dataByGroup;\r\n  }\r\n  get displayType() {\r\n    return this._grid.displayType;\r\n  }\r\n  public isReady$!: Observable<boolean>;\r\n  public isDataReady$!: Observable<boolean>;\r\n\r\n  protected _grid!: BydGridData<T>;\r\n  private _dataService = inject(BydGridInstanceService);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._grid = this._dataService.get(this.gridId, true);\r\n    this.isReady$ = this._grid.isReady$.pipe(\r\n      distinctUntilChanged(),\r\n      filter(isReady => isReady)\r\n    );\r\n    this.isDataReady$ = this._grid.isDataReady$.pipe(\r\n      distinctUntilChanged(),\r\n      filter(isReady => isReady)\r\n    );\r\n  }\r\n}\r\n","import { Component, inject, signal } from '@angular/core';\r\n\r\nimport { BydFormComponent } from '@beyond/form-basic';\r\nimport { InputBase } from '@beyond/form-model';\r\nimport { BydTitleComponent } from '@beyond/ui';\r\n\r\nimport { BydGridFormService } from '../../services/grid-form.services';\r\nimport { BydAbstractGridComponent } from '../abstract.component';\r\n\r\n@Component({\r\n  selector: 'byd-grid-form',\r\n  imports: [BydFormComponent, BydTitleComponent],\r\n  templateUrl: './form.component.html',\r\n  styleUrl: './form.component.scss',\r\n})\r\nexport class BydGridFormComponent extends BydAbstractGridComponent<unknown> {\r\n  public filtersForm = signal<InputBase<any>[]>([]);\r\n  public groupForm = signal<InputBase<any>[]>([]);\r\n\r\n  private _formService = inject(BydGridFormService<unknown>);\r\n\r\n  public override ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this._registerSubscription(\r\n      this.isReady$.subscribe({\r\n        next: () => {\r\n          this.filtersForm.set(this._formService.getFiltersForm(this._grid));\r\n          this.groupForm.set(this._formService.getGroupForm(this._grid));\r\n        },\r\n      })\r\n    );\r\n  }\r\n\r\n  public applyFilters(data: any) {\r\n    const filters = this._formService.formatFiltersForm(this._grid, data);\r\n\r\n    this._grid.filters?.apply(filters);\r\n  }\r\n  public applyGroup(data: any) {\r\n    const group = this._formService.formatGroupForm(data);\r\n\r\n    if (!group) {\r\n      this._grid.clearGroupBy();\r\n      return;\r\n    }\r\n    this._grid.setGroupBy(group);\r\n  }\r\n}\r\n","<div>\r\n  <byd-title [level]=\"2\">{{ 'grid.' + this.grid.scope + '.title' }}</byd-title>\r\n</div>\r\n\r\n<div class=\"space-between\">\r\n  <div>\r\n    <byd-form\r\n      [inputs]=\"this.filtersForm()\"\r\n      (valid)=\"this.applyFilters($event)\"\r\n      [askOnDestroy]=\"true\"\r\n      [canDisplayButton]=\"false\"\r\n    ></byd-form>\r\n  </div>\r\n  <div>\r\n    <byd-form\r\n      [inputs]=\"this.groupForm()\"\r\n      (valid)=\"this.applyGroup($event)\"\r\n      [askOnDestroy]=\"true\"\r\n      [canDisplayButton]=\"false\"\r\n    ></byd-form>\r\n  </div>\r\n</div>\r\n","import { NgTemplateOutlet } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatIcon } from '@angular/material/icon';\r\n\r\nimport { TypedTemplateDirective } from '@beyond/utils';\r\n\r\nimport { BydAbstractGridComponent } from '../abstract.component';\r\n\r\ntype PageNumber = {\r\n  number: number;\r\n  icon?: string;\r\n};\r\n@Component({\r\n  selector: 'byd-grid-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.scss'],\r\n  standalone: true,\r\n  imports: [MatIcon, NgTemplateOutlet, TypedTemplateDirective],\r\n})\r\nexport class PaginationComponent extends BydAbstractGridComponent<any> {\r\n  readonly PageNumber!: { pagenumber: PageNumber };\r\n  readonly maxPageNumber = 10;\r\n\r\n  get show() {\r\n    return this.paginationGetTotalPages > 1;\r\n  }\r\n  get paginationGetTotalPages() {\r\n    return this.grid.table?.getPageMax() || 0;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public getListPage() {\r\n    if (!this.grid || !this.grid.table) {\r\n      return [];\r\n    }\r\n    const last = this.paginationGetTotalPages;\r\n\r\n    if (last < this.maxPageNumber) {\r\n      return this._computedPageNumbers(2, last);\r\n    }\r\n\r\n    const current = this.grid.table.getPage() || 0;\r\n    const rangeStart = Math.floor(current / 10) * 10;\r\n    const rangeEnd = rangeStart + 10;\r\n\r\n    return [\r\n      ...(rangeStart <= 1 ? [] : [{ number: rangeStart - 1, icon: 'more-line' }]),\r\n      ...this._computedPageNumbers(rangeStart > 1 ? rangeStart : 2, rangeEnd < last ? rangeEnd : last),\r\n      ...(rangeEnd > last ? [] : [{ number: rangeEnd, icon: 'more-line' }]),\r\n    ];\r\n  }\r\n\r\n  private _computedPageNumbers(start: number, end: number): PageNumber[] {\r\n    const pageNumbers = [];\r\n    for (let i = start; i < end; i++) {\r\n      pageNumbers.push({ number: i });\r\n    }\r\n    return pageNumbers;\r\n  }\r\n}\r\n","@if (this.grid && this.grid.table && this.show) {\r\n  <div class=\"flex-start g-space-sm align-center\">\r\n    <mat-icon (click)=\"this.grid.table.previousPage()\"> chevron_left </mat-icon>\r\n    <ng-template [ngTemplateOutlet]=\"item\" [ngTemplateOutletContext]=\"{ pagenumber: { number: 1 } }\"></ng-template>\r\n\r\n    @for (page of this.getListPage(); track page.number) {\r\n      <ng-template [ngTemplateOutlet]=\"item\" [ngTemplateOutletContext]=\"{ pagenumber: page }\"></ng-template>\r\n    }\r\n\r\n    @if (this.paginationGetTotalPages > 1) {\r\n      <ng-template\r\n        [ngTemplateOutlet]=\"item\"\r\n        [ngTemplateOutletContext]=\"{\r\n          pagenumber: { number: this.paginationGetTotalPages },\r\n        }\"\r\n      ></ng-template>\r\n    }\r\n\r\n    <mat-icon (click)=\"this.grid.table.nextPage()\"> chevron_right </mat-icon>\r\n  </div>\r\n}\r\n\r\n<ng-template #item let-pagenumber=\"pagenumber\" [typedTemplate]=\"this.PageNumber\">\r\n  <div\r\n    class=\"figure c-pointer\"\r\n    [class.is-active]=\"pagenumber.number === (this.grid.table?.getPage() || 0)\"\r\n    (click)=\"this.grid.table?.setPage(pagenumber.number)\"\r\n  >\r\n    @if (pagenumber.icon) {\r\n      <mat-icon type=\"sm\">{{ pagenumber.icon }}</mat-icon>\r\n    } @else {\r\n      {{ pagenumber.number }}\r\n    }\r\n  </div>\r\n</ng-template>\r\n","import { AsyncPipe, NgTemplateOutlet } from '@angular/common';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\n\r\nimport { BydTitleComponent } from '@beyond/ui';\r\n\r\nimport { BydAbstractGridComponent } from '../abstract.component';\r\nimport { PaginationComponent } from '../pagination/pagination.component';\r\n\r\n@Component({\r\n  selector: 'byd-grid',\r\n  imports: [PaginationComponent, NgTemplateOutlet, AsyncPipe, BydTitleComponent],\r\n  templateUrl: './grid.component.html',\r\n  styleUrl: './grid.component.scss',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class BydGridComponent<T extends { id: number }> extends BydAbstractGridComponent<T> {\r\n  @Input()\r\n  cardTemplate!: TemplateRef<{ items: T[] }>;\r\n\r\n  @Output()\r\n  rowClicked = new EventEmitter<T>();\r\n\r\n  @ViewChild('table', { static: true })\r\n  tableElement!: ElementRef;\r\n\r\n  constructor(private renderer: Renderer2) {\r\n    super();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._registerSubscription(\r\n      this.isReady$.subscribe({\r\n        next: () => {\r\n          if (this._grid.tableHtml) {\r\n            this.renderer.appendChild(this.tableElement.nativeElement, this._grid.tableHtml.nativeElement);\r\n          }\r\n          this._registerSubscription(this._grid.rowClicked$.subscribe({ next: row => this.rowClicked.emit(row) }));\r\n        },\r\n      })\r\n    );\r\n  }\r\n}\r\n","<div [style.display]=\"this.displayType() === 'grid' ? 'block' : 'none'\">\r\n  <div #table></div>\r\n</div>\r\n\r\n@if (this.isReady$ | async) {\r\n  @if (this.displayType() === 'card') {\r\n    @if (this.isGroup) {\r\n      @for (group of this.dataByGroup; track group.key) {\r\n        <byd-title [level]=\"3\">{{ group.key }}</byd-title>\r\n        <div class=\"py-space-md\">\r\n          <ng-template\r\n            [ngTemplateOutlet]=\"this.cardTemplate\"\r\n            [ngTemplateOutletContext]=\"{ items: group.data }\"\r\n          ></ng-template>\r\n        </div>\r\n      }\r\n    } @else {\r\n      <ng-template\r\n        [ngTemplateOutlet]=\"this.cardTemplate\"\r\n        [ngTemplateOutletContext]=\"{ items: this.data }\"\r\n      ></ng-template>\r\n    }\r\n  }\r\n  <div class=\"py-space-md align-center\">\r\n    <byd-grid-pagination [gridId]=\"this.gridId\"></byd-grid-pagination>\r\n  </div>\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { TranslatePipe } from '@beyond/translation';\r\nimport { BydBadgeComponent, BydButtonComponent, BydTextComponent } from '@beyond/ui';\r\n\r\nimport { Filter } from '../../models/types';\r\nimport { BydAbstractGridComponent } from '../abstract.component';\r\n\r\n@Component({\r\n  selector: 'byd-grid-tags',\r\n  templateUrl: './tags.component.html',\r\n  styleUrls: ['./tags.component.scss'],\r\n  standalone: true,\r\n  imports: [TranslatePipe, BydBadgeComponent, BydTextComponent, BydButtonComponent],\r\n})\r\nexport class BydGridTagsComponent extends BydAbstractGridComponent<unknown> {\r\n  get group() {\r\n    return this._grid.groupBy;\r\n  }\r\n  get activeFilters() {\r\n    return this._grid.filters?.get() ?? [];\r\n  }\r\n  override ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  public remove(filter: Filter) {\r\n    this._grid.filters?.remove(filter);\r\n  }\r\n  public removeGroup() {\r\n    this._grid.clearGroupBy();\r\n  }\r\n  public clear() {\r\n    this._grid.filters?.apply([]);\r\n    this._grid.clearGroupBy();\r\n  }\r\n}\r\n","<div class=\"space-between align-center\">\r\n  <div class=\"list-tag flex-start g-space-sm\">\r\n    <div class=\"group-tag flex-start g-space-xs align-center\">\r\n      @if (this.group) {\r\n        {{ 'grid.' + this.gridId + '.core.groupBy' | translate }}:\r\n        <byd-badge [value]=\"this.group\" type=\"primary\" icon=\"close\" (clickAction)=\"this.removeGroup()\"></byd-badge>\r\n      }\r\n    </div>\r\n\r\n    @for (tag of this.activeFilters; track tag.key) {\r\n      <div class=\"item-tag flex-start g-space-xs align-center\">\r\n        <div class=\"tag-title\">{{ 'grid.' + this.gridId + '.core.' + tag.key | translate }}:</div>\r\n        @for (value of tag.values; track value.field) {\r\n          <byd-badge\r\n            [value]=\"value.type + ' ' + value.value\"\r\n            type=\"primary\"\r\n            icon=\"close\"\r\n            (clickAction)=\"this.remove(value)\"\r\n          ></byd-badge>\r\n        }\r\n      </div>\r\n    }\r\n  </div>\r\n\r\n  <div class=\"reset-n-result flex-start g-space-md align-center\">\r\n    @if (this.activeFilters.length > 0) {\r\n      <div class=\"reset\">\r\n        <byd-button (action)=\"this.clear()\">\r\n          {{ 'grid.tag.reset' | translate }}\r\n        </byd-button>\r\n      </div>\r\n    }\r\n    <div class=\"result\">\r\n      <byd-text>\r\n        {{ 'grid.tag.results' | translate: { nb: this.grid.totalItems() } }}\r\n      </byd-text>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component, Input, OnInit, inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\nimport { BydButtonComponent } from '@beyond/ui';\r\n\r\nimport { Preset, ViewType } from '../../models/types';\r\nimport { BydAbstractGridComponent } from '../abstract.component';\r\nimport { BydGridFormComponent } from '../form/form.component';\r\n\r\n@Component({\r\n  selector: 'byd-grid-control',\r\n  templateUrl: './control.component.html',\r\n  styleUrls: ['./control.component.scss'],\r\n  standalone: true,\r\n  imports: [MatIcon, AsyncPipe, MatMenuModule],\r\n})\r\nexport class BydGridControlComponent extends BydAbstractGridComponent<any> implements OnInit {\r\n  @Input()\r\n  show: { switchView?: boolean; filters?: boolean; preset?: boolean } = {\r\n    switchView: true,\r\n    filters: true,\r\n    preset: true,\r\n  };\r\n\r\n  readonly dialog = inject(MatDialog);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public override ngOnInit() {\r\n    super.ngOnInit();\r\n    if (this.breakpoints.isMobile && this.show.switchView) {\r\n      this.switchView('card');\r\n    }\r\n  }\r\n\r\n  public switchView(type: ViewType) {\r\n    this._grid.switchView(type);\r\n  }\r\n\r\n  public openFilters() {\r\n    this.dialog.open<FiltersModal, FiltersModalData>(FiltersModal, {\r\n      data: { gridId: this.gridId },\r\n    });\r\n  }\r\n  public setPreset(preset: Preset) {\r\n    this.grid.filters?.apply(preset.filters);\r\n  }\r\n}\r\n\r\ninterface FiltersModalData {\r\n  gridId: string;\r\n}\r\n@Component({\r\n  selector: '',\r\n  template:\r\n    '<div class=\"p-space-md\"><byd-grid-form [gridId]=\"this.data.gridId\"></byd-grid-form><byd-button (action)=\"this.close()\">Applied</byd-button></div>',\r\n  standalone: true,\r\n  imports: [BydGridFormComponent, BydButtonComponent],\r\n})\r\nexport class FiltersModal {\r\n  public readonly dialogRef = inject(MatDialogRef<FiltersModal>);\r\n  public readonly data = inject<FiltersModalData>(MAT_DIALOG_DATA);\r\n\r\n  public close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","@if (this.isReady$ | async) {\r\n  <div class=\"d-flex\">\r\n    @if (this.show.filters) {\r\n      <div class=\"grid-control-container ml-space-xs c-pointer\">\r\n        <div (click)=\"this.openFilters()\" class=\"trigger\">\r\n          <mat-icon>filter_list</mat-icon>\r\n        </div>\r\n      </div>\r\n    }\r\n    @if (this.show.preset && (this.grid.filters?.preset?.length ?? 0 > 0)) {\r\n      <div class=\"grid-control-container ml-space-xs c-pointer\">\r\n        <div [matMenuTriggerFor]=\"menu\" class=\"trigger\">\r\n          <mat-icon>visibility</mat-icon>\r\n        </div>\r\n      </div>\r\n      <mat-menu #menu=\"matMenu\">\r\n        @for (preset of this.grid.filters?.preset; track preset.name) {\r\n          <button mat-menu-item (click)=\"this.setPreset(preset)\">\r\n            <span>{{ preset.name }}</span>\r\n          </button>\r\n        }\r\n      </mat-menu>\r\n    }\r\n    @if (this.show.switchView) {\r\n      <div class=\"grid-control-container ml-space-xs c-pointer\">\r\n        <div (click)=\"this.switchView('grid')\" class=\"trigger\" [class.active]=\"this.displayType() === 'grid'\">\r\n          <mat-icon>list</mat-icon>\r\n        </div>\r\n        <div class=\"sep\"></div>\r\n\r\n        <div (click)=\"this.switchView('card')\" class=\"trigger\" [class.active]=\"this.displayType() === 'card'\">\r\n          <mat-icon>grid_view</mat-icon>\r\n        </div>\r\n      </div>\r\n    }\r\n  </div>\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HandleComplexRequest } from '@beyond/server';\r\n\r\nimport { Filter } from '../models/types';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydGridSessionService {\r\n  private _filterData = new HandleComplexRequest<Filter[]>();\r\n\r\n  public setFilter(key: string, filter: Filter[]) {\r\n    this._filterData.update(key, filter, false);\r\n  }\r\n  public getFilter(key: string) {\r\n    return this._filterData.get(key);\r\n  }\r\n\r\n  public clearFilter(key: string): void {\r\n    this._filterData.update(key, []);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BydBaseOdooService } from '@beyond/odoo';\r\nimport { isNonNullable } from '@beyond/utils';\r\nimport { Observable, filter, map, mergeMap, of } from 'rxjs';\r\n\r\nimport { ParameterType, ajaxRequestFuncParams, ajaxResponse } from '../models/types';\r\n\r\nexport const gridSearchFieldsName = 'search';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BydGridViewService extends BydBaseOdooService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public getData$<T>(model: string, ajaxParam: ajaxRequestFuncParams): Observable<ajaxResponse<T>> {\r\n    const filterParams = () => {\r\n      const searchField = ajaxParam.filter.filter(f => f.field === gridSearchFieldsName);\r\n      const otherFields = ajaxParam.filter.filter(f => f.field !== gridSearchFieldsName);\r\n\r\n      return [\r\n        ...searchField.flatMap(f =>\r\n          this._buildOrDomain(\r\n            ajaxParam.colsMetaData.filter(c => c.isSearchField).map(f => f.name),\r\n            f.value\r\n          )\r\n        ),\r\n        ...otherFields.map(f => [f.field, f.type, f.value]),\r\n      ];\r\n    };\r\n\r\n    const orderParams = ajaxParam.sort.map(s => `${s.field} ${s.dir}`).join(',') ?? '';\r\n    const groupBy = ajaxParam.groupBy;\r\n\r\n    return this._odooService.searchCount$(model, filterParams()).pipe(\r\n      mergeMap(count =>\r\n        this._odooService\r\n          .searchRead$<T>(\r\n            model,\r\n            filterParams(),\r\n            ajaxParam.colsMetaData.filter(col => !col.notDisplayable).map(col => col.name),\r\n            {\r\n              order: groupBy ? `${groupBy} asc ${orderParams ? ',' + orderParams : ''}` : orderParams,\r\n              offset: (ajaxParam.page - 1) * ajaxParam.size,\r\n              limit: ajaxParam.size,\r\n            }\r\n          )\r\n          .pipe(\r\n            filter(isNonNullable),\r\n            map(data => {\r\n              const mapping = ajaxParam.colsMetaData\r\n                .filter(col => col.type === ParameterType.Relation)\r\n                .map(col => ({ from: col.name, to: (<String>col.name).split('_')[0] }));\r\n\r\n              if (!mapping || mapping.length === 0) {\r\n                return data;\r\n              }\r\n              return data.map(entity =>\r\n                this._handleJoinData(entity, mapping as unknown as Array<{ from?: keyof T; to: keyof T }>)\r\n              );\r\n            }),\r\n            map(data => ({\r\n              data: data,\r\n              total: count,\r\n              last_page: Math.ceil(count / ajaxParam.size),\r\n            }))\r\n          )\r\n      )\r\n    );\r\n  }\r\n\r\n  private _buildOrDomain(fields: string[], value: string) {\r\n    if (fields.length === 0) return [];\r\n\r\n    return [...fields.slice(0, -1).map(_ => '|'), ...fields.map(field => [field, 'ilike', value])];\r\n  }\r\n}\r\n","import { Component, Input, inject } from '@angular/core';\r\n\r\nimport { TextBoxComponent } from '@beyond/form-input';\r\nimport { InputTextBox } from '@beyond/form-model';\r\n\r\nimport { Filter } from '../../models/types';\r\nimport { BydGridSessionService } from '../../services/grid-session.services';\r\nimport { gridSearchFieldsName } from '../../services/grid-view.service';\r\nimport { BydAbstractGridComponent } from '../abstract.component';\r\n\r\n@Component({\r\n  selector: 'byd-grid-search',\r\n  imports: [TextBoxComponent],\r\n  templateUrl: './search.component.html',\r\n  styleUrl: './search.component.scss',\r\n})\r\nexport class BydGridSearchComponent extends BydAbstractGridComponent<any> {\r\n  @Input()\r\n  outOfBox = false;\r\n\r\n  public input = new InputTextBox();\r\n\r\n  private _session = inject(BydGridSessionService);\r\n\r\n  constructor() {\r\n    super();\r\n    this.input.createFormControl();\r\n  }\r\n  public valueChanged(value: string) {\r\n    const filters: Filter[] = [\r\n      {\r\n        field: gridSearchFieldsName,\r\n        type: 'like',\r\n        value: value.trim(),\r\n      },\r\n    ];\r\n    if (this.outOfBox) {\r\n      this._session.setFilter(this.gridId, filters);\r\n    } else {\r\n      this.grid.filters?.apply(filters);\r\n    }\r\n  }\r\n}\r\n","<byd-input-textbox [input]=\"this.input\" (valueChanged)=\"this.valueChanged($event)\"></byd-input-textbox>\r\n","import { AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild, inject } from '@angular/core';\r\n\r\nimport { ColMetaData, Filter, Preset } from '../../models/types';\r\nimport { BydGridSessionService } from '../../services/grid-session.services';\r\nimport { BydGridViewService } from '../../services/grid-view.service';\r\nimport { BydAbstractGridComponent } from '../abstract.component';\r\n\r\n@Component({\r\n  selector: 'byd-grid-container',\r\n  imports: [],\r\n  templateUrl: './container.component.html',\r\n  styleUrl: './container.component.scss',\r\n})\r\nexport class BydGridContainerComponent extends BydAbstractGridComponent<unknown> implements AfterViewInit, OnDestroy {\r\n  @Input()\r\n  model!: string;\r\n\r\n  @Input()\r\n  colsMetaData: ColMetaData<any>[] = [];\r\n\r\n  @Input()\r\n  preset?: Preset[];\r\n\r\n  @ViewChild('table', { static: true }) tableElement!: ElementRef;\r\n\r\n  private _session = inject(BydGridSessionService);\r\n  private _service = inject(BydGridViewService);\r\n\r\n  ngAfterViewInit() {\r\n    const raw = this._session.getFilter(this.gridId);\r\n\r\n    this._grid.init({\r\n      elementRef: this.tableElement,\r\n      colsMetaData: this.colsMetaData,\r\n      initialFilter: raw ?? [],\r\n      preset: this.preset,\r\n      services: {\r\n        getData$: params => this._service.getData$<any>(this.model, params),\r\n      },\r\n    });\r\n  }\r\n\r\n  override ngOnDestroy() {\r\n    this._grid.destroy();\r\n  }\r\n}\r\n","<div style=\"display: none\">\r\n  <div #table></div>\r\n</div>\r\n\r\n<ng-content></ng-content>\r\n","/*\r\n * Public API Surface of features\r\n */\r\n\r\nexport * from './models/types';\r\nexport * from './components/form/form.component';\r\nexport * from './components/grid/grid.component';\r\nexport * from './components/tags/tags.component';\r\nexport * from './components/control/control.component';\r\nexport * from './components/search/search.component';\r\n\r\nexport * from './components/container/container.component';\r\n","/*\r\n * Public API Surface of features\r\n */\r\n\r\nexport * from './lib/features/grid/public-api';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Tabulator"],"mappings":"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"}