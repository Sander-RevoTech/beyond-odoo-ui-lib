{"version":3,"file":"beyond-user.mjs","sources":["../../../projects/user/src/lib/components/login/login-card.component.ts","../../../projects/user/src/lib/components/login/login-card.component.html","../../../projects/user/src/lib/components/guard/guard.component.ts","../../../projects/user/src/lib/components/guard/guard.component.html","../../../projects/user/src/lib/guards/auth.guard.ts","../../../projects/user/src/lib/guards/feature.guard.ts","../../../projects/user/src/lib/guards/public-api.ts","../../../projects/user/src/public-api.ts","../../../projects/user/src/beyond-user.ts"],"sourcesContent":["import { Component, inject } from '@angular/core';\n\nimport { BydAuthOdooService } from '@beyond/odoo';\nimport { BydButtonComponent, CardContentComponent, CardComponent } from '@beyond/ui';\n\n@Component({\n  selector: 'byd-login-card',\n  templateUrl: './login-card.component.html',\n  styleUrls: ['./login-card.component.scss'],\n  imports: [CardComponent, CardContentComponent, BydButtonComponent],\n  standalone: true\n})\nexport class LoginCardComponent {\n  private readonly _authService = inject(BydAuthOdooService);\n\n  constructor() {}\n\n  public login() {\n    this._authService.login({\n      identifier: 'pikadjou@gmail.com',\n      password: 'blacks-159'\n    });\n  }\n}\n","<byd-card (click)=\"this.login()\">\n  <byd-card-content>\n    <byd-button (action)=\"this.login()\">{{ \"user.login\" }}</byd-button>\n  </byd-card-content>\n</byd-card>\n","import { Component, inject, Input } from '@angular/core';\n\nimport { BydMainRoute, BydRoutes } from '@beyond/menu';\nimport { BydPermissionsServices, BydPermissionLevel } from '@beyond/server';\nimport { BydButtonComponent } from '@beyond/ui';\nimport { BydAbstractComponent } from '@beyond/utils';\n\n\n@Component({\n  selector: 'cam-guard',\n  templateUrl: './guard.component.html',\n  styleUrls: ['./guard.component.scss'],\n  imports: [BydButtonComponent],\n  standalone: true\n})\nexport class GuardComponent extends BydAbstractComponent {\n  @Input()\n  level!: BydPermissionLevel;\n\n  @Input()\n  feature!: string;\n\n  @Input()\n  canDisplayErrorMessage: boolean = true;\n\n  private readonly _permissionsServices = inject(BydPermissionsServices);\n\n  constructor() {\n    super();\n  }\n\n  public isGuardValid(): boolean {\n    return this._permissionsServices.canDirectAccess(this.feature, this.level);\n  }\n\n  public goToLogin() {\n    this._router.navigateByUrl(BydRoutes.getUrl([BydMainRoute.USERLOGIN]));\n  }\n}\n","<div class=\"guard\">\n  @if(this.isGuardValid()) {\n  <div class=\"guard-valid\">\n    <ng-content></ng-content>\n  </div>\n  } @else if(!this.isGuardValid() && this.canDisplayErrorMessage) {\n  <div class=\"guard-no-valid ta-c\">\n    <!-- <cam-font-icon name=\"close-tool\" size=\"md\"></cam-font-icon> -->\n    {{ \"container.guard.content\" }}\n\n    @if(this.level === 'authenticated') {\n    <byd-button (action)=\"this.goToLogin()\"> Me connecter </byd-button>\n    }\n  </div>\n  }\n</div>\n","import { inject, Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { map } from 'rxjs/operators';\n\nimport { Observable } from 'rxjs';\n\nimport { BydRoutes } from '@beyond/menu';\nimport { BydPermissionsServices } from '@beyond/server';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard {\n    private readonly _permissionsServices = inject(BydPermissionsServices);\n\n  constructor(private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | boolean {\n    if (!this._permissionsServices.received) {\n      return this._permissionsServices.updated$.pipe(\n        map(() => {\n          if (this._permissionsServices.isAuthenticated) {\n            return true;\n          } else {\n            this.setRedirect();\n            return false;\n          }\n        })\n      );\n    }\n    if (this._permissionsServices.isAuthenticated === false) {\n      this.setRedirect();\n      return false;\n    }\n    return this._permissionsServices.isAuthenticated;\n  }\n\n  public setRedirect(): void {\n    this.router.navigateByUrl(BydRoutes.getLogin());\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\n\nimport { Observable } from 'rxjs';\n\nimport { BydRoutes } from '@beyond/menu';\nimport { BydPermissionsServices } from '@beyond/server';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeatureGuard {\n  private readonly _permissionsServices = inject(BydPermissionsServices);\n  constructor(private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean> | boolean {\n    const level = route.data['level'];\n    const feature = route.data['feature'];\n\n    if (this._permissionsServices.received === true) {\n      return this._isValidPermission(feature, level);\n    }\n    return this._permissionsServices.updated$.pipe(\n      map(() => {\n        return this._isValidPermission(feature, level);\n      })\n    );\n  }\n\n  public setRedirect(): void {\n    this.router.navigateByUrl(BydRoutes.getHome());\n  }\n\n  private _isValidPermission(feature: string, level: string) {\n    if (this._permissionsServices.canDirectAccess(feature, level)) {\n      return true;\n    }\n    this.setRedirect();\n    return false;\n  }\n}\n","/*\n * Public API Surface of users\n */\n\nexport * from './auth.guard';\nexport * from './feature.guard';\n","/*\n * Public API Surface of users\n */\nexport * from './lib/components/public-api';\nexport * from './lib/guards/public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}